Parser={};Parser._parse_aToB=function(abMap,a,fallback){if(a===undefined||a===null)throw new TypeError("undefined or null object passed to parser");if(typeof a==="string")a=a.trim();if(abMap[a]!==undefined)return abMap[a];return fallback!==undefined?fallback:a};Parser._parse_bToA=function(abMap,b,fallback){if(b===undefined||b===null)throw new TypeError("undefined or null object passed to parser");if(typeof b==="string")b=b.trim();for(const v in abMap){if(!abMap.hasOwnProperty(v))continue;if(abMap[v]===b)return v}return fallback!==undefined?fallback:b};Parser.attrChooseToFull=function(attList){if(attList.length===1)return`${Parser.attAbvToFull(attList[0])} modifier`;else{const attsTemp=[];for(let i=0;i<attList.length;++i){attsTemp.push(Parser.attAbvToFull(attList[i]))}return`${attsTemp.join(" or ")} modifier (your choice)`}};Parser.numberToText=function(number){if(number==null)throw new TypeError(`undefined or null object passed to parser`);if(Math.abs(number)>=100)return`${number}`;function getAsText(num){const abs=Math.abs(num);switch(abs){case 0:return"zero";case 1:return"one";case 2:return"two";case 3:return"three";case 4:return"four";case 5:return"five";case 6:return"six";case 7:return"seven";case 8:return"eight";case 9:return"nine";case 10:return"ten";case 11:return"eleven";case 12:return"twelve";case 13:return"thirteen";case 14:return"fourteen";case 15:return"fifteen";case 16:return"sixteen";case 17:return"seventeen";case 18:return"eighteen";case 19:return"nineteen";case 20:return"twenty";case 30:return"thirty";case 40:return"forty";case 50:return"fiddy";case 60:return"sixty";case 70:return"seventy";case 80:return"eighty";case 90:return"ninety";default:{const str=String(abs);return`${getAsText(Number(`${str[0]}0`))}-${getAsText(Number(str[1]))}`}}}return`${number<0?"negative ":""}${getAsText(number)}`};Parser.textToNumber=function(str){str=str.trim().toLowerCase();if(!isNaN(str))return Number(str);switch(str){case"zero":return 0;case"one":case"a":case"an":return 1;case"two":return 2;case"three":return 3;case"four":return 4;case"five":return 5;case"six":return 6;case"seven":return 7;case"eight":return 8;case"nine":return 9;case"ten":return 10;case"eleven":return 11;case"twelve":return 12;case"thirteen":return 13;case"fourteen":return 14;case"fifteen":return 15;case"sixteen":return 16;case"seventeen":return 17;case"eighteen":return 18;case"nineteen":return 19;case"twenty":return 20;case"thirty":return 30;case"forty":return 40;case"fifty":case"fiddy":return 50;case"sixty":return 60;case"seventy":return 70;case"eighty":return 80;case"ninety":return 90}return NaN};Parser.numberToVulgar=function(number){const isNeg=number<0;const spl=`${number}`.replace(/^-/,"").split(".");if(spl.length===1)return number;let preDot=spl[0]==="0"?"":spl[0];if(isNeg)preDot=`-${preDot}`;switch(spl[1]){case"125":return`${preDot}⅛`;case"25":return`${preDot}¼`;case"375":return`${preDot}⅜`;case"5":return`${preDot}½`;case"625":return`${preDot}⅝`;case"75":return`${preDot}¾`;case"875":return`${preDot}⅞`;default:{const asNum=Number(`0.${spl[1]}`);if(asNum.toFixed(2)===(1/3).toFixed(2))return`${preDot}⅓`;if(asNum.toFixed(2)===(2/3).toFixed(2))return`${preDot}⅔`;if(asNum.toFixed(2)===(1/6).toFixed(2))return`${preDot}⅙`;if(asNum.toFixed(2)===(5/6).toFixed(2))return`${preDot}⅚`}}return Parser.numberToFractional(number)};Parser.vulgarToNumber=function(str){const[,leading="0",vulgar=""]=/^(\d+)?([⅛¼⅜½⅝¾⅞⅓⅔⅙⅚])?$/.exec(str)||[];let out=Number(leading);switch(vulgar){case"⅛":out+=.125;break;case"¼":out+=.25;break;case"⅜":out+=.375;break;case"½":out+=.5;break;case"⅝":out+=.625;break;case"¾":out+=.75;break;case"⅞":out+=.875;break;case"⅓":out+=1/3;break;case"⅔":out+=2/3;break;case"⅙":out+=1/6;break;case"⅚":out+=5/6;break;case"":break;default:throw new Error(`Unhandled vulgar part "${vulgar}"`)}return out};Parser.numberToSuperscript=function(number){return`${number}`.split("").map((c=>isNaN(c)?c:Parser._NUMBERS_SUPERSCRIPT[Number(c)])).join("")};Parser._NUMBERS_SUPERSCRIPT="⁰¹²³⁴⁵⁶⁷⁸⁹";Parser.numberToSubscript=function(number){return`${number}`.split("").map((c=>isNaN(c)?c:Parser._NUMBERS_SUBSCRIPT[Number(c)])).join("")};Parser._NUMBERS_SUBSCRIPT="₀₁₂₃₄₅₆₇₈₉";Parser._greatestCommonDivisor=function(a,b){if(b<Number.EPSILON)return a;return Parser._greatestCommonDivisor(b,Math.floor(a%b))};Parser.numberToFractional=function(number){const len=number.toString().length-2;let denominator=10**len;let numerator=number*denominator;const divisor=Parser._greatestCommonDivisor(numerator,denominator);numerator=Math.floor(numerator/divisor);denominator=Math.floor(denominator/divisor);return denominator===1?String(numerator):`${Math.floor(numerator)}/${Math.floor(denominator)}`};Parser.ALPHABET="ABCDEFGHIJKLMNOPQRSTUVWXYZ";Parser.attAbvToFull=function(abv){return Parser._parse_aToB(Parser.ATB_ABV_TO_FULL,abv)};Parser.attFullToAbv=function(full){return Parser._parse_bToA(Parser.ATB_ABV_TO_FULL,full)};Parser.sizeAbvToFull=function(abv){return Parser._parse_aToB(Parser.SIZE_ABV_TO_FULL,abv)};Parser.getAbilityModNumber=function(abilityScore){return Math.floor((abilityScore-10)/2)};Parser.getAbilityModifier=function(abilityScore){let modifier=Parser.getAbilityModNumber(abilityScore);if(modifier>=0)modifier=`+${modifier}`;return`${modifier}`};Parser.getSpeedString=it=>{if(it.speed==null)return"—";function procSpeed(propName){function addSpeed(s){stack.push(`${propName==="walk"?"":`${propName} `}${getVal(s)} ft.${getCond(s)}`)}if(it.speed[propName]||propName==="walk")addSpeed(it.speed[propName]||0);if(it.speed.alternate&&it.speed.alternate[propName])it.speed.alternate[propName].forEach(addSpeed)}function getVal(speedProp){return speedProp.number!=null?speedProp.number:speedProp}function getCond(speedProp){return speedProp.condition?` ${Renderer.get().render(speedProp.condition)}`:""}const stack=[];if(typeof it.speed==="object"){let joiner=", ";procSpeed("walk");procSpeed("burrow");procSpeed("climb");procSpeed("fly");procSpeed("swim");if(it.speed.choose){joiner="; ";stack.push(`${it.speed.choose.from.sort().joinConjunct(", "," or ")} ${it.speed.choose.amount} ft.${it.speed.choose.note?` ${it.speed.choose.note}`:""}`)}return stack.join(joiner)+(it.speed.note?` ${it.speed.note}`:"")}else{return it.speed+(it.speed==="Varies"?"":" ft. ")}};Parser.SPEED_TO_PROGRESSIVE={walk:"walking",burrow:"burrowing",climb:"climbing",fly:"flying",swim:"swimming"};Parser.speedToProgressive=function(prop){return Parser._parse_aToB(Parser.SPEED_TO_PROGRESSIVE,prop)};Parser._addCommas=function(intNum){return`${intNum}`.replace(/(\d)(?=(\d{3})+$)/g,"$1,")};Parser.raceCreatureTypesToFull=function(creatureTypes){const hasSubOptions=creatureTypes.some((it=>it.choose));return creatureTypes.map((it=>{if(!it.choose)return Parser.monTypeToFullObj(it).asText.toTitleCase();return[...it.choose].sort(SortUtil.ascSortLower).map((sub=>Parser.monTypeToFullObj(sub).asText.toTitleCase())).joinConjunct(", "," or ")})).joinConjunct(hasSubOptions?"; ":", "," and ")};Parser.crToXp=function(cr,{isDouble:isDouble=false}={}){if(cr!=null&&cr.xp)return Parser._addCommas(`${isDouble?cr.xp*2:cr.xp}`);const toConvert=cr?cr.cr||cr:null;if(toConvert==="Unknown"||toConvert==null||!Parser.XP_CHART_ALT[toConvert])return"Unknown";if(toConvert==="0")return"0 or 10";const xp=Parser.XP_CHART_ALT[toConvert];return Parser._addCommas(`${isDouble?2*xp:xp}`)};Parser.crToXpNumber=function(cr){if(cr!=null&&cr.xp)return cr.xp;const toConvert=cr?cr.cr||cr:cr;if(toConvert==="Unknown"||toConvert==null)return null;return Parser.XP_CHART_ALT[toConvert]??null};LEVEL_TO_XP_EASY=[0,25,50,75,125,250,300,350,450,550,600,800,1e3,1100,1250,1400,1600,2e3,2100,2400,2800];LEVEL_TO_XP_MEDIUM=[0,50,100,150,250,500,600,750,900,1100,1200,1600,2e3,2200,2500,2800,3200,3900,4100,4900,5700];LEVEL_TO_XP_HARD=[0,75,150,225,375,750,900,1100,1400,1600,1900,2400,3e3,3400,3800,4300,4800,5900,6300,7300,8500];LEVEL_TO_XP_DEADLY=[0,100,200,400,500,1100,1400,1700,2100,2400,2800,3600,4500,5100,5700,6400,7200,8800,9500,10900,12700];LEVEL_TO_XP_DAILY=[0,300,600,1200,1700,3500,4e3,5e3,6e3,7500,9e3,10500,11500,13500,15e3,18e3,2e4,25e3,27e3,3e4,4e4];Parser.LEVEL_XP_REQUIRED=[0,300,900,2700,6500,14e3,23e3,34e3,48e3,64e3,85e3,1e5,12e4,14e4,165e3,195e3,225e3,265e3,305e3,355e3];Parser.CRS=["0","1/8","1/4","1/2","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30"];Parser.levelToXpThreshold=function(level){return[LEVEL_TO_XP_EASY[level],LEVEL_TO_XP_MEDIUM[level],LEVEL_TO_XP_HARD[level],LEVEL_TO_XP_DEADLY[level]]};Parser.isValidCr=function(cr){return Parser.CRS.includes(cr)};Parser.crToNumber=function(cr){if(cr==="Unknown"||cr==="—"||cr==null)return VeCt.CR_UNKNOWN;if(cr.cr)return Parser.crToNumber(cr.cr);const parts=cr.trim().split("/");if(parts.length===1){if(isNaN(parts[0]))return VeCt.CR_CUSTOM;return Number(parts[0])}else if(parts.length===2){if(isNaN(parts[0])||isNaN(Number(parts[1])))return VeCt.CR_CUSTOM;return Number(parts[0])/Number(parts[1])}else return 0};Parser.numberToCr=function(number,safe){if(safe&&typeof number==="string"&&Parser.CRS.includes(number))return number;if(number==null)return"Unknown";return Parser.numberToFractional(number)};Parser.crToPb=function(cr){if(cr==="Unknown"||cr==null)return 0;cr=cr.cr||cr;if(Parser.crToNumber(cr)<5)return 2;return Math.ceil(cr/4)+1};Parser.levelToPb=function(level){if(!level)return 2;return Math.ceil(level/4)+1};Parser.SKILL_TO_ATB_ABV={athletics:"str",acrobatics:"dex","sleight of hand":"dex",stealth:"dex",arcana:"int",history:"int",investigation:"int",nature:"int",religion:"int","animal handling":"wis",insight:"wis",medicine:"wis",perception:"wis",survival:"wis",deception:"cha",intimidation:"cha",performance:"cha",persuasion:"cha"};Parser.skillToAbilityAbv=function(skill){return Parser._parse_aToB(Parser.SKILL_TO_ATB_ABV,skill)};Parser.SKILL_TO_SHORT={athletics:"ath",acrobatics:"acro","sleight of hand":"soh",stealth:"slth",arcana:"arc",history:"hist",investigation:"invn",nature:"natr",religion:"reli","animal handling":"hndl",insight:"ins",medicine:"med",perception:"perp",survival:"surv",deception:"decp",intimidation:"intm",performance:"perf",persuasion:"pers"};Parser.skillToShort=function(skill){return Parser._parse_aToB(Parser.SKILL_TO_SHORT,skill)};Parser.LANGUAGES_STANDARD=["Common","Dwarvish","Elvish","Giant","Gnomish","Goblin","Halfling","Orc"];Parser.LANGUAGES_EXOTIC=["Abyssal","Aquan","Auran","Celestial","Draconic","Deep Speech","Ignan","Infernal","Primordial","Sylvan","Terran","Undercommon"];Parser.LANGUAGES_SECRET=["Druidic","Thieves' cant"];Parser.LANGUAGES_ALL=[...Parser.LANGUAGES_STANDARD,...Parser.LANGUAGES_EXOTIC,...Parser.LANGUAGES_SECRET].sort();Parser.dragonColorToFull=function(c){return Parser._parse_aToB(Parser.DRAGON_COLOR_TO_FULL,c)};Parser.DRAGON_COLOR_TO_FULL={B:"black",U:"blue",G:"green",R:"red",W:"white",A:"brass",Z:"bronze",C:"copper",O:"gold",S:"silver"};Parser.acToFull=function(ac,renderer){if(typeof ac==="string")return ac;renderer=renderer||Renderer.get();let stack="";let inBraces=false;for(let i=0;i<ac.length;++i){const cur=ac[i];const nxt=ac[i+1];if(cur.special!=null){if(inBraces)inBraces=false;stack+=cur.special}else if(cur.ac){const isNxtBraces=nxt&&nxt.braces;if(!inBraces&&cur.braces){stack+="(";inBraces=true}stack+=cur.ac;if(cur.from){if(cur.braces){stack+=" ("}else{stack+=inBraces?"; ":" ("}inBraces=true;stack+=cur.from.map((it=>renderer.render(it))).join(", ");if(cur.braces){stack+=")"}else if(!isNxtBraces){stack+=")";inBraces=false}}if(cur.condition)stack+=` ${renderer.render(cur.condition)}`;if(inBraces&&!isNxtBraces){stack+=")";inBraces=false}}else{stack+=cur}if(nxt){if(nxt.braces){stack+=inBraces?"; ":" (";inBraces=true}else stack+=", "}}if(inBraces)stack+=")";return stack.trim()};MONSTER_COUNT_TO_XP_MULTIPLIER=[1,1.5,2,2,2,2,2.5,2.5,2.5,2.5,3,3,3,3,4];Parser.numMonstersToXpMult=function(num,playerCount=3){const baseVal=(()=>{if(num>=MONSTER_COUNT_TO_XP_MULTIPLIER.length)return 4;return MONSTER_COUNT_TO_XP_MULTIPLIER[num-1]})();if(playerCount<3)return baseVal>=3?baseVal+1:baseVal+.5;else if(playerCount>5){return baseVal===4?3:baseVal-.5}else return baseVal};Parser.armorFullToAbv=function(armor){return Parser._parse_bToA(Parser.ARMOR_ABV_TO_FULL,armor)};Parser.weaponFullToAbv=function(weapon){return Parser._parse_bToA(Parser.WEAPON_ABV_TO_FULL,weapon)};Parser._getSourceStringFromSource=function(source){if(source&&source.source)return source.source;return source};Parser._buildSourceCache=function(dict){const out={};Object.entries(dict).forEach((([k,v])=>out[k.toLowerCase()]=v));return out};Parser._sourceFullCache=null;Parser.hasSourceFull=function(source){Parser._sourceFullCache=Parser._sourceFullCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_FULL);return!!Parser._sourceFullCache[source.toLowerCase()]};Parser._sourceAbvCache=null;Parser.hasSourceAbv=function(source){Parser._sourceAbvCache=Parser._sourceAbvCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_ABV);return!!Parser._sourceAbvCache[source.toLowerCase()]};Parser._sourceDateCache=null;Parser.hasSourceDate=function(source){Parser._sourceDateCache=Parser._sourceDateCache||Parser._buildSourceCache(Parser.SOURCE_JSON_TO_DATE);return!!Parser._sourceDateCache[source.toLowerCase()]};Parser.sourceJsonToFull=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceFull(source))return Parser._sourceFullCache[source.toLowerCase()].replace(/'/g,"’");if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToFull(source).replace(/'/g,"’");return Parser._parse_aToB(Parser.SOURCE_JSON_TO_FULL,source).replace(/'/g,"’")};Parser.sourceJsonToFullCompactPrefix=function(source){return Parser.sourceJsonToFull(source).replace(UA_PREFIX,UA_PREFIX_SHORT).replace(AL_PREFIX,AL_PREFIX_SHORT).replace(PS_PREFIX,PS_PREFIX_SHORT)};Parser.sourceJsonToAbv=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceAbv(source))return Parser._sourceAbvCache[source.toLowerCase()];if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToAbv(source);return Parser._parse_aToB(Parser.SOURCE_JSON_TO_ABV,source)};Parser.sourceJsonToDate=function(source){source=Parser._getSourceStringFromSource(source);if(Parser.hasSourceDate(source))return Parser._sourceDateCache[source.toLowerCase()];if(BrewUtil.hasSourceJson(source))return BrewUtil.sourceJsonToDate(source);return Parser._parse_aToB(Parser.SOURCE_JSON_TO_DATE,source,null)};Parser.sourceJsonToColor=function(source){return`source${Parser.sourceJsonToAbv(source)}`};Parser.stringToSlug=function(str){return str.trim().toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-")};Parser.stringToCasedSlug=function(str){return str.replace(/[^\w ]+/g,"").replace(/ +/g,"-")};Parser.ITEM_SPELLCASTING_FOCUS_CLASSES=["Bard","Cleric","Druid","Paladin","Ranger","Sorcerer","Warlock","Wizard"];Parser.itemValueToFull=function(item,opts={isShortForm:false,isSmallUnits:false}){return Parser._moneyToFull(item,"value","valueMult",opts)};Parser.itemValueToFullMultiCurrency=function(item,opts={isShortForm:false,isSmallUnits:false,multiplier:1}){return Parser._moneyToFullMultiCurrency(item,"value","valueMult",opts)};Parser.itemVehicleCostsToFull=function(item,isShortForm){return{travelCostFull:Parser._moneyToFull(item,"travelCost","travelCostMult",{isShortForm:isShortForm}),shippingCostFull:Parser._moneyToFull(item,"shippingCost","shippingCostMult",{isShortForm:isShortForm})}};Parser.spellComponentCostToFull=function(item,isShortForm){return Parser._moneyToFull(item,"cost","costMult",{isShortForm:isShortForm})};Parser._moneyToFull=function(it,prop,propMult,opts={isShortForm:false,isSmallUnits:false}){if(it[prop]==null&&it[propMult]==null)return"";if(it[prop]!=null){const{coin:coin,mult:mult}=Parser.getCurrencyAndMultiplier(it[prop],it.currencyConversion);return`${(it[prop]*mult).toLocaleString(undefined,{maximumFractionDigits:5})}${opts.isSmallUnits?`<span class="small ml-1">${coin}</span>`:` ${coin}`}`}else if(it[propMult]!=null)return opts.isShortForm?`×${it[propMult]}`:`base value ×${it[propMult]}`;return""};Parser._moneyToFullMultiCurrency=function(it,prop,propMult,{isShortForm:isShortForm,multiplier:multiplier}={}){if(it[prop]){const simplified=CurrencyUtil.doSimplifyCoins({cp:it[prop]*(multiplier??1)},{currencyConversionId:it.currencyConversion});const conversionTable=Parser.getCurrencyConversionTable(it.currencyConversion);return[...conversionTable].reverse().filter((meta=>simplified[meta.coin])).map((meta=>`${simplified[meta.coin].toLocaleString(undefined,{maximumFractionDigits:5})} ${meta.coin}`)).join(", ")}else if(it[propMult])return isShortForm?`×${it[propMult]}`:`base value ×${it[propMult]}`;return""};Parser.DEFAULT_CURRENCY_CONVERSION_TABLE=[{coin:"cp",mult:1},{coin:"sp",mult:.1},{coin:"gp",mult:.01,isFallback:true}];Parser.FULL_CURRENCY_CONVERSION_TABLE=[{coin:"cp",mult:1},{coin:"sp",mult:.1},{coin:"ep",mult:.02},{coin:"gp",mult:.01,isFallback:true},{coin:"pp",mult:.001}];Parser.getCurrencyConversionTable=function(currencyConversionId){const fromBrew=currencyConversionId?MiscUtil.get(BrewUtil.homebrewMeta,"currencyConversions",currencyConversionId):null;const conversionTable=fromBrew&&fromBrew.length?fromBrew:Parser.DEFAULT_CURRENCY_CONVERSION_TABLE;if(conversionTable!==Parser.DEFAULT_CURRENCY_CONVERSION_TABLE)conversionTable.sort(((a,b)=>SortUtil.ascSort(b.mult,a.mult)));return conversionTable};Parser.getCurrencyAndMultiplier=function(value,currencyConversionId){const conversionTable=Parser.getCurrencyConversionTable(currencyConversionId);if(!value)return conversionTable.find((it=>it.isFallback))||conversionTable[0];if(conversionTable.length===1)return conversionTable[0];if(!Number.isInteger(value)&&value<conversionTable[0].mult)return conversionTable[0];for(let i=conversionTable.length-1;i>=0;--i){if(Number.isInteger(value*conversionTable[i].mult))return conversionTable[i]}return conversionTable.last()};Parser.COIN_ABVS=["cp","sp","ep","gp","pp"];Parser.COIN_ABV_TO_FULL={cp:"copper pieces",sp:"silver pieces",ep:"electrum pieces",gp:"gold pieces",pp:"platinum pieces"};Parser.COIN_CONVERSIONS=[1,10,50,100,1e3];Parser.coinAbvToFull=function(coin){return Parser._parse_aToB(Parser.COIN_ABV_TO_FULL,coin)};Parser.itemWeightToFull=function(item,isShortForm){if(item.weight){if(Math.round(item.weight)===item.weight)return`${item.weight} lb.${item.weightNote?` ${item.weightNote}`:""}`;const weightOunces=item.weight*16;const integerPart=Math.floor(item.weight);const vulgarPart=weightOunces%16;let vulgarGlyph;switch(vulgarPart){case 2:vulgarGlyph="⅛";break;case 4:vulgarGlyph="¼";break;case 6:vulgarGlyph="⅜";break;case 8:vulgarGlyph="½";break;case 10:vulgarGlyph="⅝";break;case 12:vulgarGlyph="¾";break;case 14:vulgarGlyph="⅞";break}if(vulgarGlyph)return`${integerPart||""}${vulgarGlyph} lb.${item.weightNote?` ${item.weightNote}`:""}`;return`${item.weight<1?item.weight*16:item.weight} ${item.weight<1?"oz":"lb"}.${item.weightNote?` ${item.weightNote}`:""}`}if(item.weightMult)return isShortForm?`×${item.weightMult}`:`base weight ×${item.weightMult}`;return""};Parser.ITEM_RECHARGE_TO_FULL={round:"Every Round",restShort:"Short Rest",restLong:"Long Rest",dawn:"Dawn",dusk:"Dusk",midnight:"Midnight",special:"Special"};Parser.itemRechargeToFull=function(recharge){return Parser._parse_aToB(Parser.ITEM_RECHARGE_TO_FULL,recharge)};Parser._decimalSeparator=.1.toLocaleString().substring(1,2);Parser._numberCleanRegexp=Parser._decimalSeparator==="."?new RegExp(/[\s,]*/g,"g"):new RegExp(/[\s.]*/g,"g");Parser._costSplitRegexp=Parser._decimalSeparator==="."?new RegExp(/(\d+(\.\d+)?)([csegp]p)/):new RegExp(/(\d+(,\d+)?)([csegp]p)/);Parser.coinValueToNumber=function(value){if(!value)return 0;if(value==="Varies")return 0;value=value.replace(/\s*/,"").replace(Parser._numberCleanRegexp,"").toLowerCase();const m=Parser._costSplitRegexp.exec(value);if(!m)throw new Error(`Badly formatted value "${value}"`);const ixCoin=Parser.COIN_ABVS.indexOf(m[3]);if(!~ixCoin)throw new Error(`Unknown coin type "${m[3]}"`);return Number(m[1])*Parser.COIN_CONVERSIONS[ixCoin]};Parser.weightValueToNumber=function(value){if(!value)return 0;if(Number(value))return Number(value);else throw new Error(`Badly formatted value ${value}`)};Parser.dmgTypeToFull=function(dmgType){return Parser._parse_aToB(Parser.DMGTYPE_JSON_TO_FULL,dmgType)};Parser.skillToExplanation=function(skillType){const fromBrew=MiscUtil.get(BrewUtil.homebrewMeta,"skills",skillType);if(fromBrew)return fromBrew;return Parser._parse_aToB(Parser.SKILL_JSON_TO_FULL,skillType)};Parser.senseToExplanation=function(senseType){senseType=senseType.toLowerCase();const fromBrew=MiscUtil.get(BrewUtil.homebrewMeta,"senses",senseType);if(fromBrew)return fromBrew;return Parser._parse_aToB(Parser.SENSE_JSON_TO_FULL,senseType,["No explanation available."])};Parser.skillProficienciesToFull=function(skillProficiencies){function renderSingle(skProf){const keys=Object.keys(skProf).sort(SortUtil.ascSortLower);const ixChoose=keys.indexOf("choose");if(~ixChoose)keys.splice(ixChoose,1);const baseStack=[];keys.filter((k=>skProf[k])).forEach((k=>baseStack.push(Renderer.get().render(`{@skill ${k.toTitleCase()}}`))));const chooseStack=[];if(~ixChoose){const chObj=skProf.choose;if(chObj.from.length===18){chooseStack.push(`choose any ${!chObj.count||chObj.count===1?"skill":chObj.count}`)}else{chooseStack.push(`choose ${chObj.count||1} from ${chObj.from.map((it=>Renderer.get().render(`{@skill ${it.toTitleCase()}}`))).joinConjunct(", "," and ")}`)}}const base=baseStack.joinConjunct(", "," and ");const choose=chooseStack.join("");if(baseStack.length&&chooseStack.length)return`${base}; and ${choose}`;else if(baseStack.length)return base;else if(chooseStack.length)return choose}return skillProficiencies.map(renderSingle).join(" <i>or</i> ")};Parser.spSchoolAndSubschoolsAbvsToFull=function(school,subschools){if(!subschools||!subschools.length)return Parser.spSchoolAbvToFull(school);else return`${Parser.spSchoolAbvToFull(school)} (${subschools.map((sub=>Parser.spSchoolAbvToFull(sub))).join(", ")})`};Parser.spSchoolAbvToFull=function(schoolOrSubschool){const out=Parser._parse_aToB(Parser.SP_SCHOOL_ABV_TO_FULL,schoolOrSubschool);if(Parser.SP_SCHOOL_ABV_TO_FULL[schoolOrSubschool])return out;if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.spellSchools&&BrewUtil.homebrewMeta.spellSchools[schoolOrSubschool])return BrewUtil.homebrewMeta.spellSchools[schoolOrSubschool].full;return out};Parser.spSchoolAndSubschoolsAbvsShort=function(school,subschools){if(!subschools||!subschools.length)return Parser.spSchoolAbvToShort(school);else return`${Parser.spSchoolAbvToShort(school)} (${subschools.map((sub=>Parser.spSchoolAbvToShort(sub))).join(", ")})`};Parser.spSchoolAbvToShort=function(school){const out=Parser._parse_aToB(Parser.SP_SCHOOL_ABV_TO_SHORT,school);if(Parser.SP_SCHOOL_ABV_TO_SHORT[school])return out;if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.spellSchools&&BrewUtil.homebrewMeta.spellSchools[school])return BrewUtil.homebrewMeta.spellSchools[school].short;return out};Parser.spSchoolAbvToStyle=function(school){const stylePart=Parser.spSchoolAbvToStylePart(school);if(!stylePart)return stylePart;return`style="${stylePart}"`};Parser.spSchoolAbvToStylePart=function(school){const rawColor=MiscUtil.get(BrewUtil,"homebrewMeta","spellSchools",school,"color");if(!rawColor||!rawColor.trim())return"";const validColor=BrewUtil.getValidColor(rawColor);if(validColor.length)return`color: #${validColor};`;return""};Parser.getOrdinalForm=function(i){i=Number(i);if(isNaN(i))return"";const j=i%10;const k=i%100;if(j===1&&k!==11)return`${i}st`;if(j===2&&k!==12)return`${i}nd`;if(j===3&&k!==13)return`${i}rd`;return`${i}th`};Parser.spLevelToFull=function(level){if(level===0)return"Cantrip";else return Parser.getOrdinalForm(level)};Parser.getArticle=function(str){str=`${str}`;str=str.replace(/\d+/g,((...m)=>Parser.numberToText(m[0])));return/^[aeiou]/.test(str)?"an":"a"};Parser.spLevelToFullLevelText=function(level,dash){return`${Parser.spLevelToFull(level)}${level===0?"s":`${dash?"-":" "}level`}`};Parser.spLevelToSpellPoints=function(lvl){lvl=Number(lvl);if(isNaN(lvl)||lvl===0)return 0;return Math.ceil(1.34*lvl)};Parser.spMetaToArr=function(meta){if(!meta)return[];return Object.entries(meta).filter((([_,v])=>v)).sort(SortUtil.ascSort).map((([k])=>k))};Parser.spMetaToFull=function(meta){if(!meta)return"";const metaTags=Parser.spMetaToArr(meta);if(metaTags.length)return` (${metaTags.join(", ")})`;return""};Parser.spLevelSchoolMetaToFull=function(level,school,meta,subschools){const levelPart=level===0?Parser.spLevelToFull(level).toLowerCase():`${Parser.spLevelToFull(level)}-level`;const levelSchoolStr=level===0?`${Parser.spSchoolAbvToFull(school)} ${levelPart}`:`${levelPart} ${Parser.spSchoolAbvToFull(school).toLowerCase()}`;const metaArr=Parser.spMetaToArr(meta);if(metaArr.length||subschools&&subschools.length){const metaAndSubschoolPart=[(subschools||[]).map((sub=>Parser.spSchoolAbvToFull(sub))).join(", "),metaArr.join(", ")].filter(Boolean).join("; ").toLowerCase();return`${levelSchoolStr} (${metaAndSubschoolPart})`}return levelSchoolStr};Parser.spTimeListToFull=function(times,isStripTags){return times.map((t=>`${Parser.getTimeToFull(t)}${t.condition?`, ${isStripTags?Renderer.stripTags(t.condition):Renderer.get().render(t.condition)}`:""}`)).join(" or ")};Parser.getTimeToFull=function(time){return`${time.number?`${time.number} `:""}${time.unit==="bonus"?"bonus action":time.unit}${time.number>1?"s":""}`};RNG_SPECIAL="special";RNG_POINT="point";RNG_LINE="line";RNG_CUBE="cube";RNG_CONE="cone";RNG_RADIUS="radius";RNG_SPHERE="sphere";RNG_HEMISPHERE="hemisphere";RNG_CYLINDER="cylinder";RNG_SELF="self";RNG_SIGHT="sight";RNG_UNLIMITED="unlimited";RNG_UNLIMITED_SAME_PLANE="plane";RNG_TOUCH="touch";Parser.SP_RANGE_TYPE_TO_FULL={[RNG_SPECIAL]:"Special",[RNG_POINT]:"Point",[RNG_LINE]:"Line",[RNG_CUBE]:"Cube",[RNG_CONE]:"Cone",[RNG_RADIUS]:"Radius",[RNG_SPHERE]:"Sphere",[RNG_HEMISPHERE]:"Hemisphere",[RNG_CYLINDER]:"Cylinder",[RNG_SELF]:"Self",[RNG_SIGHT]:"Sight",[RNG_UNLIMITED]:"Unlimited",[RNG_UNLIMITED_SAME_PLANE]:"Unlimited on the same plane",[RNG_TOUCH]:"Touch"};Parser.spRangeTypeToFull=function(range){return Parser._parse_aToB(Parser.SP_RANGE_TYPE_TO_FULL,range)};UNT_FEET="feet";UNT_MILES="miles";Parser.SP_DIST_TYPE_TO_FULL={[UNT_FEET]:"Feet",[UNT_MILES]:"Miles",[RNG_SELF]:Parser.SP_RANGE_TYPE_TO_FULL[RNG_SELF],[RNG_TOUCH]:Parser.SP_RANGE_TYPE_TO_FULL[RNG_TOUCH],[RNG_SIGHT]:Parser.SP_RANGE_TYPE_TO_FULL[RNG_SIGHT],[RNG_UNLIMITED]:Parser.SP_RANGE_TYPE_TO_FULL[RNG_UNLIMITED],[RNG_UNLIMITED_SAME_PLANE]:Parser.SP_RANGE_TYPE_TO_FULL[RNG_UNLIMITED_SAME_PLANE]};Parser.spDistanceTypeToFull=function(range){return Parser._parse_aToB(Parser.SP_DIST_TYPE_TO_FULL,range)};Parser.SP_RANGE_TO_ICON={[RNG_SPECIAL]:"fa-star",[RNG_POINT]:"",[RNG_LINE]:"fa-grip-lines-vertical",[RNG_CUBE]:"fa-cube",[RNG_CONE]:"fa-traffic-cone",[RNG_RADIUS]:"fa-hockey-puck",[RNG_SPHERE]:"fa-globe",[RNG_HEMISPHERE]:"fa-globe",[RNG_CYLINDER]:"fa-database",[RNG_SELF]:"fa-street-view",[RNG_SIGHT]:"fa-eye",[RNG_UNLIMITED_SAME_PLANE]:"fa-globe-americas",[RNG_UNLIMITED]:"fa-infinity",[RNG_TOUCH]:"fa-hand-paper"};Parser.spRangeTypeToIcon=function(range){return Parser._parse_aToB(Parser.SP_RANGE_TO_ICON,range)};Parser.spRangeToShortHtml=function(range){switch(range.type){case RNG_SPECIAL:return`<span class="fas fa-fw ${Parser.spRangeTypeToIcon(range.type)} help-subtle" title="Special"></span>`;case RNG_POINT:return Parser.spRangeToShortHtml._renderPoint(range);case RNG_LINE:case RNG_CUBE:case RNG_CONE:case RNG_RADIUS:case RNG_SPHERE:case RNG_HEMISPHERE:case RNG_CYLINDER:return Parser.spRangeToShortHtml._renderArea(range)}};Parser.spRangeToShortHtml._renderPoint=function(range){const dist=range.distance;switch(dist.type){case RNG_SELF:case RNG_SIGHT:case RNG_UNLIMITED:case RNG_UNLIMITED_SAME_PLANE:case RNG_SPECIAL:case RNG_TOUCH:return`<span class="fas fa-fw ${Parser.spRangeTypeToIcon(dist.type)} help-subtle" title="${Parser.spRangeTypeToFull(dist.type)}"></span>`;case UNT_FEET:case UNT_MILES:default:return`${dist.amount} <span class="ve-small">${Parser.getSingletonUnit(dist.type,true)}</span>`}};Parser.spRangeToShortHtml._renderArea=function(range){const size=range.distance;return`<span class="fas fa-fw ${Parser.spRangeTypeToIcon(RNG_SELF)} help-subtle" title="Self"></span> ${size.amount}<span class="ve-small">-${Parser.getSingletonUnit(size.type,true)}</span> ${Parser.spRangeToShortHtml._getAreaStyleString(range)}`};Parser.spRangeToShortHtml._getAreaStyleString=function(range){return`<span class="fas fa-fw ${Parser.spRangeTypeToIcon(range.type)} help-subtle" title="${Parser.spRangeTypeToFull(range.type)}"></span>`};Parser.spRangeToFull=function(range){switch(range.type){case RNG_SPECIAL:return Parser.spRangeTypeToFull(range.type);case RNG_POINT:return Parser.spRangeToFull._renderPoint(range);case RNG_LINE:case RNG_CUBE:case RNG_CONE:case RNG_RADIUS:case RNG_SPHERE:case RNG_HEMISPHERE:case RNG_CYLINDER:return Parser.spRangeToFull._renderArea(range)}};Parser.spRangeToFull._renderPoint=function(range){const dist=range.distance;switch(dist.type){case RNG_SELF:case RNG_SIGHT:case RNG_UNLIMITED:case RNG_UNLIMITED_SAME_PLANE:case RNG_SPECIAL:case RNG_TOUCH:return Parser.spRangeTypeToFull(dist.type);case UNT_FEET:case UNT_MILES:default:return`${dist.amount} ${dist.amount===1?Parser.getSingletonUnit(dist.type):dist.type}`}};Parser.spRangeToFull._renderArea=function(range){const size=range.distance;return`Self (${size.amount}-${Parser.getSingletonUnit(size.type)}${Parser.spRangeToFull._getAreaStyleString(range)}${range.type===RNG_CYLINDER?`${size.amountSecondary!=null&&size.typeSecondary!=null?`, ${size.amountSecondary}-${Parser.getSingletonUnit(size.typeSecondary)}-high`:""} cylinder`:""})`};Parser.spRangeToFull._getAreaStyleString=function(range){switch(range.type){case RNG_SPHERE:return" radius";case RNG_HEMISPHERE:return`-radius ${range.type}`;case RNG_CYLINDER:return"-radius";default:return` ${range.type}`}};Parser.getSingletonUnit=function(unit,isShort){switch(unit){case UNT_FEET:return isShort?"ft.":"foot";case UNT_MILES:return isShort?"mi.":"mile";default:{const fromBrew=MiscUtil.get(BrewUtil.homebrewMeta,"spellDistanceUnits",unit,"singular");if(fromBrew)return fromBrew;if(unit.charAt(unit.length-1)==="s")return unit.slice(0,-1);return unit}}};Parser.RANGE_TYPES=[{type:RNG_POINT,hasDistance:true,isRequireAmount:false},{type:RNG_LINE,hasDistance:true,isRequireAmount:true},{type:RNG_CUBE,hasDistance:true,isRequireAmount:true},{type:RNG_CONE,hasDistance:true,isRequireAmount:true},{type:RNG_RADIUS,hasDistance:true,isRequireAmount:true},{type:RNG_SPHERE,hasDistance:true,isRequireAmount:true},{type:RNG_HEMISPHERE,hasDistance:true,isRequireAmount:true},{type:RNG_CYLINDER,hasDistance:true,isRequireAmount:true},{type:RNG_SPECIAL,hasDistance:false,isRequireAmount:false}];Parser.DIST_TYPES=[{type:RNG_SELF,hasAmount:false},{type:RNG_TOUCH,hasAmount:false},{type:UNT_FEET,hasAmount:true},{type:UNT_MILES,hasAmount:true},{type:RNG_SIGHT,hasAmount:false},{type:RNG_UNLIMITED_SAME_PLANE,hasAmount:false},{type:RNG_UNLIMITED,hasAmount:false}];Parser.spComponentsToFull=function(comp,level){if(!comp)return"None";const out=[];if(comp.v)out.push("V");if(comp.s)out.push("S");if(comp.m!=null)out.push(`M${comp.m!==true?` (${comp.m.text!=null?comp.m.text:comp.m})`:""}`);if(comp.r)out.push(`R (${level} gp)`);return out.join(", ")||"None"};Parser.SP_END_TYPE_TO_FULL={dispel:"dispelled",trigger:"triggered",discharge:"discharged"};Parser.spEndTypeToFull=function(type){return Parser._parse_aToB(Parser.SP_END_TYPE_TO_FULL,type)};Parser.spDurationToFull=function(dur){let hasSubOr=false;const outParts=dur.map((d=>{switch(d.type){case"special":return"Special";case"instant":return`Instantaneous${d.condition?` (${d.condition})`:""}`;case"timed":return`${d.concentration?"Concentration, ":""}${d.concentration?"u":d.duration.upTo?"U":""}${d.concentration||d.duration.upTo?"p to ":""}${d.duration.amount} ${d.duration.amount===1?d.duration.type:`${d.duration.type}s`}`;case"permanent":{if(d.ends){const endsToJoin=d.ends.map((m=>Parser.spEndTypeToFull(m)));hasSubOr=hasSubOr||endsToJoin.length>1;return`Until ${endsToJoin.joinConjunct(", "," or ")}`}else{return"Permanent"}}}}));return`${outParts.joinConjunct(hasSubOr?"; ":", "," or ")}${dur.length>1?" (see below)":""}`};Parser.DURATION_TYPES=[{type:"instant",full:"Instantaneous"},{type:"timed",hasAmount:true},{type:"permanent",hasEnds:true},{type:"special"}];Parser.DURATION_AMOUNT_TYPES=["turn","round","minute","hour","day","week","year"];Parser.spClassesToFull=function(sp,isTextOnly,subclassLookup={}){const fromSubclassList=Renderer.spell.getCombinedClasses(sp,"fromSubclass");const fromSubclasses=Parser.spSubclassesToFull(fromSubclassList,isTextOnly,subclassLookup);const fromClassList=Renderer.spell.getCombinedClasses(sp,"fromClassList");return`${Parser.spMainClassesToFull(fromClassList,isTextOnly)}${fromSubclasses?`, ${fromSubclasses}`:""}`};Parser.spMainClassesToFull=function(fromClassList,textOnly=false){return fromClassList.map((c=>({hash:UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](c),c:c}))).filter((it=>!ExcludeUtil.isInitialised||!ExcludeUtil.isExcluded(it.hash,"class",it.c.source))).sort(((a,b)=>SortUtil.ascSort(a.c.name,b.c.name))).map((it=>textOnly?it.c.name:`<a title="${it.c.definedInSource?`Class source`:"Source"}: ${Parser.sourceJsonToFull(it.c.source)}${it.c.definedInSource?`. Spell list defined in: ${Parser.sourceJsonToFull(it.c.definedInSource)}.`:""}" href="${UrlUtil.PG_CLASSES}#${it.hash}">${it.c.name}</a>`)).join(", ")||""};Parser.spSubclassesToFull=function(fromSubclassList,textOnly,subclassLookup={}){return fromSubclassList.filter((mt=>{if(!ExcludeUtil.isInitialised)return true;const excludeClass=ExcludeUtil.isExcluded(UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](mt.class),"class",mt.class.source);if(excludeClass)return false;const fromLookup=MiscUtil.get(subclassLookup,mt.class.source,mt.class.name,mt.subclass.source,mt.subclass.name);if(!fromLookup)return true;const excludeSubclass=ExcludeUtil.isExcluded(UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:fromLookup.name||mt.subclass.name,source:mt.subclass.source}),"subclass",mt.subclass.source);return!excludeSubclass})).sort(((a,b)=>{const byName=SortUtil.ascSort(a.class.name,b.class.name);return byName||SortUtil.ascSort(a.subclass.name,b.subclass.name)})).map((c=>Parser._spSubclassItem(c,textOnly,subclassLookup))).join(", ")||""};Parser._spSubclassItem=function(fromSubclass,textOnly,subclassLookup){const c=fromSubclass.class;const sc=fromSubclass.subclass;const text=`${sc.name}${sc.subSubclass?` (${sc.subSubclass})`:""}`;if(textOnly)return text;const classPart=`<a href="${UrlUtil.PG_CLASSES}#${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](c)}" title="Source: ${Parser.sourceJsonToFull(c.source)}">${c.name}</a>`;const fromLookup=subclassLookup?MiscUtil.get(subclassLookup,c.source,c.name,sc.source,sc.name):null;if(fromLookup)return`<a class="italic" href="${UrlUtil.PG_CLASSES}#${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](c)}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:{shortName:sc.name,source:sc.source}})}" title="Source: ${Parser.sourceJsonToFull(fromSubclass.subclass.source)}">${text}</a> ${classPart}`;else return`<span class="italic" title="Source: ${Parser.sourceJsonToFull(fromSubclass.subclass.source)}">${text}</span> ${classPart}`};Parser.SPELL_ATTACK_TYPE_TO_FULL={};Parser.SPELL_ATTACK_TYPE_TO_FULL["M"]="Melee";Parser.SPELL_ATTACK_TYPE_TO_FULL["R"]="Ranged";Parser.SPELL_ATTACK_TYPE_TO_FULL["O"]="Other/Unknown";Parser.spAttackTypeToFull=function(type){return Parser._parse_aToB(Parser.SPELL_ATTACK_TYPE_TO_FULL,type)};Parser.SPELL_AREA_TYPE_TO_FULL={ST:"Single Target",MT:"Multiple Targets",C:"Cube",N:"Cone",Y:"Cylinder",S:"Sphere",R:"Circle",Q:"Square",L:"Line",H:"Hemisphere",W:"Wall"};Parser.spAreaTypeToFull=function(type){return Parser._parse_aToB(Parser.SPELL_AREA_TYPE_TO_FULL,type)};Parser.SP_MISC_TAG_TO_FULL={HL:"Healing",THP:"Grants Temporary Hit Points",SGT:"Requires Sight",PRM:"Permanent Effects",SCL:"Scaling Effects",SMN:"Summons Creature",MAC:"Modifies AC",TP:"Teleportation",FMV:"Forced Movement"};Parser.spMiscTagToFull=function(type){return Parser._parse_aToB(Parser.SP_MISC_TAG_TO_FULL,type)};Parser.SP_CASTER_PROGRESSION_TO_FULL={full:"Full","1/2":"Half","1/3":"One-Third",pact:"Pact Magic"};Parser.spCasterProgressionToFull=function(type){return Parser._parse_aToB(Parser.SP_CASTER_PROGRESSION_TO_FULL,type)};Parser.monTypeToFullObj=function(type){const out={type:"",tags:[],asText:""};if(typeof type==="string"){out.type=type;out.asText=type;return out}const tempTags=[];if(type.tags){for(const tag of type.tags){if(typeof tag==="string"){out.tags.push(tag);tempTags.push(tag)}else{out.tags.push(tag.tag);tempTags.push(`${tag.prefix} ${tag.tag}`)}}}out.type=type.type;if(type.swarmSize){out.tags.push("swarm");out.asText=`swarm of ${Parser.sizeAbvToFull(type.swarmSize).toLowerCase()} ${Parser.monTypeToPlural(type.type)}`;out.swarmSize=type.swarmSize}else{out.asText=`${type.type}`}if(tempTags.length)out.asText+=` (${tempTags.join(", ")})`;return out};Parser.monTypeToPlural=function(type){return Parser._parse_aToB(Parser.MON_TYPE_TO_PLURAL,type)};Parser.monTypeFromPlural=function(type){return Parser._parse_bToA(Parser.MON_TYPE_TO_PLURAL,type)};Parser.monCrToFull=function(cr,{xp:xp=null,isMythic:isMythic=false}={}){if(cr==null)return"";if(typeof cr==="string"){if(Parser.crToNumber(cr)>=VeCt.CR_CUSTOM)return`${cr}${xp!=null?` (${xp} XP)`:""}`;xp=xp!=null?Parser._addCommas(xp):Parser.crToXp(cr);return`${cr} (${xp} XP${isMythic?`, or ${Parser.crToXp(cr,{isDouble:true})} XP as a mythic encounter`:""})`}else{const stack=[Parser.monCrToFull(cr.cr,{xp:cr.xp,isMythic:isMythic})];if(cr.lair)stack.push(`${Parser.monCrToFull(cr.lair)} when encountered in lair`);if(cr.coven)stack.push(`${Parser.monCrToFull(cr.coven)} when part of a coven`);return stack.joinConjunct(", "," or ")}};Parser.getFullImmRes=function(toParse){if(!toParse.length)return"";let maxDepth=0;function toString(it,depth=0){maxDepth=Math.max(maxDepth,depth);if(typeof it==="string"){return it}else if(it.special){return it.special}else{const stack=[];if(it.preNote)stack.push(it.preNote);const prop=it.immune?"immune":it.resist?"resist":it.vulnerable?"vulnerable":null;if(prop){const toJoin=it[prop].map((nxt=>toString(nxt,depth+1)));stack.push(depth?toJoin.join(maxDepth?"; ":", "):toJoin.joinConjunct(", "," and "))}if(it.note)stack.push(it.note);return stack.join(" ")}}const arr=toParse.map((it=>toString(it)));if(arr.length<=1)return arr.join("");let out="";for(let i=0;i<arr.length-1;++i){const it=arr[i];const nxt=arr[i+1];const orig=toParse[i];const origNxt=toParse[i+1];out+=it;out+=it.includes(",")||nxt.includes(",")||orig&&orig.cond||origNxt&&origNxt.cond?"; ":", "}out+=arr.last();return out};Parser.getFullCondImm=function(condImm,isPlainText){function render(condition){return isPlainText?condition:Renderer.get().render(`{@condition ${condition}}`)}return condImm.map((it=>{if(it.special)return it.special;if(it.conditionImmune)return`${it.preNote?`${it.preNote} `:""}${it.conditionImmune.map(render).join(", ")}${it.note?` ${it.note}`:""}`;return render(it)})).sort(SortUtil.ascSortLower).join(", ")};Parser.MON_SENSE_TAG_TO_FULL={B:"blindsight",D:"darkvision",SD:"superior darkvision",T:"tremorsense",U:"truesight"};Parser.monSenseTagToFull=function(tag){return Parser._parse_aToB(Parser.MON_SENSE_TAG_TO_FULL,tag)};Parser.MON_SPELLCASTING_TAG_TO_FULL={P:"Psionics",I:"Innate",F:"Form Only",S:"Shared",CA:"Class, Artificer",CB:"Class, Bard",CC:"Class, Cleric",CD:"Class, Druid",CP:"Class, Paladin",CR:"Class, Ranger",CS:"Class, Sorcerer",CL:"Class, Warlock",CW:"Class, Wizard"};Parser.monSpellcastingTagToFull=function(tag){return Parser._parse_aToB(Parser.MON_SPELLCASTING_TAG_TO_FULL,tag)};Parser.MON_MISC_TAG_TO_FULL={AOE:"Has Areas of Effect",MW:"Has Weapon Attacks, Melee",RW:"Has Weapon Attacks, Ranged",RNG:"Has Ranged Weapons",RCH:"Has Reach Attacks",THW:"Has Thrown Weapons"};Parser.monMiscTagToFull=function(tag){return Parser._parse_aToB(Parser.MON_MISC_TAG_TO_FULL,tag)};Parser.MON_LANGUAGE_TAG_TO_FULL={AB:"Abyssal",AQ:"Aquan",AU:"Auran",C:"Common",CE:"Celestial",CS:"Can't Speak Known Languages",D:"Dwarvish",DR:"Draconic",DS:"Deep Speech",DU:"Druidic",E:"Elvish",G:"Gnomish",GI:"Giant",GO:"Goblin",GTH:"Gith",H:"Halfling",I:"Infernal",IG:"Ignan",LF:"Languages Known in Life",O:"Orc",OTH:"Other",P:"Primordial",S:"Sylvan",T:"Terran",TC:"Thieves' cant",TP:"Telepathy",U:"Undercommon",X:"Any (Choose)",XX:"All"};Parser.monLanguageTagToFull=function(tag){return Parser._parse_aToB(Parser.MON_LANGUAGE_TAG_TO_FULL,tag)};Parser.ENVIRONMENTS=["arctic","coastal","desert","forest","grassland","hill","mountain","swamp","underdark","underwater","urban"];Parser.PSI_ABV_TYPE_TALENT="T";Parser.PSI_ABV_TYPE_DISCIPLINE="D";Parser.PSI_ORDER_NONE="None";Parser.psiTypeToFull=type=>Parser.psiTypeToMeta(type).full;Parser.psiTypeToMeta=type=>{let out={};if(type===Parser.PSI_ABV_TYPE_TALENT)out={hasOrder:false,full:"Talent"};else if(type===Parser.PSI_ABV_TYPE_DISCIPLINE)out={hasOrder:true,full:"Discipline"};else if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.psionicTypes&&BrewUtil.homebrewMeta.psionicTypes[type])out=BrewUtil.homebrewMeta.psionicTypes[type];out.full=out.full||"Unknown";out.short=out.short||out.full;return out};Parser.psiOrderToFull=order=>order===undefined?Parser.PSI_ORDER_NONE:order;Parser.prereqSpellToFull=function(spell,{isTextOnly:isTextOnly=false}={}){if(spell){const[text,suffix]=spell.split("#");if(!suffix)return isTextOnly?spell:Renderer.get().render(`{@spell ${spell}}`);else if(suffix==="c")return(isTextOnly?Renderer.stripTags:Renderer.get().render.bind(Renderer.get()))(`{@spell ${text}} cantrip`);else if(suffix==="x")return(isTextOnly?Renderer.stripTags:Renderer.get().render.bind(Renderer.get()))("{@spell hex} spell or a warlock feature that curses")}else return VeCt.STR_NONE};Parser.prereqPactToFull=function(pact){if(pact==="Chain")return"Pact of the Chain";if(pact==="Tome")return"Pact of the Tome";if(pact==="Blade")return"Pact of the Blade";if(pact==="Talisman")return"Pact of the Talisman";return pact};Parser.prereqPatronToShort=function(patron){if(patron==="Any")return patron;const mThe=/^The (.*?)$/.exec(patron);if(mThe)return mThe[1];return patron};Parser.OPT_FEATURE_TYPE_TO_FULL={AI:"Artificer Infusion",ED:"Elemental Discipline",EI:"Eldritch Invocation",MM:"Metamagic",MV:"Maneuver","MV:B":"Maneuver, Battle Master","MV:C2-UA":"Maneuver, Cavalier V2 (UA)","AS:V1-UA":"Arcane Shot, V1 (UA)","AS:V2-UA":"Arcane Shot, V2 (UA)",AS:"Arcane Shot",OTH:"Other","FS:F":"Fighting Style; Fighter","FS:B":"Fighting Style; Bard","FS:P":"Fighting Style; Paladin","FS:R":"Fighting Style; Ranger",PB:"Pact Boon",OR:"Onomancy Resonant",RN:"Rune Knight Rune",AF:"Alchemical Formula"};Parser.optFeatureTypeToFull=function(type){if(Parser.OPT_FEATURE_TYPE_TO_FULL[type])return Parser.OPT_FEATURE_TYPE_TO_FULL[type];if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.optionalFeatureTypes&&BrewUtil.homebrewMeta.optionalFeatureTypes[type])return BrewUtil.homebrewMeta.optionalFeatureTypes[type];return type};Parser.CHAR_OPTIONAL_FEATURE_TYPE_TO_FULL={SG:"Supernatural Gift",OF:"Optional Feature",DG:"Dark Gift","RF:B":"Replacement Feature: Background"};Parser.charCreationOptionTypeToFull=function(type){if(Parser.CHAR_OPTIONAL_FEATURE_TYPE_TO_FULL[type])return Parser.CHAR_OPTIONAL_FEATURE_TYPE_TO_FULL[type];if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.charOption&&BrewUtil.homebrewMeta.charOption[type])return BrewUtil.homebrewMeta.charOption[type];return type};Parser.alignmentAbvToFull=function(alignment){if(!alignment)return null;if(typeof alignment==="object"){if(alignment.special!=null){return alignment.special}else{return`${alignment.alignment.map((a=>Parser.alignmentAbvToFull(a))).join(" ")}${alignment.chance?` (${alignment.chance}%)`:""}${alignment.note?` (${alignment.note})`:""}`}}else{alignment=alignment.toUpperCase();switch(alignment){case"L":return"lawful";case"N":return"neutral";case"NX":return"neutral (law/chaos axis)";case"NY":return"neutral (good/evil axis)";case"C":return"chaotic";case"G":return"good";case"E":return"evil";case"U":return"unaligned";case"A":return"any alignment"}return alignment}};Parser.alignmentListToFull=function(alignList){if(alignList.some((it=>typeof it!=="string"))){if(alignList.some((it=>typeof it==="string")))throw new Error(`Mixed alignment types: ${JSON.stringify(alignList)}`);alignList=alignList.filter((it=>it.alignment===undefined||it.alignment!=null));return alignList.map((it=>it.special!=null||it.chance!=null||it.note!=null?Parser.alignmentAbvToFull(it):Parser.alignmentListToFull(it.alignment))).join(" or ")}else{if(alignList.length===1)return Parser.alignmentAbvToFull(alignList[0]);if(alignList.length===2){return alignList.map((a=>Parser.alignmentAbvToFull(a))).join(" ")}if(alignList.length===3){if(alignList.includes("NX")&&alignList.includes("NY")&&alignList.includes("N"))return"any neutral alignment"}if(alignList.length===5){if(!alignList.includes("G"))return"any non-good alignment";if(!alignList.includes("E"))return"any non-evil alignment";if(!alignList.includes("L"))return"any non-lawful alignment";if(!alignList.includes("C"))return"any non-chaotic alignment"}if(alignList.length===4){if(!alignList.includes("L")&&!alignList.includes("NX"))return"any chaotic alignment";if(!alignList.includes("G")&&!alignList.includes("NY"))return"any evil alignment";if(!alignList.includes("C")&&!alignList.includes("NX"))return"any lawful alignment";if(!alignList.includes("E")&&!alignList.includes("NY"))return"any good alignment"}throw new Error(`Unmapped alignment: ${JSON.stringify(alignList)}`)}};Parser.weightToFull=function(lbs,isSmallUnit){const tons=Math.floor(lbs/2e3);lbs=lbs-2e3*tons;return[tons?`${tons}${isSmallUnit?`<span class="ve-small ml-1">`:" "}ton${tons===1?"":"s"}${isSmallUnit?`</span>`:""}`:null,lbs?`${lbs}${isSmallUnit?`<span class="ve-small ml-1">`:" "}lb.${isSmallUnit?`</span>`:""}`:null].filter(Boolean).join(", ")};Parser.ITEM_RARITIES=["none","common","uncommon","rare","very rare","legendary","artifact","unknown","unknown (magic)","other"];Parser.CAT_ID_CREATURE=1;Parser.CAT_ID_SPELL=2;Parser.CAT_ID_BACKGROUND=3;Parser.CAT_ID_ITEM=4;Parser.CAT_ID_CLASS=5;Parser.CAT_ID_CONDITION=6;Parser.CAT_ID_FEAT=7;Parser.CAT_ID_ELDRITCH_INVOCATION=8;Parser.CAT_ID_PSIONIC=9;Parser.CAT_ID_RACE=10;Parser.CAT_ID_OTHER_REWARD=11;Parser.CAT_ID_VARIANT_OPTIONAL_RULE=12;Parser.CAT_ID_ADVENTURE=13;Parser.CAT_ID_DEITY=14;Parser.CAT_ID_OBJECT=15;Parser.CAT_ID_TRAP=16;Parser.CAT_ID_HAZARD=17;Parser.CAT_ID_QUICKREF=18;Parser.CAT_ID_CULT=19;Parser.CAT_ID_BOON=20;Parser.CAT_ID_DISEASE=21;Parser.CAT_ID_METAMAGIC=22;Parser.CAT_ID_MANEUVER_BATTLEMASTER=23;Parser.CAT_ID_TABLE=24;Parser.CAT_ID_TABLE_GROUP=25;Parser.CAT_ID_MANEUVER_CAVALIER=26;Parser.CAT_ID_ARCANE_SHOT=27;Parser.CAT_ID_OPTIONAL_FEATURE_OTHER=28;Parser.CAT_ID_FIGHTING_STYLE=29;Parser.CAT_ID_CLASS_FEATURE=30;Parser.CAT_ID_VEHICLE=31;Parser.CAT_ID_PACT_BOON=32;Parser.CAT_ID_ELEMENTAL_DISCIPLINE=33;Parser.CAT_ID_ARTIFICER_INFUSION=34;Parser.CAT_ID_SHIP_UPGRADE=35;Parser.CAT_ID_INFERNAL_WAR_MACHINE_UPGRADE=36;Parser.CAT_ID_ONOMANCY_RESONANT=37;Parser.CAT_ID_RUNE_KNIGHT_RUNE=37;Parser.CAT_ID_ALCHEMICAL_FORMULA=38;Parser.CAT_ID_MANEUVER=39;Parser.CAT_ID_SUBCLASS=40;Parser.CAT_ID_SUBCLASS_FEATURE=41;Parser.CAT_ID_ACTION=42;Parser.CAT_ID_LANGUAGE=43;Parser.CAT_ID_BOOK=44;Parser.CAT_ID_PAGE=45;Parser.CAT_ID_LEGENDARY_GROUP=46;Parser.CAT_ID_CHAR_CREATION_OPTIONS=47;Parser.CAT_ID_RECIPES=48;Parser.CAT_ID_TO_FULL={};Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CREATURE]="Bestiary";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SPELL]="Spell";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_BACKGROUND]="Background";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ITEM]="Item";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CLASS]="Class";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CONDITION]="Condition";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_FEAT]="Feat";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ELDRITCH_INVOCATION]="Eldritch Invocation";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PSIONIC]="Psionic";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_RACE]="Race";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_OTHER_REWARD]="Other Reward";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_VARIANT_OPTIONAL_RULE]="Variant/Optional Rule";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ADVENTURE]="Adventure";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_DEITY]="Deity";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_OBJECT]="Object";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TRAP]="Trap";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_HAZARD]="Hazard";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_QUICKREF]="Quick Reference";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CULT]="Cult";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_BOON]="Boon";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_DISEASE]="Disease";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_METAMAGIC]="Metamagic";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_MANEUVER_BATTLEMASTER]="Maneuver; Battlemaster";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TABLE]="Table";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_TABLE_GROUP]="Table";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_MANEUVER_CAVALIER]="Maneuver; Cavalier";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ARCANE_SHOT]="Arcane Shot";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_OPTIONAL_FEATURE_OTHER]="Optional Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_FIGHTING_STYLE]="Fighting Style";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CLASS_FEATURE]="Class Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_VEHICLE]="Vehicle";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PACT_BOON]="Pact Boon";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ELEMENTAL_DISCIPLINE]="Elemental Discipline";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ARTIFICER_INFUSION]="Infusion";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SHIP_UPGRADE]="Ship Upgrade";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_INFERNAL_WAR_MACHINE_UPGRADE]="Infernal War Machine Upgrade";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ONOMANCY_RESONANT]="Onomancy Resonant";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_RUNE_KNIGHT_RUNE]="Rune Knight Rune";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ALCHEMICAL_FORMULA]="Alchemical Formula";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_MANEUVER]="Maneuver";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SUBCLASS]="Subclass";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_SUBCLASS_FEATURE]="Subclass Feature";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_ACTION]="Action";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_LANGUAGE]="Language";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_BOOK]="Book";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_PAGE]="Page";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_LEGENDARY_GROUP]="Legendary Group";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_CHAR_CREATION_OPTIONS]="Character Creation Option";Parser.CAT_ID_TO_FULL[Parser.CAT_ID_RECIPES]="Recipe";Parser.pageCategoryToFull=function(catId){return Parser._parse_aToB(Parser.CAT_ID_TO_FULL,catId)};Parser.CAT_ID_TO_PROP={};Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CREATURE]="monster";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SPELL]="spell";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_BACKGROUND]="background";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ITEM]="item";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CLASS]="class";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CONDITION]="condition";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_FEAT]="feat";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PSIONIC]="psionic";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_RACE]="race";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_OTHER_REWARD]="reward";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_VARIANT_OPTIONAL_RULE]="variantrule";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ADVENTURE]="adventure";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_DEITY]="deity";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_OBJECT]="object";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TRAP]="trap";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_HAZARD]="hazard";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CULT]="cult";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_BOON]="boon";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_DISEASE]="condition";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TABLE]="table";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_TABLE_GROUP]="tableGroup";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_VEHICLE]="vehicle";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ELDRITCH_INVOCATION]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_MANEUVER_CAVALIER]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ARCANE_SHOT]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_OPTIONAL_FEATURE_OTHER]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_FIGHTING_STYLE]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_METAMAGIC]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_MANEUVER_BATTLEMASTER]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PACT_BOON]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ELEMENTAL_DISCIPLINE]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ARTIFICER_INFUSION]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SHIP_UPGRADE]="vehicleUpgrade";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_INFERNAL_WAR_MACHINE_UPGRADE]="vehicleUpgrade";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ONOMANCY_RESONANT]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_RUNE_KNIGHT_RUNE]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ALCHEMICAL_FORMULA]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_MANEUVER]="optionalfeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_QUICKREF]=null;Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CLASS_FEATURE]="classFeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SUBCLASS]="subclass";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_SUBCLASS_FEATURE]="subclassFeature";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_ACTION]="action";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_LANGUAGE]="language";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_BOOK]="book";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_PAGE]=null;Parser.CAT_ID_TO_PROP[Parser.CAT_ID_LEGENDARY_GROUP]=null;Parser.CAT_ID_TO_PROP[Parser.CAT_ID_CHAR_CREATION_OPTIONS]="charoption";Parser.CAT_ID_TO_PROP[Parser.CAT_ID_RECIPES]="recipe";Parser.pageCategoryToProp=function(catId){return Parser._parse_aToB(Parser.CAT_ID_TO_PROP,catId)};Parser.ABIL_ABVS=["str","dex","con","int","wis","cha"];Parser.spClassesToCurrentAndLegacy=function(fromClassList){const current=[];const legacy=[];fromClassList.forEach((cls=>{if(cls.name==="Artificer"&&cls.source==="UAArtificer"||cls.name==="Artificer (Revisited)"&&cls.source==="UAArtificerRevisited")legacy.push(cls);else current.push(cls)}));return[current,legacy]};Parser.spSubclassesToCurrentAndLegacyFull=function(sp,subclassLookup){const fromSubclass=Renderer.spell.getCombinedClasses(sp,"fromSubclass");if(!fromSubclass.length)return["",""];const out=[[],[]];const curNames=new Set;const toCheck=[];fromSubclass.filter((c=>{const excludeClass=ExcludeUtil.isExcluded(UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:c.class.name,source:c.class.source}),"class",c.class.source);if(excludeClass)return false;const fromLookup=MiscUtil.get(subclassLookup,c.class.source,c.class.name,c.subclass.source,c.subclass.name);const excludeSubclass=ExcludeUtil.isExcluded(UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:(fromLookup||{}).name||c.subclass.name,source:c.subclass.source}),"subclass",c.subclass.source);return!excludeSubclass})).sort(((a,b)=>{const byName=SortUtil.ascSort(a.subclass.name,b.subclass.name);return byName||SortUtil.ascSort(a.class.name,b.class.name)})).forEach((c=>{const nm=c.subclass.name;const src=c.subclass.source;const toAdd=Parser._spSubclassItem(c,false,subclassLookup);const fromLookup=MiscUtil.get(subclassLookup,c.class.source,c.class.name,c.subclass.source,c.subclass.name);if(fromLookup&&fromLookup.isReprinted){out[1].push(toAdd)}else if(Parser.sourceJsonToFull(src).startsWith(UA_PREFIX)||Parser.sourceJsonToFull(src).startsWith(PS_PREFIX)){const cleanName=mapClassShortNameToMostRecent(nm.split("(")[0].trim().split(/v\d+/)[0].trim());toCheck.push({name:cleanName,ele:toAdd})}else{out[0].push(toAdd);curNames.add(nm)}}));toCheck.forEach((n=>{if(curNames.has(n.name)){out[1].push(n.ele)}else{out[0].push(n.ele)}}));return[out[0].join(", "),out[1].join(", ")];function mapClassShortNameToMostRecent(shortName){switch(shortName){case"Favored Soul":return"Divine Soul";case"Undying Light":return"Celestial";case"Deep Stalker":return"Gloom Stalker"}return shortName}};Parser.spVariantClassesToCurrentAndLegacy=function(fromVariantClassList){const current=[];const legacy=[];fromVariantClassList.forEach((cls=>{if(cls.definedInSource===SRC_UACFV)legacy.push(cls);else current.push(cls)}));return[current,legacy]};Parser.attackTypeToFull=function(attackType){return Parser._parse_aToB(Parser.ATK_TYPE_TO_FULL,attackType)};Parser.trapHazTypeToFull=function(type){return Parser._parse_aToB(Parser.TRAP_HAZARD_TYPE_TO_FULL,type)};Parser.TRAP_HAZARD_TYPE_TO_FULL={MECH:"Mechanical trap",MAG:"Magical trap",SMPL:"Simple trap",CMPX:"Complex trap",HAZ:"Hazard",WTH:"Weather",ENV:"Environmental Hazard",WLD:"Wilderness Hazard",GEN:"Generic",EST:"Eldritch Storm"};Parser.tierToFullLevel=function(tier){return Parser._parse_aToB(Parser.TIER_TO_FULL_LEVEL,tier)};Parser.TIER_TO_FULL_LEVEL={};Parser.TIER_TO_FULL_LEVEL[1]="level 1—4";Parser.TIER_TO_FULL_LEVEL[2]="level 5—10";Parser.TIER_TO_FULL_LEVEL[3]="level 11—16";Parser.TIER_TO_FULL_LEVEL[4]="level 17—20";Parser.threatToFull=function(threat){return Parser._parse_aToB(Parser.THREAT_TO_FULL,threat)};Parser.THREAT_TO_FULL={};Parser.THREAT_TO_FULL[1]="moderate";Parser.THREAT_TO_FULL[2]="dangerous";Parser.THREAT_TO_FULL[3]="deadly";Parser.trapInitToFull=function(init){return Parser._parse_aToB(Parser.TRAP_INIT_TO_FULL,init)};Parser.TRAP_INIT_TO_FULL={};Parser.TRAP_INIT_TO_FULL[1]="initiative count 10";Parser.TRAP_INIT_TO_FULL[2]="initiative count 20";Parser.TRAP_INIT_TO_FULL[3]="initiative count 20 and initiative count 10";Parser.ATK_TYPE_TO_FULL={};Parser.ATK_TYPE_TO_FULL["MW"]="Melee Weapon Attack";Parser.ATK_TYPE_TO_FULL["RW"]="Ranged Weapon Attack";Parser.bookOrdinalToAbv=(ordinal,preNoSuff)=>{if(ordinal===undefined)return"";switch(ordinal.type){case"part":return`${preNoSuff?" ":""}Part ${ordinal.identifier}${preNoSuff?"":" — "}`;case"chapter":return`${preNoSuff?" ":""}Ch. ${ordinal.identifier}${preNoSuff?"":": "}`;case"episode":return`${preNoSuff?" ":""}Ep. ${ordinal.identifier}${preNoSuff?"":": "}`;case"appendix":return`${preNoSuff?" ":""}App.${ordinal.identifier!=null?` ${ordinal.identifier}`:""}${preNoSuff?"":": "}`;case"level":return`${preNoSuff?" ":""}Level ${ordinal.identifier}${preNoSuff?"":": "}`;default:throw new Error(`Unhandled ordinal type "${ordinal.type}"`)}};Parser.nameToTokenName=function(name){return name.toAscii().replace(/"/g,"")};Parser.bytesToHumanReadable=function(bytes,{fixedDigits:fixedDigits=2}={}){if(bytes==null)return"";if(!bytes)return"0 B";const e=Math.floor(Math.log(bytes)/Math.log(1024));return`${(bytes/Math.pow(1024,e)).toFixed(fixedDigits)} ${`​KMGTP`.charAt(e)}B`};SKL_ABV_ABJ="A";SKL_ABV_EVO="V";SKL_ABV_ENC="E";SKL_ABV_ILL="I";SKL_ABV_DIV="D";SKL_ABV_NEC="N";SKL_ABV_TRA="T";SKL_ABV_CON="C";SKL_ABV_PSI="P";Parser.SKL_ABVS=[SKL_ABV_ABJ,SKL_ABV_CON,SKL_ABV_DIV,SKL_ABV_ENC,SKL_ABV_EVO,SKL_ABV_ILL,SKL_ABV_NEC,SKL_ABV_PSI,SKL_ABV_TRA];Parser.SP_TM_ACTION="action";Parser.SP_TM_B_ACTION="bonus";Parser.SP_TM_REACTION="reaction";Parser.SP_TM_ROUND="round";Parser.SP_TM_MINS="minute";Parser.SP_TM_HRS="hour";Parser.SP_TIME_SINGLETONS=[Parser.SP_TM_ACTION,Parser.SP_TM_B_ACTION,Parser.SP_TM_REACTION,Parser.SP_TM_ROUND];Parser.SP_TIME_TO_FULL={[Parser.SP_TM_ACTION]:"Action",[Parser.SP_TM_B_ACTION]:"Bonus Action",[Parser.SP_TM_REACTION]:"Reaction",[Parser.SP_TM_ROUND]:"Rounds",[Parser.SP_TM_MINS]:"Minutes",[Parser.SP_TM_HRS]:"Hours"};Parser.spTimeUnitToFull=function(timeUnit){return Parser._parse_aToB(Parser.SP_TIME_TO_FULL,timeUnit)};Parser.SP_TIME_TO_SHORT={[Parser.SP_TM_ROUND]:"Rnd.",[Parser.SP_TM_MINS]:"Min.",[Parser.SP_TM_HRS]:"Hr."};Parser.spTimeUnitToShort=function(timeUnit){return Parser._parse_aToB(Parser.SP_TIME_TO_SHORT,timeUnit)};Parser.SP_TIME_TO_ABV={[Parser.SP_TM_ACTION]:"A",[Parser.SP_TM_B_ACTION]:"BA",[Parser.SP_TM_REACTION]:"R",[Parser.SP_TM_ROUND]:"rnd",[Parser.SP_TM_MINS]:"min",[Parser.SP_TM_HRS]:"hr"};Parser.spTimeUnitToAbv=function(timeUnit){return Parser._parse_aToB(Parser.SP_TIME_TO_ABV,timeUnit)};Parser.spTimeToShort=function(time,isHtml){if(!time)return"";return time.number===1&&Parser.SP_TIME_SINGLETONS.includes(time.unit)?`${Parser.spTimeUnitToAbv(time.unit).uppercaseFirst()}${time.condition?"*":""}`:`${time.number} ${isHtml?`<span class="ve-small">`:""}${Parser.spTimeUnitToAbv(time.unit)}${isHtml?`</span>`:""}${time.condition?"*":""}`};SKL_ABJ="Abjuration";SKL_EVO="Evocation";SKL_ENC="Enchantment";SKL_ILL="Illusion";SKL_DIV="Divination";SKL_NEC="Necromancy";SKL_TRA="Transmutation";SKL_CON="Conjuration";SKL_PSI="Psionic";Parser.SP_SCHOOL_ABV_TO_FULL={};Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_ABJ]=SKL_ABJ;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_EVO]=SKL_EVO;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_ENC]=SKL_ENC;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_ILL]=SKL_ILL;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_DIV]=SKL_DIV;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_NEC]=SKL_NEC;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_TRA]=SKL_TRA;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_CON]=SKL_CON;Parser.SP_SCHOOL_ABV_TO_FULL[SKL_ABV_PSI]=SKL_PSI;Parser.SP_SCHOOL_ABV_TO_SHORT={};Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_ABJ]="Abj.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_EVO]="Evoc.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_ENC]="Ench.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_ILL]="Illu.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_DIV]="Divin.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_NEC]="Necro.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_TRA]="Trans.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_CON]="Conj.";Parser.SP_SCHOOL_ABV_TO_SHORT[SKL_ABV_PSI]="Psi.";Parser.ATB_ABV_TO_FULL={str:"Strength",dex:"Dexterity",con:"Constitution",int:"Intelligence",wis:"Wisdom",cha:"Charisma"};TP_ABERRATION="aberration";TP_BEAST="beast";TP_CELESTIAL="celestial";TP_CONSTRUCT="construct";TP_DRAGON="dragon";TP_ELEMENTAL="elemental";TP_FEY="fey";TP_FIEND="fiend";TP_GIANT="giant";TP_HUMANOID="humanoid";TP_MONSTROSITY="monstrosity";TP_OOZE="ooze";TP_PLANT="plant";TP_UNDEAD="undead";Parser.MON_TYPES=[TP_ABERRATION,TP_BEAST,TP_CELESTIAL,TP_CONSTRUCT,TP_DRAGON,TP_ELEMENTAL,TP_FEY,TP_FIEND,TP_GIANT,TP_HUMANOID,TP_MONSTROSITY,TP_OOZE,TP_PLANT,TP_UNDEAD];Parser.MON_TYPE_TO_PLURAL={};Parser.MON_TYPE_TO_PLURAL[TP_ABERRATION]="aberrations";Parser.MON_TYPE_TO_PLURAL[TP_BEAST]="beasts";Parser.MON_TYPE_TO_PLURAL[TP_CELESTIAL]="celestials";Parser.MON_TYPE_TO_PLURAL[TP_CONSTRUCT]="constructs";Parser.MON_TYPE_TO_PLURAL[TP_DRAGON]="dragons";Parser.MON_TYPE_TO_PLURAL[TP_ELEMENTAL]="elementals";Parser.MON_TYPE_TO_PLURAL[TP_FEY]="fey";Parser.MON_TYPE_TO_PLURAL[TP_FIEND]="fiends";Parser.MON_TYPE_TO_PLURAL[TP_GIANT]="giants";Parser.MON_TYPE_TO_PLURAL[TP_HUMANOID]="humanoids";Parser.MON_TYPE_TO_PLURAL[TP_MONSTROSITY]="monstrosities";Parser.MON_TYPE_TO_PLURAL[TP_OOZE]="oozes";Parser.MON_TYPE_TO_PLURAL[TP_PLANT]="plants";Parser.MON_TYPE_TO_PLURAL[TP_UNDEAD]="undead";SZ_FINE="F";SZ_DIMINUTIVE="D";SZ_TINY="T";SZ_SMALL="S";SZ_MEDIUM="M";SZ_LARGE="L";SZ_HUGE="H";SZ_GARGANTUAN="G";SZ_COLOSSAL="C";SZ_VARIES="V";Parser.SIZE_ABVS=[SZ_TINY,SZ_SMALL,SZ_MEDIUM,SZ_LARGE,SZ_HUGE,SZ_GARGANTUAN,SZ_VARIES];Parser.SIZE_ABV_TO_FULL={};Parser.SIZE_ABV_TO_FULL[SZ_FINE]="Fine";Parser.SIZE_ABV_TO_FULL[SZ_DIMINUTIVE]="Diminutive";Parser.SIZE_ABV_TO_FULL[SZ_TINY]="Tiny";Parser.SIZE_ABV_TO_FULL[SZ_SMALL]="Small";Parser.SIZE_ABV_TO_FULL[SZ_MEDIUM]="Medium";Parser.SIZE_ABV_TO_FULL[SZ_LARGE]="Large";Parser.SIZE_ABV_TO_FULL[SZ_HUGE]="Huge";Parser.SIZE_ABV_TO_FULL[SZ_GARGANTUAN]="Gargantuan";Parser.SIZE_ABV_TO_FULL[SZ_COLOSSAL]="Colossal";Parser.SIZE_ABV_TO_FULL[SZ_VARIES]="Varies";Parser.XP_CHART_ALT={0:10,"1/8":25,"1/4":50,"1/2":100,1:200,2:450,3:700,4:1100,5:1800,6:2300,7:2900,8:3900,9:5e3,10:5900,11:7200,12:8400,13:1e4,14:11500,15:13e3,16:15e3,17:18e3,18:2e4,19:22e3,20:25e3,21:33e3,22:41e3,23:5e4,24:62e3,25:75e3,26:9e4,27:105e3,28:12e4,29:135e3,30:155e3};Parser.ARMOR_ABV_TO_FULL={"l.":"light","m.":"medium","h.":"heavy"};Parser.WEAPON_ABV_TO_FULL={"s.":"simple","m.":"martial"};Parser.CONDITION_TO_COLOR={Blinded:"#525252",Charmed:"#f01789",Deafened:"#ababab",Exhausted:"#947a47",Frightened:"#c9ca18",Grappled:"#8784a0",Incapacitated:"#3165a0",Invisible:"#7ad2d6",Paralyzed:"#c00900",Petrified:"#a0a0a0",Poisoned:"#4dc200",Prone:"#5e60a0",Restrained:"#d98000",Stunned:"#a23bcb",Unconscious:"#3a40ad",Concentration:"#009f7a"};Parser.RULE_TYPE_TO_FULL={O:"Optional",V:"Variant",VO:"Variant Optional",VV:"Variant Variant",U:"Unknown"};Parser.ruleTypeToFull=function(ruleType){return Parser._parse_aToB(Parser.RULE_TYPE_TO_FULL,ruleType)};Parser.VEHICLE_TYPE_TO_FULL={SHIP:"Ship",INFWAR:"Infernal War Machine",CREATURE:"Creature",OBJECT:"Object","SHP:H":"Ship Upgrade, Hull","SHP:M":"Ship Upgrade, Movement","SHP:W":"Ship Upgrade, Weapon","SHP:F":"Ship Upgrade, Figurehead","SHP:O":"Ship Upgrade, Miscellaneous","IWM:W":"Infernal War Machine Variant, Weapon","IWM:A":"Infernal War Machine Upgrade, Armor","IWM:G":"Infernal War Machine Upgrade, Gadget"};Parser.vehicleTypeToFull=function(vehicleType){return Parser._parse_aToB(Parser.VEHICLE_TYPE_TO_FULL,vehicleType)};SRC_5ETOOLS_TMP="SRC_5ETOOLS_TMP";SRC_CoS="CoS";SRC_DMG="DMG";SRC_EEPC="EEPC";SRC_EET="EET";SRC_HotDQ="HotDQ";SRC_LMoP="LMoP";SRC_MM="MM";SRC_OotA="OotA";SRC_PHB="PHB";SRC_PotA="PotA";SRC_RoT="RoT";SRC_RoTOS="RoTOS";SRC_SCAG="SCAG";SRC_SKT="SKT";SRC_ToA="ToA";SRC_ToD="ToD";SRC_TTP="TTP";SRC_TYP="TftYP";SRC_TYP_AtG="TftYP-AtG";SRC_TYP_DiT="TftYP-DiT";SRC_TYP_TFoF="TftYP-TFoF";SRC_TYP_THSoT="TftYP-THSoT";SRC_TYP_TSC="TftYP-TSC";SRC_TYP_ToH="TftYP-ToH";SRC_TYP_WPM="TftYP-WPM";SRC_VGM="VGM";SRC_XGE="XGE";SRC_OGA="OGA";SRC_MTF="MTF";SRC_WDH="WDH";SRC_WDMM="WDMM";SRC_GGR="GGR";SRC_KKW="KKW";SRC_LLK="LLK";SRC_GoS="GoS";SRC_AI="AI";SRC_OoW="OoW";SRC_ESK="ESK";SRC_DIP="DIP";SRC_HftT="HftT";SRC_DC="DC";SRC_SLW="SLW";SRC_SDW="SDW";SRC_BGDIA="BGDIA";SRC_LR="LR";SRC_AL="AL";SRC_SAC="SAC";SRC_ERLW="ERLW";SRC_EFR="EFR";SRC_RMBRE="RMBRE";SRC_RMR="RMR";SRC_MFF="MFF";SRC_AWM="AWM";SRC_IMR="IMR";SRC_SADS="SADS";SRC_EGW="EGW";SRC_EGW_ToR="ToR";SRC_EGW_DD="DD";SRC_EGW_FS="FS";SRC_EGW_US="US";SRC_MOT="MOT";SRC_IDRotF="IDRotF";SRC_TCE="TCE";SRC_VRGR="VRGR";SRC_HoL="HoL";SRC_AitFR_ISF="AitFR-ISF";SRC_AitFR_THP="AitFR-THP";SRC_AitFR_AVT="AitFR-AVT";SRC_AitFR_DN="AitFR-DN";SRC_AitFR_FCD="AitFR-FCD";SRC_SCREEN="Screen";SRC_SCREEN_WILDERNESS_KIT="ScreenWildernessKit";SRC_HEROES_FEAST="HF";SRC_CM="CM";SRC_AL_PREFIX="AL";SRC_ALCoS=`${SRC_AL_PREFIX}CurseOfStrahd`;SRC_ALEE=`${SRC_AL_PREFIX}ElementalEvil`;SRC_ALRoD=`${SRC_AL_PREFIX}RageOfDemons`;SRC_PS_PREFIX="PS";SRC_PSA=`${SRC_PS_PREFIX}A`;SRC_PSI=`${SRC_PS_PREFIX}I`;SRC_PSK=`${SRC_PS_PREFIX}K`;SRC_PSZ=`${SRC_PS_PREFIX}Z`;SRC_PSX=`${SRC_PS_PREFIX}X`;SRC_PSD=`${SRC_PS_PREFIX}D`;SRC_UA_PREFIX="UA";SRC_UAA=`${SRC_UA_PREFIX}Artificer`;SRC_UAEAG=`${SRC_UA_PREFIX}EladrinAndGith`;SRC_UAEBB=`${SRC_UA_PREFIX}Eberron`;SRC_UAFFR=`${SRC_UA_PREFIX}FeatsForRaces`;SRC_UAFFS=`${SRC_UA_PREFIX}FeatsForSkills`;SRC_UAFO=`${SRC_UA_PREFIX}FiendishOptions`;SRC_UAFT=`${SRC_UA_PREFIX}Feats`;SRC_UAGH=`${SRC_UA_PREFIX}GothicHeroes`;SRC_UAMDM=`${SRC_UA_PREFIX}ModernMagic`;SRC_UASSP=`${SRC_UA_PREFIX}StarterSpells`;SRC_UATMC=`${SRC_UA_PREFIX}TheMysticClass`;SRC_UATOBM=`${SRC_UA_PREFIX}ThatOldBlackMagic`;SRC_UATRR=`${SRC_UA_PREFIX}TheRangerRevised`;SRC_UAWA=`${SRC_UA_PREFIX}WaterborneAdventures`;SRC_UAVR=`${SRC_UA_PREFIX}VariantRules`;SRC_UALDR=`${SRC_UA_PREFIX}LightDarkUnderdark`;SRC_UARAR=`${SRC_UA_PREFIX}RangerAndRogue`;SRC_UAATOSC=`${SRC_UA_PREFIX}ATrioOfSubclasses`;SRC_UABPP=`${SRC_UA_PREFIX}BarbarianPrimalPaths`;SRC_UARSC=`${SRC_UA_PREFIX}RevisedSubclasses`;SRC_UAKOO=`${SRC_UA_PREFIX}KitsOfOld`;SRC_UABBC=`${SRC_UA_PREFIX}BardBardColleges`;SRC_UACDD=`${SRC_UA_PREFIX}ClericDivineDomains`;SRC_UAD=`${SRC_UA_PREFIX}Druid`;SRC_UARCO=`${SRC_UA_PREFIX}RevisedClassOptions`;SRC_UAF=`${SRC_UA_PREFIX}Fighter`;SRC_UAM=`${SRC_UA_PREFIX}Monk`;SRC_UAP=`${SRC_UA_PREFIX}Paladin`;SRC_UAMC=`${SRC_UA_PREFIX}ModifyingClasses`;SRC_UAS=`${SRC_UA_PREFIX}Sorcerer`;SRC_UAWAW=`${SRC_UA_PREFIX}WarlockAndWizard`;SRC_UATF=`${SRC_UA_PREFIX}TheFaithful`;SRC_UAWR=`${SRC_UA_PREFIX}WizardRevisited`;SRC_UAESR=`${SRC_UA_PREFIX}ElfSubraces`;SRC_UAMAC=`${SRC_UA_PREFIX}MassCombat`;SRC_UA3PE=`${SRC_UA_PREFIX}ThreePillarExperience`;SRC_UAGHI=`${SRC_UA_PREFIX}GreyhawkInitiative`;SRC_UATSC=`${SRC_UA_PREFIX}ThreeSubclasses`;SRC_UAOD=`${SRC_UA_PREFIX}OrderDomain`;SRC_UACAM=`${SRC_UA_PREFIX}CentaursMinotaurs`;SRC_UAGSS=`${SRC_UA_PREFIX}GiantSoulSorcerer`;SRC_UARoE=`${SRC_UA_PREFIX}RacesOfEberron`;SRC_UARoR=`${SRC_UA_PREFIX}RacesOfRavnica`;SRC_UAWGE=`${SRC_UA_PREFIX}WGE`;SRC_UAOSS=`${SRC_UA_PREFIX}OfShipsAndSea`;SRC_UASIK=`${SRC_UA_PREFIX}Sidekicks`;SRC_UAAR=`${SRC_UA_PREFIX}ArtificerRevisited`;SRC_UABAM=`${SRC_UA_PREFIX}BarbarianAndMonk`;SRC_UASAW=`${SRC_UA_PREFIX}SorcererAndWarlock`;SRC_UABAP=`${SRC_UA_PREFIX}BardAndPaladin`;SRC_UACDW=`${SRC_UA_PREFIX}ClericDruidWizard`;SRC_UAFRR=`${SRC_UA_PREFIX}FighterRangerRogue`;SRC_UACFV=`${SRC_UA_PREFIX}ClassFeatureVariants`;SRC_UAFRW=`${SRC_UA_PREFIX}FighterRogueWizard`;SRC_UAPCRM=`${SRC_UA_PREFIX}PrestigeClassesRunMagic`;SRC_UAR=`${SRC_UA_PREFIX}Ranger`;SRC_UA2020SC1=`${SRC_UA_PREFIX}2020SubclassesPt1`;SRC_UA2020SC2=`${SRC_UA_PREFIX}2020SubclassesPt2`;SRC_UA2020SC3=`${SRC_UA_PREFIX}2020SubclassesPt3`;SRC_UA2020SC4=`${SRC_UA_PREFIX}2020SubclassesPt4`;SRC_UA2020SC5=`${SRC_UA_PREFIX}2020SubclassesPt5`;SRC_UA2020SMT=`${SRC_UA_PREFIX}2020SpellsAndMagicTattoos`;SRC_UA2020POR=`${SRC_UA_PREFIX}2020PsionicOptionsRevisited`;SRC_UA2020SCR=`${SRC_UA_PREFIX}2020SubclassesRevisited`;SRC_UA2020F=`${SRC_UA_PREFIX}2020Feats`;SRC_UA2021GL=`${SRC_UA_PREFIX}2021GothicLineages`;SRC_UA2021FF=`${SRC_UA_PREFIX}2021FolkOfTheFeywild`;SRC_UA2021DO=`${SRC_UA_PREFIX}2021DraconicOptions`;SRC_UA2021MoS=`${SRC_UA_PREFIX}2021MagesOfStrixhaven`;SRC_3PP_SUFFIX=" 3pp";AL_PREFIX="Adventurers League: ";AL_PREFIX_SHORT="AL: ";PS_PREFIX="Plane Shift: ";PS_PREFIX_SHORT="PS: ";UA_PREFIX="Unearthed Arcana: ";UA_PREFIX_SHORT="UA: ";TftYP_NAME="Tales from the Yawning Portal";AitFR_NAME="Adventures in the Forgotten Realms";Parser.SOURCE_JSON_TO_FULL={};Parser.SOURCE_JSON_TO_FULL[SRC_CoS]="Curse of Strahd";Parser.SOURCE_JSON_TO_FULL[SRC_DMG]="Dungeon Master's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_EEPC]="Elemental Evil Player's Companion";Parser.SOURCE_JSON_TO_FULL[SRC_EET]="Elemental Evil: Trinkets";Parser.SOURCE_JSON_TO_FULL[SRC_HotDQ]="Hoard of the Dragon Queen";Parser.SOURCE_JSON_TO_FULL[SRC_LMoP]="Lost Mine of Phandelver";Parser.SOURCE_JSON_TO_FULL[SRC_MM]="Monster Manual";Parser.SOURCE_JSON_TO_FULL[SRC_OotA]="Out of the Abyss";Parser.SOURCE_JSON_TO_FULL[SRC_PHB]="Player's Handbook";Parser.SOURCE_JSON_TO_FULL[SRC_PotA]="Princes of the Apocalypse";Parser.SOURCE_JSON_TO_FULL[SRC_RoT]="The Rise of Tiamat";Parser.SOURCE_JSON_TO_FULL[SRC_RoTOS]="The Rise of Tiamat Online Supplement";Parser.SOURCE_JSON_TO_FULL[SRC_SCAG]="Sword Coast Adventurer's Guide";Parser.SOURCE_JSON_TO_FULL[SRC_SKT]="Storm King's Thunder";Parser.SOURCE_JSON_TO_FULL[SRC_ToA]="Tomb of Annihilation";Parser.SOURCE_JSON_TO_FULL[SRC_ToD]="Tyranny of Dragons";Parser.SOURCE_JSON_TO_FULL[SRC_TTP]="The Tortle Package";Parser.SOURCE_JSON_TO_FULL[SRC_TYP]=TftYP_NAME;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_AtG]=`${TftYP_NAME}: Against the Giants`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_DiT]=`${TftYP_NAME}: Dead in Thay`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_TFoF]=`${TftYP_NAME}: The Forge of Fury`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_THSoT]=`${TftYP_NAME}: The Hidden Shrine of Tamoachan`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_TSC]=`${TftYP_NAME}: The Sunless Citadel`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_ToH]=`${TftYP_NAME}: Tomb of Horrors`;Parser.SOURCE_JSON_TO_FULL[SRC_TYP_WPM]=`${TftYP_NAME}: White Plume Mountain`;Parser.SOURCE_JSON_TO_FULL[SRC_VGM]="Volo's Guide to Monsters";Parser.SOURCE_JSON_TO_FULL[SRC_XGE]="Xanathar's Guide to Everything";Parser.SOURCE_JSON_TO_FULL[SRC_OGA]="One Grung Above";Parser.SOURCE_JSON_TO_FULL[SRC_MTF]="Mordenkainen's Tome of Foes";Parser.SOURCE_JSON_TO_FULL[SRC_WDH]="Waterdeep: Dragon Heist";Parser.SOURCE_JSON_TO_FULL[SRC_WDMM]="Waterdeep: Dungeon of the Mad Mage";Parser.SOURCE_JSON_TO_FULL[SRC_GGR]="Guildmasters' Guide to Ravnica";Parser.SOURCE_JSON_TO_FULL[SRC_KKW]="Krenko's Way";Parser.SOURCE_JSON_TO_FULL[SRC_LLK]="Lost Laboratory of Kwalish";Parser.SOURCE_JSON_TO_FULL[SRC_GoS]="Ghosts of Saltmarsh";Parser.SOURCE_JSON_TO_FULL[SRC_AI]="Acquisitions Incorporated";Parser.SOURCE_JSON_TO_FULL[SRC_OoW]="The Orrery of the Wanderer";Parser.SOURCE_JSON_TO_FULL[SRC_ESK]="Essentials Kit";Parser.SOURCE_JSON_TO_FULL[SRC_DIP]="Dragon of Icespire Peak";Parser.SOURCE_JSON_TO_FULL[SRC_HftT]="Hunt for the Thessalhydra";Parser.SOURCE_JSON_TO_FULL[SRC_DC]="Divine Contention";Parser.SOURCE_JSON_TO_FULL[SRC_SLW]="Storm Lord's Wrath";Parser.SOURCE_JSON_TO_FULL[SRC_SDW]="Sleeping Dragon's Wake";Parser.SOURCE_JSON_TO_FULL[SRC_BGDIA]="Baldur's Gate: Descent Into Avernus";Parser.SOURCE_JSON_TO_FULL[SRC_LR]="Locathah Rising";Parser.SOURCE_JSON_TO_FULL[SRC_AL]="Adventurers' League";Parser.SOURCE_JSON_TO_FULL[SRC_SAC]="Sage Advice Compendium";Parser.SOURCE_JSON_TO_FULL[SRC_ERLW]="Eberron: Rising from the Last War";Parser.SOURCE_JSON_TO_FULL[SRC_EFR]="Eberron: Forgotten Relics";Parser.SOURCE_JSON_TO_FULL[SRC_RMBRE]="The Lost Dungeon of Rickedness: Big Rick Energy";Parser.SOURCE_JSON_TO_FULL[SRC_RMR]="Dungeons & Dragons vs. Rick and Morty: Basic Rules";Parser.SOURCE_JSON_TO_FULL[SRC_MFF]="Mordenkainen's Fiendish Folio";Parser.SOURCE_JSON_TO_FULL[SRC_AWM]="Adventure with Muk";Parser.SOURCE_JSON_TO_FULL[SRC_IMR]="Infernal Machine Rebuild";Parser.SOURCE_JSON_TO_FULL[SRC_SADS]="Sapphire Anniversary Dice Set";Parser.SOURCE_JSON_TO_FULL[SRC_EGW]="Explorer's Guide to Wildemount";Parser.SOURCE_JSON_TO_FULL[SRC_EGW_ToR]="Tide of Retribution";Parser.SOURCE_JSON_TO_FULL[SRC_EGW_DD]="Dangerous Designs";Parser.SOURCE_JSON_TO_FULL[SRC_EGW_FS]="Frozen Sick";Parser.SOURCE_JSON_TO_FULL[SRC_EGW_US]="Unwelcome Spirits";Parser.SOURCE_JSON_TO_FULL[SRC_MOT]="Mythic Odysseys of Theros";Parser.SOURCE_JSON_TO_FULL[SRC_IDRotF]="Icewind Dale: Rime of the Frostmaiden";Parser.SOURCE_JSON_TO_FULL[SRC_TCE]="Tasha's Cauldron of Everything";Parser.SOURCE_JSON_TO_FULL[SRC_VRGR]="Van Richten's Guide to Ravenloft";Parser.SOURCE_JSON_TO_FULL[SRC_HoL]="The House of Lament";Parser.SOURCE_JSON_TO_FULL[SRC_AitFR_ISF]=`${AitFR_NAME}: In Scarlet Flames`;Parser.SOURCE_JSON_TO_FULL[SRC_AitFR_THP]=`${AitFR_NAME}: The Hidden Page`;Parser.SOURCE_JSON_TO_FULL[SRC_AitFR_AVT]=`${AitFR_NAME}: A Verdant Tomb`;Parser.SOURCE_JSON_TO_FULL[SRC_AitFR_DN]=`${AitFR_NAME}: Deepest Night`;Parser.SOURCE_JSON_TO_FULL[SRC_AitFR_FCD]=`${AitFR_NAME}: From Cyan Depths`;Parser.SOURCE_JSON_TO_FULL[SRC_SCREEN]="Dungeon Master's Screen";Parser.SOURCE_JSON_TO_FULL[SRC_SCREEN_WILDERNESS_KIT]="Dungeon Master's Screen: Wilderness Kit";Parser.SOURCE_JSON_TO_FULL[SRC_HEROES_FEAST]="Heroes' Feast";Parser.SOURCE_JSON_TO_FULL[SRC_CM]="Candlekeep Mysteries";Parser.SOURCE_JSON_TO_FULL[SRC_ALCoS]=`${AL_PREFIX}Curse of Strahd`;Parser.SOURCE_JSON_TO_FULL[SRC_ALEE]=`${AL_PREFIX}Elemental Evil`;Parser.SOURCE_JSON_TO_FULL[SRC_ALRoD]=`${AL_PREFIX}Rage of Demons`;Parser.SOURCE_JSON_TO_FULL[SRC_PSA]=`${PS_PREFIX}Amonkhet`;Parser.SOURCE_JSON_TO_FULL[SRC_PSI]=`${PS_PREFIX}Innistrad`;Parser.SOURCE_JSON_TO_FULL[SRC_PSK]=`${PS_PREFIX}Kaladesh`;Parser.SOURCE_JSON_TO_FULL[SRC_PSZ]=`${PS_PREFIX}Zendikar`;Parser.SOURCE_JSON_TO_FULL[SRC_PSX]=`${PS_PREFIX}Ixalan`;Parser.SOURCE_JSON_TO_FULL[SRC_PSD]=`${PS_PREFIX}Dominaria`;Parser.SOURCE_JSON_TO_FULL[SRC_UAA]=`${UA_PREFIX}Artificer`;Parser.SOURCE_JSON_TO_FULL[SRC_UAEAG]=`${UA_PREFIX}Eladrin and Gith`;Parser.SOURCE_JSON_TO_FULL[SRC_UAEBB]=`${UA_PREFIX}Eberron`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFFR]=`${UA_PREFIX}Feats for Races`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFFS]=`${UA_PREFIX}Feats for Skills`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFO]=`${UA_PREFIX}Fiendish Options`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFT]=`${UA_PREFIX}Feats`;Parser.SOURCE_JSON_TO_FULL[SRC_UAGH]=`${UA_PREFIX}Gothic Heroes`;Parser.SOURCE_JSON_TO_FULL[SRC_UAMDM]=`${UA_PREFIX}Modern Magic`;Parser.SOURCE_JSON_TO_FULL[SRC_UASSP]=`${UA_PREFIX}Starter Spells`;Parser.SOURCE_JSON_TO_FULL[SRC_UATMC]=`${UA_PREFIX}The Mystic Class`;Parser.SOURCE_JSON_TO_FULL[SRC_UATOBM]=`${UA_PREFIX}That Old Black Magic`;Parser.SOURCE_JSON_TO_FULL[SRC_UATRR]=`${UA_PREFIX}The Ranger, Revised`;Parser.SOURCE_JSON_TO_FULL[SRC_UAWA]=`${UA_PREFIX}Waterborne Adventures`;Parser.SOURCE_JSON_TO_FULL[SRC_UAVR]=`${UA_PREFIX}Variant Rules`;Parser.SOURCE_JSON_TO_FULL[SRC_UALDR]=`${UA_PREFIX}Light, Dark, Underdark!`;Parser.SOURCE_JSON_TO_FULL[SRC_UARAR]=`${UA_PREFIX}Ranger and Rogue`;Parser.SOURCE_JSON_TO_FULL[SRC_UAATOSC]=`${UA_PREFIX}A Trio of Subclasses`;Parser.SOURCE_JSON_TO_FULL[SRC_UABPP]=`${UA_PREFIX}Barbarian Primal Paths`;Parser.SOURCE_JSON_TO_FULL[SRC_UARSC]=`${UA_PREFIX}Revised Subclasses`;Parser.SOURCE_JSON_TO_FULL[SRC_UAKOO]=`${UA_PREFIX}Kits of Old`;Parser.SOURCE_JSON_TO_FULL[SRC_UABBC]=`${UA_PREFIX}Bard: Bard Colleges`;Parser.SOURCE_JSON_TO_FULL[SRC_UACDD]=`${UA_PREFIX}Cleric: Divine Domains`;Parser.SOURCE_JSON_TO_FULL[SRC_UAD]=`${UA_PREFIX}Druid`;Parser.SOURCE_JSON_TO_FULL[SRC_UARCO]=`${UA_PREFIX}Revised Class Options`;Parser.SOURCE_JSON_TO_FULL[SRC_UAF]=`${UA_PREFIX}Fighter`;Parser.SOURCE_JSON_TO_FULL[SRC_UAM]=`${UA_PREFIX}Monk`;Parser.SOURCE_JSON_TO_FULL[SRC_UAP]=`${UA_PREFIX}Paladin`;Parser.SOURCE_JSON_TO_FULL[SRC_UAMC]=`${UA_PREFIX}Modifying Classes`;Parser.SOURCE_JSON_TO_FULL[SRC_UAS]=`${UA_PREFIX}Sorcerer`;Parser.SOURCE_JSON_TO_FULL[SRC_UAWAW]=`${UA_PREFIX}Warlock and Wizard`;Parser.SOURCE_JSON_TO_FULL[SRC_UATF]=`${UA_PREFIX}The Faithful`;Parser.SOURCE_JSON_TO_FULL[SRC_UAWR]=`${UA_PREFIX}Wizard Revisited`;Parser.SOURCE_JSON_TO_FULL[SRC_UAESR]=`${UA_PREFIX}Elf Subraces`;Parser.SOURCE_JSON_TO_FULL[SRC_UAMAC]=`${UA_PREFIX}Mass Combat`;Parser.SOURCE_JSON_TO_FULL[SRC_UA3PE]=`${UA_PREFIX}Three-Pillar Experience`;Parser.SOURCE_JSON_TO_FULL[SRC_UAGHI]=`${UA_PREFIX}Greyhawk Initiative`;Parser.SOURCE_JSON_TO_FULL[SRC_UATSC]=`${UA_PREFIX}Three Subclasses`;Parser.SOURCE_JSON_TO_FULL[SRC_UAOD]=`${UA_PREFIX}Order Domain`;Parser.SOURCE_JSON_TO_FULL[SRC_UACAM]=`${UA_PREFIX}Centaurs and Minotaurs`;Parser.SOURCE_JSON_TO_FULL[SRC_UAGSS]=`${UA_PREFIX}Giant Soul Sorcerer`;Parser.SOURCE_JSON_TO_FULL[SRC_UARoE]=`${UA_PREFIX}Races of Eberron`;Parser.SOURCE_JSON_TO_FULL[SRC_UARoR]=`${UA_PREFIX}Races of Ravnica`;Parser.SOURCE_JSON_TO_FULL[SRC_UAWGE]="Wayfinder's Guide to Eberron";Parser.SOURCE_JSON_TO_FULL[SRC_UAOSS]=`${UA_PREFIX}Of Ships and the Sea`;Parser.SOURCE_JSON_TO_FULL[SRC_UASIK]=`${UA_PREFIX}Sidekicks`;Parser.SOURCE_JSON_TO_FULL[SRC_UAAR]=`${UA_PREFIX}Artificer Revisited`;Parser.SOURCE_JSON_TO_FULL[SRC_UABAM]=`${UA_PREFIX}Barbarian and Monk`;Parser.SOURCE_JSON_TO_FULL[SRC_UASAW]=`${UA_PREFIX}Sorcerer and Warlock`;Parser.SOURCE_JSON_TO_FULL[SRC_UABAP]=`${UA_PREFIX}Bard and Paladin`;Parser.SOURCE_JSON_TO_FULL[SRC_UACDW]=`${UA_PREFIX}Cleric, Druid, and Wizard`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFRR]=`${UA_PREFIX}Fighter, Ranger, and Rogue`;Parser.SOURCE_JSON_TO_FULL[SRC_UACFV]=`${UA_PREFIX}Class Feature Variants`;Parser.SOURCE_JSON_TO_FULL[SRC_UAFRW]=`${UA_PREFIX}Fighter, Rogue, and Wizard`;Parser.SOURCE_JSON_TO_FULL[SRC_UAPCRM]=`${UA_PREFIX}Prestige Classes and Rune Magic`;Parser.SOURCE_JSON_TO_FULL[SRC_UAR]=`${UA_PREFIX}Ranger`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SC1]=`${UA_PREFIX}2020 Subclasses, Part 1`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SC2]=`${UA_PREFIX}2020 Subclasses, Part 2`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SC3]=`${UA_PREFIX}2020 Subclasses, Part 3`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SC4]=`${UA_PREFIX}2020 Subclasses, Part 4`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SC5]=`${UA_PREFIX}2020 Subclasses, Part 5`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SMT]=`${UA_PREFIX}2020 Spells and Magic Tattoos`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020POR]=`${UA_PREFIX}2020 Psionic Options Revisited`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020SCR]=`${UA_PREFIX}2020 Subclasses Revisited`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2020F]=`${UA_PREFIX}2020 Feats`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2021GL]=`${UA_PREFIX}2021 Gothic Lineages`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2021FF]=`${UA_PREFIX}2021 Folk of the Feywild`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2021DO]=`${UA_PREFIX}2021 Draconic Options`;Parser.SOURCE_JSON_TO_FULL[SRC_UA2021MoS]=`${UA_PREFIX}2021 Mages of Strixhaven`;Parser.SOURCE_JSON_TO_ABV={};Parser.SOURCE_JSON_TO_ABV[SRC_CoS]="CoS";Parser.SOURCE_JSON_TO_ABV[SRC_DMG]="DMG";Parser.SOURCE_JSON_TO_ABV[SRC_EEPC]="EEPC";Parser.SOURCE_JSON_TO_ABV[SRC_EET]="EET";Parser.SOURCE_JSON_TO_ABV[SRC_HotDQ]="HotDQ";Parser.SOURCE_JSON_TO_ABV[SRC_LMoP]="LMoP";Parser.SOURCE_JSON_TO_ABV[SRC_MM]="MM";Parser.SOURCE_JSON_TO_ABV[SRC_OotA]="OotA";Parser.SOURCE_JSON_TO_ABV[SRC_PHB]="PHB";Parser.SOURCE_JSON_TO_ABV[SRC_PotA]="PotA";Parser.SOURCE_JSON_TO_ABV[SRC_RoT]="RoT";Parser.SOURCE_JSON_TO_ABV[SRC_RoTOS]="RoTOS";Parser.SOURCE_JSON_TO_ABV[SRC_SCAG]="SCAG";Parser.SOURCE_JSON_TO_ABV[SRC_SKT]="SKT";Parser.SOURCE_JSON_TO_ABV[SRC_ToA]="ToA";Parser.SOURCE_JSON_TO_ABV[SRC_ToD]="ToD";Parser.SOURCE_JSON_TO_ABV[SRC_TTP]="TTP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_AtG]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_DiT]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_TFoF]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_THSoT]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_TSC]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_ToH]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_TYP_WPM]="TftYP";Parser.SOURCE_JSON_TO_ABV[SRC_VGM]="VGM";Parser.SOURCE_JSON_TO_ABV[SRC_XGE]="XGE";Parser.SOURCE_JSON_TO_ABV[SRC_OGA]="OGA";Parser.SOURCE_JSON_TO_ABV[SRC_MTF]="MTF";Parser.SOURCE_JSON_TO_ABV[SRC_WDH]="WDH";Parser.SOURCE_JSON_TO_ABV[SRC_WDMM]="WDMM";Parser.SOURCE_JSON_TO_ABV[SRC_GGR]="GGR";Parser.SOURCE_JSON_TO_ABV[SRC_KKW]="KKW";Parser.SOURCE_JSON_TO_ABV[SRC_LLK]="LLK";Parser.SOURCE_JSON_TO_ABV[SRC_GoS]="GoS";Parser.SOURCE_JSON_TO_ABV[SRC_AI]="AI";Parser.SOURCE_JSON_TO_ABV[SRC_OoW]="OoW";Parser.SOURCE_JSON_TO_ABV[SRC_ESK]="ESK";Parser.SOURCE_JSON_TO_ABV[SRC_DIP]="DIP";Parser.SOURCE_JSON_TO_ABV[SRC_HftT]="HftT";Parser.SOURCE_JSON_TO_ABV[SRC_DC]="DC";Parser.SOURCE_JSON_TO_ABV[SRC_SLW]="SLW";Parser.SOURCE_JSON_TO_ABV[SRC_SDW]="SDW";Parser.SOURCE_JSON_TO_ABV[SRC_BGDIA]="BGDIA";Parser.SOURCE_JSON_TO_ABV[SRC_LR]="LR";Parser.SOURCE_JSON_TO_ABV[SRC_AL]="AL";Parser.SOURCE_JSON_TO_ABV[SRC_SAC]="SAC";Parser.SOURCE_JSON_TO_ABV[SRC_ERLW]="ERLW";Parser.SOURCE_JSON_TO_ABV[SRC_EFR]="EFR";Parser.SOURCE_JSON_TO_ABV[SRC_RMBRE]="RMBRE";Parser.SOURCE_JSON_TO_ABV[SRC_RMR]="RMR";Parser.SOURCE_JSON_TO_ABV[SRC_MFF]="MFF";Parser.SOURCE_JSON_TO_ABV[SRC_AWM]="AWM";Parser.SOURCE_JSON_TO_ABV[SRC_IMR]="IMR";Parser.SOURCE_JSON_TO_ABV[SRC_SADS]="SADS";Parser.SOURCE_JSON_TO_ABV[SRC_EGW]="EGW";Parser.SOURCE_JSON_TO_ABV[SRC_EGW_ToR]="ToR";Parser.SOURCE_JSON_TO_ABV[SRC_EGW_DD]="DD";Parser.SOURCE_JSON_TO_ABV[SRC_EGW_FS]="FS";Parser.SOURCE_JSON_TO_ABV[SRC_EGW_US]="US";Parser.SOURCE_JSON_TO_ABV[SRC_MOT]="MOT";Parser.SOURCE_JSON_TO_ABV[SRC_IDRotF]="IDRotF";Parser.SOURCE_JSON_TO_ABV[SRC_TCE]="TCE";Parser.SOURCE_JSON_TO_ABV[SRC_VRGR]="VRGR";Parser.SOURCE_JSON_TO_ABV[SRC_HoL]="HoL";Parser.SOURCE_JSON_TO_ABV[SRC_AitFR_ISF]="AitFR";Parser.SOURCE_JSON_TO_ABV[SRC_AitFR_THP]="AitFR";Parser.SOURCE_JSON_TO_ABV[SRC_AitFR_AVT]="AitFR";Parser.SOURCE_JSON_TO_ABV[SRC_AitFR_DN]="AitFR";Parser.SOURCE_JSON_TO_ABV[SRC_AitFR_FCD]="AitFR";Parser.SOURCE_JSON_TO_ABV[SRC_SCREEN]="Screen";Parser.SOURCE_JSON_TO_ABV[SRC_SCREEN_WILDERNESS_KIT]="Wild";Parser.SOURCE_JSON_TO_ABV[SRC_HEROES_FEAST]="HF";Parser.SOURCE_JSON_TO_ABV[SRC_CM]="CM";Parser.SOURCE_JSON_TO_ABV[SRC_ALCoS]="ALCoS";Parser.SOURCE_JSON_TO_ABV[SRC_ALEE]="ALEE";Parser.SOURCE_JSON_TO_ABV[SRC_ALRoD]="ALRoD";Parser.SOURCE_JSON_TO_ABV[SRC_PSA]="PSA";Parser.SOURCE_JSON_TO_ABV[SRC_PSI]="PSI";Parser.SOURCE_JSON_TO_ABV[SRC_PSK]="PSK";Parser.SOURCE_JSON_TO_ABV[SRC_PSZ]="PSZ";Parser.SOURCE_JSON_TO_ABV[SRC_PSX]="PSX";Parser.SOURCE_JSON_TO_ABV[SRC_PSD]="PSD";Parser.SOURCE_JSON_TO_ABV[SRC_UAA]="UAA";Parser.SOURCE_JSON_TO_ABV[SRC_UAEAG]="UAEaG";Parser.SOURCE_JSON_TO_ABV[SRC_UAEBB]="UAEB";Parser.SOURCE_JSON_TO_ABV[SRC_UAFFR]="UAFFR";Parser.SOURCE_JSON_TO_ABV[SRC_UAFFS]="UAFFS";Parser.SOURCE_JSON_TO_ABV[SRC_UAFO]="UAFO";Parser.SOURCE_JSON_TO_ABV[SRC_UAFT]="UAFT";Parser.SOURCE_JSON_TO_ABV[SRC_UAGH]="UAGH";Parser.SOURCE_JSON_TO_ABV[SRC_UAMDM]="UAMM";Parser.SOURCE_JSON_TO_ABV[SRC_UASSP]="UASS";Parser.SOURCE_JSON_TO_ABV[SRC_UATMC]="UAMy";Parser.SOURCE_JSON_TO_ABV[SRC_UATOBM]="UAOBM";Parser.SOURCE_JSON_TO_ABV[SRC_UATRR]="UATRR";Parser.SOURCE_JSON_TO_ABV[SRC_UAWA]="UAWA";Parser.SOURCE_JSON_TO_ABV[SRC_UAVR]="UAVR";Parser.SOURCE_JSON_TO_ABV[SRC_UALDR]="UALDU";Parser.SOURCE_JSON_TO_ABV[SRC_UARAR]="UARAR";Parser.SOURCE_JSON_TO_ABV[SRC_UAATOSC]="UAATOSC";Parser.SOURCE_JSON_TO_ABV[SRC_UABPP]="UABPP";Parser.SOURCE_JSON_TO_ABV[SRC_UARSC]="UARSC";Parser.SOURCE_JSON_TO_ABV[SRC_UAKOO]="UAKoO";Parser.SOURCE_JSON_TO_ABV[SRC_UABBC]="UABBC";Parser.SOURCE_JSON_TO_ABV[SRC_UACDD]="UACDD";Parser.SOURCE_JSON_TO_ABV[SRC_UAD]="UAD";Parser.SOURCE_JSON_TO_ABV[SRC_UARCO]="UARCO";Parser.SOURCE_JSON_TO_ABV[SRC_UAF]="UAF";Parser.SOURCE_JSON_TO_ABV[SRC_UAM]="UAMk";Parser.SOURCE_JSON_TO_ABV[SRC_UAP]="UAP";Parser.SOURCE_JSON_TO_ABV[SRC_UAMC]="UAMC";Parser.SOURCE_JSON_TO_ABV[SRC_UAS]="UAS";Parser.SOURCE_JSON_TO_ABV[SRC_UAWAW]="UAWAW";Parser.SOURCE_JSON_TO_ABV[SRC_UATF]="UATF";Parser.SOURCE_JSON_TO_ABV[SRC_UAWR]="UAWR";Parser.SOURCE_JSON_TO_ABV[SRC_UAESR]="UAESR";Parser.SOURCE_JSON_TO_ABV[SRC_UAMAC]="UAMAC";Parser.SOURCE_JSON_TO_ABV[SRC_UA3PE]="UA3PE";Parser.SOURCE_JSON_TO_ABV[SRC_UAGHI]="UAGHI";Parser.SOURCE_JSON_TO_ABV[SRC_UATSC]="UATSC";Parser.SOURCE_JSON_TO_ABV[SRC_UAOD]="UAOD";Parser.SOURCE_JSON_TO_ABV[SRC_UACAM]="UACAM";Parser.SOURCE_JSON_TO_ABV[SRC_UAGSS]="UAGSS";Parser.SOURCE_JSON_TO_ABV[SRC_UARoE]="UARoE";Parser.SOURCE_JSON_TO_ABV[SRC_UARoR]="UARoR";Parser.SOURCE_JSON_TO_ABV[SRC_UAWGE]="WGE";Parser.SOURCE_JSON_TO_ABV[SRC_UAOSS]="UAOSS";Parser.SOURCE_JSON_TO_ABV[SRC_UASIK]="UASIK";Parser.SOURCE_JSON_TO_ABV[SRC_UAAR]="UAAR";Parser.SOURCE_JSON_TO_ABV[SRC_UABAM]="UABAM";Parser.SOURCE_JSON_TO_ABV[SRC_UASAW]="UASAW";Parser.SOURCE_JSON_TO_ABV[SRC_UABAP]="UABAP";Parser.SOURCE_JSON_TO_ABV[SRC_UACDW]="UACDW";Parser.SOURCE_JSON_TO_ABV[SRC_UAFRR]="UAFRR";Parser.SOURCE_JSON_TO_ABV[SRC_UACFV]="UACFV";Parser.SOURCE_JSON_TO_ABV[SRC_UAFRW]="UAFRW";Parser.SOURCE_JSON_TO_ABV[SRC_UAPCRM]="UAPCRM";Parser.SOURCE_JSON_TO_ABV[SRC_UAR]="UAR";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SC1]="UA20S1";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SC2]="UA20S2";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SC3]="UA20S3";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SC4]="UA20S4";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SC5]="UA20S5";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SMT]="UA20SMT";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020POR]="UA20POR";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020SCR]="UA20SCR";Parser.SOURCE_JSON_TO_ABV[SRC_UA2020F]="UA20F";Parser.SOURCE_JSON_TO_ABV[SRC_UA2021GL]="UA21GL";Parser.SOURCE_JSON_TO_ABV[SRC_UA2021FF]="UA21FF";Parser.SOURCE_JSON_TO_ABV[SRC_UA2021DO]="UA21DO";Parser.SOURCE_JSON_TO_ABV[SRC_UA2021MoS]="UA21MoS";Parser.SOURCE_JSON_TO_DATE={};Parser.SOURCE_JSON_TO_DATE[SRC_CoS]="2016-03-15";Parser.SOURCE_JSON_TO_DATE[SRC_DMG]="2014-12-09";Parser.SOURCE_JSON_TO_DATE[SRC_EEPC]="2015-03-10";Parser.SOURCE_JSON_TO_DATE[SRC_EET]="2015-03-10";Parser.SOURCE_JSON_TO_DATE[SRC_HotDQ]="2014-08-19";Parser.SOURCE_JSON_TO_DATE[SRC_LMoP]="2014-07-15";Parser.SOURCE_JSON_TO_DATE[SRC_MM]="2014-09-30";Parser.SOURCE_JSON_TO_DATE[SRC_OotA]="2015-09-15";Parser.SOURCE_JSON_TO_DATE[SRC_PHB]="2014-08-19";Parser.SOURCE_JSON_TO_DATE[SRC_PotA]="2015-04-07";Parser.SOURCE_JSON_TO_DATE[SRC_RoT]="2014-11-04";Parser.SOURCE_JSON_TO_DATE[SRC_RoTOS]="2014-11-04";Parser.SOURCE_JSON_TO_DATE[SRC_SCAG]="2015-11-03";Parser.SOURCE_JSON_TO_DATE[SRC_SKT]="2016-09-06";Parser.SOURCE_JSON_TO_DATE[SRC_ToA]="2017-09-19";Parser.SOURCE_JSON_TO_DATE[SRC_ToD]="2019-10-22";Parser.SOURCE_JSON_TO_DATE[SRC_TTP]="2017-09-19";Parser.SOURCE_JSON_TO_DATE[SRC_TYP]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_AtG]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_DiT]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_TFoF]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_THSoT]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_TSC]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_ToH]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_TYP_WPM]="2017-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_VGM]="2016-11-15";Parser.SOURCE_JSON_TO_DATE[SRC_XGE]="2017-11-21";Parser.SOURCE_JSON_TO_DATE[SRC_OGA]="2017-10-11";Parser.SOURCE_JSON_TO_DATE[SRC_MTF]="2018-05-29";Parser.SOURCE_JSON_TO_DATE[SRC_WDH]="2018-09-18";Parser.SOURCE_JSON_TO_DATE[SRC_WDMM]="2018-11-20";Parser.SOURCE_JSON_TO_DATE[SRC_GGR]="2018-11-20";Parser.SOURCE_JSON_TO_DATE[SRC_KKW]="2018-11-20";Parser.SOURCE_JSON_TO_DATE[SRC_LLK]="2018-11-10";Parser.SOURCE_JSON_TO_DATE[SRC_GoS]="2019-05-21";Parser.SOURCE_JSON_TO_DATE[SRC_AI]="2019-06-18";Parser.SOURCE_JSON_TO_DATE[SRC_OoW]="2019-06-18";Parser.SOURCE_JSON_TO_DATE[SRC_ESK]="2019-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_DIP]="2019-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_HftT]="2019-05-01";Parser.SOURCE_JSON_TO_DATE[SRC_DC]="2019-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_SLW]="2019-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_SDW]="2019-06-24";Parser.SOURCE_JSON_TO_DATE[SRC_BGDIA]="2019-09-17";Parser.SOURCE_JSON_TO_DATE[SRC_LR]="2019-09-19";Parser.SOURCE_JSON_TO_DATE[SRC_SAC]="2019-01-31";Parser.SOURCE_JSON_TO_DATE[SRC_ERLW]="2019-11-19";Parser.SOURCE_JSON_TO_DATE[SRC_EFR]="2019-11-19";Parser.SOURCE_JSON_TO_DATE[SRC_RMBRE]="2019-11-19";Parser.SOURCE_JSON_TO_DATE[SRC_RMR]="2019-11-19";Parser.SOURCE_JSON_TO_DATE[SRC_MFF]="2019-11-12";Parser.SOURCE_JSON_TO_DATE[SRC_AWM]="2019-11-12";Parser.SOURCE_JSON_TO_DATE[SRC_IMR]="2019-11-12";Parser.SOURCE_JSON_TO_DATE[SRC_SADS]="2019-12-12";Parser.SOURCE_JSON_TO_DATE[SRC_EGW]="2020-03-17";Parser.SOURCE_JSON_TO_DATE[SRC_EGW_ToR]="2020-03-17";Parser.SOURCE_JSON_TO_DATE[SRC_EGW_DD]="2020-03-17";Parser.SOURCE_JSON_TO_DATE[SRC_EGW_FS]="2020-03-17";Parser.SOURCE_JSON_TO_DATE[SRC_EGW_US]="2020-03-17";Parser.SOURCE_JSON_TO_DATE[SRC_MOT]="2020-06-02";Parser.SOURCE_JSON_TO_DATE[SRC_IDRotF]="2020-09-15";Parser.SOURCE_JSON_TO_DATE[SRC_TCE]="2020-11-17";Parser.SOURCE_JSON_TO_DATE[SRC_VRGR]="2021-05-18";Parser.SOURCE_JSON_TO_DATE[SRC_HoL]="2021-05-18";Parser.SOURCE_JSON_TO_DATE[SRC_AitFR_ISF]="2021-06-30";Parser.SOURCE_JSON_TO_DATE[SRC_AitFR_THP]="2021-07-07";Parser.SOURCE_JSON_TO_DATE[SRC_AitFR_AVT]="2021-07-14";Parser.SOURCE_JSON_TO_DATE[SRC_AitFR_DN]="2021-07-21";Parser.SOURCE_JSON_TO_DATE[SRC_AitFR_FCD]="2021-07-28";Parser.SOURCE_JSON_TO_DATE[SRC_SCREEN]="2015-01-20";Parser.SOURCE_JSON_TO_DATE[SRC_SCREEN_WILDERNESS_KIT]="2020-11-17";Parser.SOURCE_JSON_TO_DATE[SRC_HEROES_FEAST]="2020-10-27";Parser.SOURCE_JSON_TO_DATE[SRC_CM]="2021-03-16";Parser.SOURCE_JSON_TO_DATE[SRC_ALCoS]="2016-03-15";Parser.SOURCE_JSON_TO_DATE[SRC_ALEE]="2015-04-07";Parser.SOURCE_JSON_TO_DATE[SRC_ALRoD]="2015-09-15";Parser.SOURCE_JSON_TO_DATE[SRC_PSA]="2017-07-06";Parser.SOURCE_JSON_TO_DATE[SRC_PSI]="2016-07-12";Parser.SOURCE_JSON_TO_DATE[SRC_PSK]="2017-02-16";Parser.SOURCE_JSON_TO_DATE[SRC_PSZ]="2016-04-27";Parser.SOURCE_JSON_TO_DATE[SRC_PSX]="2018-01-09";Parser.SOURCE_JSON_TO_DATE[SRC_PSD]="2018-07-31";Parser.SOURCE_JSON_TO_DATE[SRC_UAEBB]="2015-02-02";Parser.SOURCE_JSON_TO_DATE[SRC_UAA]="2017-01-09";Parser.SOURCE_JSON_TO_DATE[SRC_UAEAG]="2017-09-11";Parser.SOURCE_JSON_TO_DATE[SRC_UAFFR]="2017-04-24";Parser.SOURCE_JSON_TO_DATE[SRC_UAFFS]="2017-04-17";Parser.SOURCE_JSON_TO_DATE[SRC_UAFO]="2017-10-09";Parser.SOURCE_JSON_TO_DATE[SRC_UAFT]="2016-06-06";Parser.SOURCE_JSON_TO_DATE[SRC_UAGH]="2016-04-04";Parser.SOURCE_JSON_TO_DATE[SRC_UAMDM]="2015-08-03";Parser.SOURCE_JSON_TO_DATE[SRC_UASSP]="2017-04-03";Parser.SOURCE_JSON_TO_DATE[SRC_UATMC]="2017-03-13";Parser.SOURCE_JSON_TO_DATE[SRC_UATOBM]="2015-12-07";Parser.SOURCE_JSON_TO_DATE[SRC_UATRR]="2016-09-12";Parser.SOURCE_JSON_TO_DATE[SRC_UAWA]="2015-05-04";Parser.SOURCE_JSON_TO_DATE[SRC_UAVR]="2015-06-08";Parser.SOURCE_JSON_TO_DATE[SRC_UALDR]="2015-11-02";Parser.SOURCE_JSON_TO_DATE[SRC_UARAR]="2017-01-16";Parser.SOURCE_JSON_TO_DATE[SRC_UAATOSC]="2017-03-27";Parser.SOURCE_JSON_TO_DATE[SRC_UABPP]="2016-11-07";Parser.SOURCE_JSON_TO_DATE[SRC_UARSC]="2017-05-01";Parser.SOURCE_JSON_TO_DATE[SRC_UAKOO]="2016-01-04";Parser.SOURCE_JSON_TO_DATE[SRC_UABBC]="2016-11-14";Parser.SOURCE_JSON_TO_DATE[SRC_UACDD]="2016-11-12";Parser.SOURCE_JSON_TO_DATE[SRC_UAD]="2016-11-28";Parser.SOURCE_JSON_TO_DATE[SRC_UARCO]="2017-06-05";Parser.SOURCE_JSON_TO_DATE[SRC_UAF]="2016-12-5";Parser.SOURCE_JSON_TO_DATE[SRC_UAM]="2016-12-12";Parser.SOURCE_JSON_TO_DATE[SRC_UAP]="2016-12-19";Parser.SOURCE_JSON_TO_DATE[SRC_UAMC]="2015-04-06";Parser.SOURCE_JSON_TO_DATE[SRC_UAS]="2017-02-06";Parser.SOURCE_JSON_TO_DATE[SRC_UAWAW]="2017-02-13";Parser.SOURCE_JSON_TO_DATE[SRC_UATF]="2016-08-01";Parser.SOURCE_JSON_TO_DATE[SRC_UAWR]="2017-03-20";Parser.SOURCE_JSON_TO_DATE[SRC_UAESR]="2017-11-13";Parser.SOURCE_JSON_TO_DATE[SRC_UAMAC]="2017-02-21";Parser.SOURCE_JSON_TO_DATE[SRC_UA3PE]="2017-08-07";Parser.SOURCE_JSON_TO_DATE[SRC_UAGHI]="2017-07-10";Parser.SOURCE_JSON_TO_DATE[SRC_UATSC]="2018-01-08";Parser.SOURCE_JSON_TO_DATE[SRC_UAOD]="2018-04-09";Parser.SOURCE_JSON_TO_DATE[SRC_UACAM]="2018-05-14";Parser.SOURCE_JSON_TO_DATE[SRC_UAGSS]="2018-06-11";Parser.SOURCE_JSON_TO_DATE[SRC_UARoE]="2018-07-23";Parser.SOURCE_JSON_TO_DATE[SRC_UARoR]="2018-08-13";Parser.SOURCE_JSON_TO_DATE[SRC_UAWGE]="2018-07-23";Parser.SOURCE_JSON_TO_DATE[SRC_UAOSS]="2018-11-12";Parser.SOURCE_JSON_TO_DATE[SRC_UASIK]="2018-12-17";Parser.SOURCE_JSON_TO_DATE[SRC_UAAR]="2019-02-28";Parser.SOURCE_JSON_TO_DATE[SRC_UABAM]="2019-08-15";Parser.SOURCE_JSON_TO_DATE[SRC_UASAW]="2019-09-05";Parser.SOURCE_JSON_TO_DATE[SRC_UABAP]="2019-09-18";Parser.SOURCE_JSON_TO_DATE[SRC_UACDW]="2019-10-03";Parser.SOURCE_JSON_TO_DATE[SRC_UAFRR]="2019-10-17";Parser.SOURCE_JSON_TO_DATE[SRC_UACFV]="2019-11-04";Parser.SOURCE_JSON_TO_DATE[SRC_UAFRW]="2019-11-25";Parser.SOURCE_JSON_TO_DATE[SRC_UAPCRM]="2015-10-05";Parser.SOURCE_JSON_TO_DATE[SRC_UAR]="2015-09-09";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SC1]="2020-01-14";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SC2]="2020-02-04";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SC3]="2020-02-24";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SC4]="2020-08-05";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SC5]="2020-10-26";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SMT]="2020-03-26";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020POR]="2020-04-14";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020SCR]="2020-05-12";Parser.SOURCE_JSON_TO_DATE[SRC_UA2020F]="2020-07-13";Parser.SOURCE_JSON_TO_DATE[SRC_UA2021GL]="2020-01-26";Parser.SOURCE_JSON_TO_DATE[SRC_UA2021FF]="2020-03-12";Parser.SOURCE_JSON_TO_DATE[SRC_UA2021DO]="2021-04-14";Parser.SOURCE_JSON_TO_DATE[SRC_UA2021MoS]="2021-06-08";Parser.SOURCES_ADVENTURES=new Set([SRC_LMoP,SRC_HotDQ,SRC_RoT,SRC_RoTOS,SRC_PotA,SRC_OotA,SRC_CoS,SRC_SKT,SRC_TYP,SRC_TYP_AtG,SRC_TYP_DiT,SRC_TYP_TFoF,SRC_TYP_THSoT,SRC_TYP_TSC,SRC_TYP_ToH,SRC_TYP_WPM,SRC_ToA,SRC_TTP,SRC_WDH,SRC_LLK,SRC_WDMM,SRC_KKW,SRC_GoS,SRC_HftT,SRC_OoW,SRC_DIP,SRC_SLW,SRC_SDW,SRC_DC,SRC_BGDIA,SRC_LR,SRC_EFR,SRC_RMBRE,SRC_IMR,SRC_EGW_ToR,SRC_EGW_DD,SRC_EGW_FS,SRC_EGW_US,SRC_IDRotF,SRC_CM,SRC_HoL,SRC_AitFR_ISF,SRC_AitFR_THP,SRC_AitFR_AVT,SRC_AitFR_DN,SRC_AitFR_FCD,SRC_AWM]);Parser.SOURCES_CORE_SUPPLEMENTS=new Set(Object.keys(Parser.SOURCE_JSON_TO_FULL).filter((it=>!Parser.SOURCES_ADVENTURES.has(it))));Parser.SOURCES_NON_STANDARD_WOTC=new Set([SRC_OGA,SRC_LLK,SRC_LR,SRC_TTP,SRC_AWM,SRC_IMR,SRC_SADS,SRC_MFF,SRC_AitFR_ISF,SRC_AitFR_THP,SRC_AitFR_AVT,SRC_AitFR_DN,SRC_AitFR_FCD]);Parser.SOURCES_VANILLA=new Set([SRC_DMG,SRC_MM,SRC_PHB,SRC_SCAG,SRC_TTP,SRC_VGM,SRC_XGE,SRC_MTF,SRC_SAC,SRC_MFF,SRC_SADS,SRC_TCE,SRC_SCREEN,SRC_SCREEN_WILDERNESS_KIT]);Parser.SOURCES_AVAILABLE_DOCS_BOOK={};[SRC_PHB,SRC_MM,SRC_DMG,SRC_SCAG,SRC_VGM,SRC_XGE,SRC_MTF,SRC_GGR,SRC_AI,SRC_ERLW,SRC_RMR,SRC_EGW,SRC_MOT,SRC_TCE,SRC_VRGR].forEach((src=>{Parser.SOURCES_AVAILABLE_DOCS_BOOK[src]=src;Parser.SOURCES_AVAILABLE_DOCS_BOOK[src.toLowerCase()]=src}));Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE={};[SRC_LMoP,SRC_HotDQ,SRC_RoT,SRC_PotA,SRC_OotA,SRC_CoS,SRC_SKT,SRC_TYP_AtG,SRC_TYP_DiT,SRC_TYP_TFoF,SRC_TYP_THSoT,SRC_TYP_TSC,SRC_TYP_ToH,SRC_TYP_WPM,SRC_ToA,SRC_TTP,SRC_WDH,SRC_LLK,SRC_WDMM,SRC_KKW,SRC_GoS,SRC_HftT,SRC_OoW,SRC_DIP,SRC_SLW,SRC_SDW,SRC_DC,SRC_BGDIA,SRC_LR,SRC_EFR,SRC_RMBRE,SRC_IMR,SRC_EGW_ToR,SRC_EGW_DD,SRC_EGW_FS,SRC_EGW_US,SRC_IDRotF,SRC_CM,SRC_HoL,SRC_AitFR_ISF,SRC_AitFR_THP,SRC_AitFR_AVT,SRC_AitFR_DN,SRC_AitFR_FCD].forEach((src=>{Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[src]=src;Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[src.toLowerCase()]=src}));Parser.TAG_TO_DEFAULT_SOURCE={spell:SRC_PHB,item:SRC_DMG,class:SRC_PHB,creature:SRC_MM,condition:SRC_PHB,disease:SRC_DMG,status:SRC_DMG,background:SRC_PHB,race:SRC_PHB,optfeature:SRC_PHB,reward:SRC_DMG,feat:SRC_PHB,psionic:SRC_UATMC,object:SRC_DMG,cult:SRC_MTF,boon:SRC_MTF,trap:SRC_DMG,hazard:SRC_DMG,deity:SRC_PHB,variantrule:SRC_DMG,vehicle:SRC_GoS,vehupgrade:SRC_GoS,action:SRC_PHB,classFeature:SRC_PHB,subclassFeature:SRC_PHB,table:SRC_DMG,language:SRC_PHB,charoption:SRC_MOT,recipe:SRC_HEROES_FEAST,itemEntry:SRC_DMG};Parser.getTagSource=function(tag,source){if(source&&source.trim())return source;tag=tag.trim();if(tag.startsWith("@"))tag=tag.slice(1);if(!Parser.TAG_TO_DEFAULT_SOURCE[tag])throw new Error(`Unhandled tag "${tag}"`);return Parser.TAG_TO_DEFAULT_SOURCE[tag]};Parser.ITEM_TYPE_JSON_TO_ABV={A:"ammunition",AF:"ammunition",AT:"artisan's tools",EM:"eldritch machine",EXP:"explosive",FD:"food and drink",G:"adventuring gear",GS:"gaming set",HA:"heavy armor",INS:"instrument",LA:"light armor",M:"melee weapon",MA:"medium armor",MNT:"mount",MR:"master rune",GV:"generic variant",P:"potion",R:"ranged weapon",RD:"rod",RG:"ring",S:"shield",SC:"scroll",SCF:"spellcasting focus",OTH:"other",T:"tools",TAH:"tack and harness",TG:"trade good",$:"treasure",VEH:"vehicle (land)",SHP:"vehicle (water)",AIR:"vehicle (air)",WD:"wand"};Parser.DMGTYPE_JSON_TO_FULL={A:"acid",B:"bludgeoning",C:"cold",F:"fire",O:"force",L:"lightning",N:"necrotic",P:"piercing",I:"poison",Y:"psychic",R:"radiant",S:"slashing",T:"thunder"};Parser.DMG_TYPES=["acid","bludgeoning","cold","fire","force","lightning","necrotic","piercing","poison","psychic","radiant","slashing","thunder"];Parser.CONDITIONS=["blinded","charmed","deafened","exhaustion","frightened","grappled","incapacitated","invisible","paralyzed","petrified","poisoned","prone","restrained","stunned","unconscious"];Parser.SKILL_JSON_TO_FULL={Acrobatics:["Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The DM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips."],"Animal Handling":["When there is any question whether you can calm down a domesticated animal, keep a mount from getting spooked, or intuit an animal's intentions, the DM might call for a Wisdom (Animal Handling) check. You also make a Wisdom (Animal Handling) check to control your mount when you attempt a risky maneuver."],Arcana:["Your Intelligence (Arcana) check measures your ability to recall lore about spells, magic items, eldritch symbols, magical traditions, the planes of existence, and the inhabitants of those planes."],Athletics:["Your Strength (Athletics) check covers difficult situations you encounter while climbing, jumping, or swimming. Examples include the following activities:",{type:"list",items:["You attempt to climb a sheer or slippery cliff, avoid hazards while scaling a wall, or cling to a surface while something is trying to knock you off.","You try to jump an unusually long distance or pull off a stunt mid jump.","You struggle to swim or stay afloat in treacherous currents, storm-tossed waves, or areas of thick seaweed. Or another creature tries to push or pull you underwater or otherwise interfere with your swimming."]}],Deception:["Your Charisma (Deception) check determines whether you can convincingly hide the truth, either verbally or through your actions. This deception can encompass everything from misleading others through ambiguity to telling outright lies. Typical situations include trying to fast-talk a guard, con a merchant, earn money through gambling, pass yourself off in a disguise, dull someone's suspicions with false assurances, or maintain a straight face while telling a blatant lie."],History:["Your Intelligence (History) check measures your ability to recall lore about historical events, legendary people, ancient kingdoms, past disputes, recent wars, and lost civilizations."],Insight:["Your Wisdom (Insight) check decides whether you can determine the true intentions of a creature, such as when searching out a lie or predicting someone's next move. Doing so involves gleaning clues from body language, speech habits, and changes in mannerisms."],Intimidation:["When you attempt to influence someone through overt threats, hostile actions, and physical violence, the DM might ask you to make a Charisma (Intimidation) check. Examples include trying to pry information out of a prisoner, convincing street thugs to back down from a confrontation, or using the edge of a broken bottle to convince a sneering vizier to reconsider a decision."],Investigation:["When you look around for clues and make deductions based on those clues, you make an Intelligence (Investigation) check. You might deduce the location of a hidden object, discern from the appearance of a wound what kind of weapon dealt it, or determine the weakest point in a tunnel that could cause it to collapse. Poring through ancient scrolls in search of a hidden fragment of knowledge might also call for an Intelligence (Investigation) check."],Medicine:["A Wisdom (Medicine) check lets you try to stabilize a dying companion or diagnose an illness."],Nature:["Your Intelligence (Nature) check measures your ability to recall lore about terrain, plants and animals, the weather, and natural cycles."],Perception:["Your Wisdom (Perception) check lets you spot, hear, or otherwise detect the presence of something. It measures your general awareness of your surroundings and the keenness of your senses.","For example, you might try to hear a conversation through a closed door, eavesdrop under an open window, or hear monsters moving stealthily in the forest. Or you might try to spot things that are obscured or easy to miss, whether they are orcs lying in ambush on a road, thugs hiding in the shadows of an alley, or candlelight under a closed secret door."],Performance:["Your Charisma (Performance) check determines how well you can delight an audience with music, dance, acting, storytelling, or some other form of entertainment."],Persuasion:["When you attempt to influence someone or a group of people with tact, social graces, or good nature, the DM might ask you to make a Charisma (Persuasion) check. Typically, you use persuasion when acting in good faith, to foster friendships, make cordial requests, or exhibit proper etiquette. Examples of persuading others include convincing a chamberlain to let your party see the king, negotiating peace between warring tribes, or inspiring a crowd of townsfolk."],Religion:["Your Intelligence (Religion) check measures your ability to recall lore about deities, rites and prayers, religious hierarchies, holy symbols, and the practices of secret cults."],"Sleight of Hand":["Whenever you attempt an act of legerdemain or manual trickery, such as planting something on someone else or concealing an object on your person, make a Dexterity (Sleight of Hand) check. The DM might also call for a Dexterity (Sleight of Hand) check to determine whether you can lift a coin purse off another person or slip something out of another person's pocket."],Stealth:["Make a Dexterity (Stealth) check when you attempt to conceal yourself from enemies, slink past guards, slip away without being noticed, or sneak up on someone without being seen or heard."],Survival:["The DM might ask you to make a Wisdom (Survival) check to follow tracks, hunt wild game, guide your group through frozen wastelands, identify signs that owlbears live nearby, predict the weather, or avoid quicksand and other natural hazards."]};Parser.SENSE_JSON_TO_FULL={blindsight:["A creature with blindsight can perceive its surroundings without relying on sight, within a specific radius. Creatures without eyes, such as oozes, and creatures with echolocation or heightened senses, such as bats and true dragons, have this sense."],darkvision:["Many creatures in fantasy gaming worlds, especially those that dwell underground, have darkvision. Within a specified range, a creature with darkvision can see in dim light as if it were bright light and in darkness as if it were dim light, so areas of darkness are only lightly obscured as far as that creature is concerned. However, the creature can't discern color in that darkness, only shades of gray."],tremorsense:["A creature with tremorsense can detect and pinpoint the origin of vibrations within a specific radius, provided that the creature and the source of the vibrations are in contact with the same ground or substance. Tremorsense can't be used to detect flying or incorporeal creatures. Many burrowing creatures, such as ankhegs and umber hulks, have this special sense."],truesight:["A creature with truesight can, out to a specific range, see in normal and magical darkness, see invisible creatures and objects, automatically detect visual illusions and succeed on saving throws against them, and perceives the original form of a shapechanger or a creature that is transformed by magic. Furthermore, the creature can see into the Ethereal Plane."]};Parser.NUMBERS_ONES=["","one","two","three","four","five","six","seven","eight","nine"];Parser.NUMBERS_TENS=["","","twenty","thirty","forty","fifty","sixty","seventy","eighty","ninety"];Parser.NUMBERS_TEENS=["ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen"];;
IS_NODE=typeof module!=="undefined";if(IS_NODE)require("./parser.js");IS_DEPLOYED="1.134.0";VERSION_NUMBER="1.134.0";DEPLOYED_STATIC_ROOT="";IS_VTT=false;IMGUR_CLIENT_ID=`abdea4de492d3b0`;HASH_PART_SEP=",";HASH_LIST_SEP="_";HASH_SUB_LIST_SEP="~";HASH_SUB_KV_SEP=":";HASH_BLANK="blankhash";HASH_SUB_NONE="null";VeCt={STR_NONE:"None",STR_SEE_CONSOLE:"See the console (CTRL+SHIFT+J) for details.",HASH_SCALED:"scaled",HASH_SCALED_SUMMON:"scaledsummon",FILTER_BOX_SUB_HASH_SEARCH_PREFIX:"fbsr",JSON_HOMEBREW_INDEX:`homebrew/index.json`,STORAGE_HOMEBREW:"HOMEBREW_STORAGE",STORAGE_HOMEBREW_META:"HOMEBREW_META_STORAGE",STORAGE_EXCLUDES:"EXCLUDES_STORAGE",STORAGE_DMSCREEN:"DMSCREEN_STORAGE",STORAGE_DMSCREEN_TEMP_SUBLIST:"DMSCREEN_TEMP_SUBLIST",STORAGE_ROLLER_MACRO:"ROLLER_MACRO_STORAGE",STORAGE_ENCOUNTER:"ENCOUNTER_STORAGE",STORAGE_POINTBUY:"POINTBUY_STORAGE",DUR_INLINE_NOTIFY:500,PG_NONE:"NO_PAGE",STR_GENERIC:"Generic",SYM_UI_SKIP:Symbol("uiSkip"),LOC_ORIGIN_CANCER:"https://5e.tools",STR_NO_ATTUNEMENT:"No Attunement Required",CR_UNKNOWN:100001,CR_CUSTOM:1e5,SPELL_LEVEL_MAX:9,ENTDATA_TABLE_INCLUDE:"tableInclude",ENTDATA_ITEM_MERGED_ENTRY_TAG:"item.mergedEntryTag"};String.prototype.uppercaseFirst=String.prototype.uppercaseFirst||function(){const str=this.toString();if(str.length===0)return str;if(str.length===1)return str.charAt(0).toUpperCase();return str.charAt(0).toUpperCase()+str.slice(1)};String.prototype.lowercaseFirst=String.prototype.lowercaseFirst||function(){const str=this.toString();if(str.length===0)return str;if(str.length===1)return str.charAt(0).toLowerCase();return str.charAt(0).toLowerCase()+str.slice(1)};String.prototype.toTitleCase=String.prototype.toTitleCase||function(){let str=this.replace(/([^\W_]+[^\s-/]*) */g,(m0=>m0.charAt(0).toUpperCase()+m0.substr(1).toLowerCase()));StrUtil._TITLE_LOWER_WORDS_RE=StrUtil._TITLE_LOWER_WORDS_RE||StrUtil.TITLE_LOWER_WORDS.map((it=>new RegExp(`\\s${it}\\s`,"gi")));StrUtil._TITLE_UPPER_WORDS_RE=StrUtil._TITLE_UPPER_WORDS_RE||StrUtil.TITLE_UPPER_WORDS.map((it=>new RegExp(`\\b${it}\\b`,"g")));StrUtil._TITLE_UPPER_WORDS_PLURAL_RE=StrUtil._TITLE_UPPER_WORDS_PLURAL_RE||StrUtil.TITLE_UPPER_WORDS.map((it=>new RegExp(`\\b${it}s\\b`,"g")));const len=StrUtil.TITLE_LOWER_WORDS.length;for(let i=0;i<len;i++){str=str.replace(StrUtil._TITLE_LOWER_WORDS_RE[i],(txt=>txt.toLowerCase()))}const len1=StrUtil.TITLE_UPPER_WORDS.length;for(let i=0;i<len1;i++){str=str.replace(StrUtil._TITLE_UPPER_WORDS_RE[i],StrUtil.TITLE_UPPER_WORDS[i].toUpperCase())}for(let i=0;i<len1;i++){str=str.replace(StrUtil._TITLE_UPPER_WORDS_PLURAL_RE[i],`${StrUtil.TITLE_UPPER_WORDS[i].toUpperCase()}s`)}str=str.split(/([;:?!.])/g).map((pt=>pt.replace(/^(\s*)([^\s])/,((...m)=>`${m[1]}${m[2].toUpperCase()}`)))).join("");return str};String.prototype.toSentenceCase=String.prototype.toSentenceCase||function(){const out=[];const re=/([^.!?]+)([.!?]\s*|$)/gi;let m;do{m=re.exec(this);if(m){out.push(m[0].toLowerCase().uppercaseFirst())}}while(m);return out.join("")};String.prototype.toSpellCase=String.prototype.toSpellCase||function(){return this.toLowerCase().replace(/(^|of )(bigby|otiluke|mordenkainen|evard|hadar|agathys|abi-dalzim|aganazzar|drawmij|leomund|maximilian|melf|nystul|otto|rary|snilloc|tasha|tenser|jim)('s|$| )/g,((...m)=>`${m[1]}${m[2].toTitleCase()}${m[3]}`))};String.prototype.toCamelCase=String.prototype.toCamelCase||function(){return this.split(" ").map(((word,index)=>{if(index===0)return word.toLowerCase();return`${word.charAt(0).toUpperCase()}${word.slice(1).toLowerCase()}`})).join("")};String.prototype.escapeQuotes=String.prototype.escapeQuotes||function(){return this.replace(/'/g,`&apos;`).replace(/"/g,`&quot;`).replace(/</g,`&lt;`).replace(/>/g,`&gt;`)};String.prototype.qq=String.prototype.qq||function(){return this.escapeQuotes()};String.prototype.unescapeQuotes=String.prototype.unescapeQuotes||function(){return this.replace(/&apos;/g,`'`).replace(/&quot;/g,`"`).replace(/&lt;/g,`<`).replace(/&gt;/g,`>`)};String.prototype.uq=String.prototype.uq||function(){return this.unescapeQuotes()};String.prototype.encodeApos=String.prototype.encodeApos||function(){return this.replace(/'/g,`%27`)};String.prototype.distance=String.prototype.distance||function(target){let source=this;let i;let j;if(!source)return target?target.length:0;else if(!target)return source.length;const m=source.length;const n=target.length;const INF=m+n;const score=new Array(m+2);const sd={};for(i=0;i<m+2;i++)score[i]=new Array(n+2);score[0][0]=INF;for(i=0;i<=m;i++){score[i+1][1]=i;score[i+1][0]=INF;sd[source[i]]=0}for(j=0;j<=n;j++){score[1][j+1]=j;score[0][j+1]=INF;sd[target[j]]=0}for(i=1;i<=m;i++){let DB=0;for(j=1;j<=n;j++){const i1=sd[target[j-1]];const j1=DB;if(source[i-1]===target[j-1]){score[i+1][j+1]=score[i][j];DB=j}else{score[i+1][j+1]=Math.min(score[i][j],Math.min(score[i+1][j],score[i][j+1]))+1}score[i+1][j+1]=Math.min(score[i+1][j+1],score[i1]?score[i1][j1]+(i-i1-1)+1+(j-j1-1):Infinity)}sd[source[i-1]]=i}return score[m+1][n+1]};String.prototype.isNumeric=String.prototype.isNumeric||function(){return!isNaN(parseFloat(this))&&isFinite(this)};String.prototype.last=String.prototype.last||function(){return this[this.length-1]};String.prototype.escapeRegexp=String.prototype.escapeRegexp||function(){return this.replace(/[-/\\^$*+?.()|[\]{}]/g,"\\$&")};String.prototype.toUrlified=String.prototype.toUrlified||function(){return encodeURIComponent(this.toLowerCase()).toLowerCase()};String.prototype.toChunks=String.prototype.toChunks||function(size){const numChunks=Math.ceil(this.length/size);const chunks=new Array(numChunks);for(let i=0,o=0;i<numChunks;++i,o+=size)chunks[i]=this.substr(o,size);return chunks};String.prototype.toAscii=String.prototype.toAscii||function(){return this.normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/Æ/g,"AE").replace(/æ/g,"ae")};Array.prototype.joinConjunct=Array.prototype.joinConjunct||function(joiner,lastJoiner,nonOxford){if(this.length===0)return"";if(this.length===1)return this[0];if(this.length===2)return this.join(lastJoiner);else{let outStr="";for(let i=0;i<this.length;++i){outStr+=this[i];if(i<this.length-2)outStr+=joiner;else if(i===this.length-2)outStr+=`${!nonOxford&&this.length>2?joiner.trim():""}${lastJoiner}`}return outStr}};StrUtil={COMMAS_NOT_IN_PARENTHESES_REGEX:/,\s?(?![^(]*\))/g,COMMA_SPACE_NOT_IN_PARENTHESES_REGEX:/, (?![^(]*\))/g,uppercaseFirst:function(string){return string.uppercaseFirst()},TITLE_LOWER_WORDS:["a","an","the","and","but","or","for","nor","as","at","by","for","from","in","into","near","of","on","onto","to","with","over"],TITLE_UPPER_WORDS:["Id","Tv","Dm","Ok","Npc","Pc"],padNumber:(n,len,padder)=>String(n).padStart(len,padder),elipsisTruncate(str,atLeastPre=5,atLeastSuff=0,maxLen=20){if(maxLen>=str.length)return str;maxLen=Math.max(atLeastPre+atLeastSuff+3,maxLen);let out="";let remain=maxLen-(3+atLeastPre+atLeastSuff);for(let i=0;i<str.length-atLeastSuff;++i){const c=str[i];if(i<atLeastPre)out+=c;else if(remain-- >0)out+=c}if(remain<0)out+="...";out+=str.substring(str.length-atLeastSuff,str.length);return out},toTitleCase(str){return str.toTitleCase()},qq(str){return(str=str||"").qq()}};CleanUtil={getCleanJson(data,minify=false){data=MiscUtil.copy(data);data=MiscUtil.getWalker().walk(data,{string:str=>CleanUtil.getCleanString(str)});let str=minify?JSON.stringify(data):`${JSON.stringify(data,null,"\t")}\n`;return str.replace(CleanUtil.STR_REPLACEMENTS_REGEX,(match=>CleanUtil.STR_REPLACEMENTS[match]))},getCleanString(str){return str.replace(CleanUtil.SHARED_REPLACEMENTS_REGEX,(match=>CleanUtil.SHARED_REPLACEMENTS[match])).replace(CleanUtil._SOFT_HYPHEN_REMOVE_REGEX,"").replace(CleanUtil._ELLIPSIS_COLLAPSE_REGEX,"$1").replace(CleanUtil._DASH_COLLAPSE_REGEX,"$1").replace(CleanUtil._TAG_DASH_EXPAND_REGEX,"$1 $2")}};CleanUtil.SHARED_REPLACEMENTS={"’":"'","":"'","…":"..."," ":" ","ﬀ":"ff","ﬃ":"ffi","ﬄ":"ffl","ﬁ":"fi","ﬂ":"fl","Ĳ":"IJ","ĳ":"ij","Ǉ":"LJ","ǈ":"Lj","ǉ":"lj","Ǌ":"NJ","ǋ":"Nj","ǌ":"nj","ﬅ":"ft","“":`"`,"”":`"`};CleanUtil.STR_REPLACEMENTS={"—":"\\u2014","–":"\\u2013","−":"\\u2212"};CleanUtil.SHARED_REPLACEMENTS_REGEX=new RegExp(Object.keys(CleanUtil.SHARED_REPLACEMENTS).join("|"),"g");CleanUtil.STR_REPLACEMENTS_REGEX=new RegExp(Object.keys(CleanUtil.STR_REPLACEMENTS).join("|"),"g");CleanUtil._SOFT_HYPHEN_REMOVE_REGEX=/\u00AD/g;CleanUtil._ELLIPSIS_COLLAPSE_REGEX=/\s*(\.\s*\.\s*\.)/g;CleanUtil._DASH_COLLAPSE_REGEX=/[ ]*([\u2014\u2013])[ ]*/g;CleanUtil._TAG_DASH_EXPAND_REGEX=/({@[a-zA-Z])([\u2014\u2013])/g;SourceUtil={_subclassReprintLookup:{},async pInitSubclassReprintLookup(){SourceUtil._subclassReprintLookup=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/generated/gendata-subclass-lookup.json`)},isSubclassReprinted(className,classSource,subclassShortName,subclassSource){const fromLookup=MiscUtil.get(SourceUtil._subclassReprintLookup,classSource,className,subclassSource,subclassShortName);return fromLookup?fromLookup.isReprinted:false},isSiteSource(source){return!!Parser.SOURCE_JSON_TO_FULL[source]},isAdventure(source){if(source instanceof FilterItem)source=source.item;return Parser.SOURCES_ADVENTURES.has(source)},isCoreOrSupplement(source){if(source instanceof FilterItem)source=source.item;return Parser.SOURCES_CORE_SUPPLEMENTS.has(source)},isNonstandardSource(source){return source!=null&&!BrewUtil.hasSourceJson(source)&&SourceUtil._isNonstandardSourceWiz(source)},_isNonstandardSourceWiz(source){return source.startsWith(SRC_UA_PREFIX)||source.startsWith(SRC_PS_PREFIX)||source.startsWith(SRC_AL_PREFIX)||Parser.SOURCES_NON_STANDARD_WOTC.has(source)},getFilterGroup(source){if(source instanceof FilterItem)source=source.item;if(BrewUtil.hasSourceJson(source))return 2;return Number(SourceUtil.isNonstandardSource(source))},getAdventureBookSourceHref(source,page){if(!source)return null;source=source.toLowerCase();let docPage;if(Parser.SOURCES_AVAILABLE_DOCS_BOOK[source])docPage=UrlUtil.PG_BOOK;else if(Parser.SOURCES_AVAILABLE_DOCS_ADVENTURE[source])docPage=UrlUtil.PG_ADVENTURE;if(!docPage)return null;return`${docPage}#${[source,page?`page:${page}`:null].filter(Boolean).join(HASH_PART_SEP)}`}};CurrencyUtil={doSimplifyCoins(obj,opts){opts=opts||{};const conversionTable=opts.currencyConversionTable||Parser.getCurrencyConversionTable(opts.currencyConversionId);if(!conversionTable.length)return obj;const normalized=conversionTable.map((it=>({...it,normalizedMult:1/it.mult}))).sort(((a,b)=>SortUtil.ascSort(a.normalizedMult,b.normalizedMult)));for(let i=0;i<normalized.length-1;++i){const coinCur=normalized[i].coin;const coinNxt=normalized[i+1].coin;const coinRatio=normalized[i+1].normalizedMult/normalized[i].normalizedMult;if(obj[coinCur]&&Math.abs(obj[coinCur])>=coinRatio){const nxtVal=obj[coinCur]>=0?Math.floor(obj[coinCur]/coinRatio):Math.ceil(obj[coinCur]/coinRatio);obj[coinCur]=obj[coinCur]%coinRatio;obj[coinNxt]=(obj[coinNxt]||0)+nxtVal}}if(opts.originalCurrency){const normalizedHighToLow=MiscUtil.copy(normalized).reverse();normalizedHighToLow.forEach(((coinMeta,i)=>{const valOld=opts.originalCurrency[coinMeta.coin]||0;const valNew=obj[coinMeta.coin]||0;const prevCoinMeta=normalizedHighToLow[i-1];const nxtCoinMeta=normalizedHighToLow[i+1];if(!prevCoinMeta){if(nxtCoinMeta){const diff=valNew-valOld;if(diff>0){obj[coinMeta.coin]=valOld;const coinRatio=coinMeta.normalizedMult/nxtCoinMeta.normalizedMult;obj[nxtCoinMeta.coin]=(obj[nxtCoinMeta.coin]||0)+diff*coinRatio}}}else{if(nxtCoinMeta){const diffPrevCoin=(opts.originalCurrency[prevCoinMeta.coin]||0)-(obj[prevCoinMeta.coin]||0);const coinRatio=prevCoinMeta.normalizedMult/coinMeta.normalizedMult;const capFromOld=valOld+(diffPrevCoin>0?diffPrevCoin*coinRatio:0);const diff=valNew-capFromOld;if(diff>0){obj[coinMeta.coin]=capFromOld;const coinRatio=coinMeta.normalizedMult/nxtCoinMeta.normalizedMult;obj[nxtCoinMeta.coin]=(obj[nxtCoinMeta.coin]||0)+diff*coinRatio}}}}))}normalized.filter((coinMeta=>obj[coinMeta.coin]===0||obj[coinMeta.coin]==null)).forEach((coinMeta=>{obj[coinMeta.coin]=null;delete obj[coinMeta.coin]}));if(opts.isPopulateAllValues)normalized.forEach((coinMeta=>obj[coinMeta.coin]=obj[coinMeta.coin]||0));return obj},getAsCopper(obj){return Parser.FULL_CURRENCY_CONVERSION_TABLE.map((currencyMeta=>(obj[currencyMeta.coin]||0)*(1/currencyMeta.mult))).reduce(((a,b)=>a+b),0)}};Math.seed=Math.seed||function(s){return function(){s=Math.sin(s)*1e4;return s-Math.floor(s)}};JqueryUtil={_isEnhancementsInit:false,initEnhancements(){if(JqueryUtil._isEnhancementsInit)return;JqueryUtil._isEnhancementsInit=true;JqueryUtil.addSelectors();window.$$=function(parts,...args){if(parts instanceof jQuery){return(...passed)=>{const parts2=[...passed[0]];const args2=passed.slice(1);parts2[0]=`<div>${parts2[0]}`;parts2.last(`${parts2.last()}</div>`);const $temp=$$(parts2,...args2);$temp.children().each(((i,e)=>$(e).appendTo(parts)));return parts}}else{const $eles=[];let ixArg=0;const handleArg=arg=>{if(arg instanceof $){$eles.push(arg);return`<${arg.tag()} data-r="true"></${arg.tag()}>`}else if(arg instanceof HTMLElement){return handleArg($(arg))}else return arg};const raw=parts.reduce(((html,p)=>{const myIxArg=ixArg++;if(args[myIxArg]==null)return`${html}${p}`;if(args[myIxArg]instanceof Array)return`${html}${args[myIxArg].map((arg=>handleArg(arg))).join("")}${p}`;else return`${html}${handleArg(args[myIxArg])}${p}`}));const $res=$(raw);if($res.length===1){if($res.attr("data-r")==="true")return $eles[0];else $res.find(`[data-r=true]`).replaceWith((i=>$eles[i]))}else{const $tmp=$(`<div></div>`);$tmp.append($res);$tmp.find(`[data-r=true]`).replaceWith((i=>$eles[i]));return $tmp.children()}return $res}};$.fn.extend({disableSpellcheck:function(){return this.attr("autocomplete","new-password").attr("autocapitalize","off").attr("spellcheck","false")},tag:function(){return this.prop("tagName").toLowerCase()},title:function(...args){return this.attr("title",...args)},placeholder:function(...args){return this.attr("placeholder",...args)},disable:function(){return this.attr("disabled",true)},fastSetHtml:function(html){if(!this.length)return this;let tgt=this[0];while(tgt.children.length){tgt=tgt.children[0]}tgt.innerHTML=html;return this},blurOnEsc:function(){return this.keydown((evt=>{if(evt.which===27)this.blur()}))},hideVe:function(){return this.addClass("ve-hidden")},showVe:function(){return this.removeClass("ve-hidden")},toggleVe:function(val){if(val===undefined)return this.toggleClass("ve-hidden",!this.hasClass("ve-hidden"));else return this.toggleClass("ve-hidden",!val)}});$.event.special.destroyed={remove:function(o){if(o.handler)o.handler()}}},addSelectors(){$.expr[":"].textEquals=(el,i,m)=>$(el).text().toLowerCase().trim()===m[3].unescapeQuotes();$.expr[":"].containsInsensitive=(el,i,m)=>{const searchText=m[3];const textNode=$(el).contents().filter(((i,e)=>e.nodeType===3))[0];if(!textNode)return false;const match=textNode.nodeValue.toLowerCase().trim().match(`${searchText.toLowerCase().trim().escapeRegexp()}`);return match&&match.length>0}},showCopiedEffect($ele,text="Copied!",bubble){const top=$(window).scrollTop();const pos=$ele.offset();const animationOptions={top:"-=8",opacity:0};if(bubble){animationOptions.left=`${Math.random()>.5?"-":"+"}=${~~(Math.random()*17)}`}const seed=Math.random();const duration=bubble?250+seed*200:250;const offsetY=bubble?16:0;const $dispCopied=$(`<div class="clp__disp-copied"></div>`);$dispCopied.html(text).css({top:pos.top-24+offsetY-top,left:pos.left+$ele.width()/2}).appendTo(document.body).animate(animationOptions,{duration:duration,complete:()=>$dispCopied.remove(),progress:(_,progress)=>{if(bubble){const diffProgress=.5-progress;animationOptions.top=`${diffProgress>0?"-":"+"}=40`;$dispCopied.css("transform",`rotate(${seed>.5?"-":""}${seed*500*progress}deg)`)}}})},_dropdownInit:false,bindDropdownButton($ele){if(!JqueryUtil._dropdownInit){JqueryUtil._dropdownInit=true;document.addEventListener("click",(()=>[...document.querySelectorAll(`.open`)].filter((ele=>!(ele.className||"").split(" ").includes(`dropdown--navbar`))).forEach((ele=>ele.classList.remove("open")))))}$ele.click((()=>setTimeout((()=>$ele.parent().addClass("open")),1)))},_ACTIVE_TOAST:[],doToast(options){if(typeof window==="undefined")return;if(typeof options==="string"){options={content:options,type:"info"}}options.type=options.type||"info";const doCleanup=$toast=>{$toast.removeClass("toast--animate");setTimeout((()=>$toast.remove()),85);JqueryUtil._ACTIVE_TOAST.splice(JqueryUtil._ACTIVE_TOAST.indexOf($toast),1)};const $btnToastDismiss=$(`<button class="btn toast__btn-close"><span class="glyphicon glyphicon-remove"></span></button>`).click((()=>doCleanup($toast)));const $toast=$$`
		<div class="toast toast--type-${options.type}">
			<div class="toast__wrp-content">${options.content}</div>
			<div class="toast__wrp-control">${$btnToastDismiss}</div>
		</div>`.prependTo($(`body`)).data("pos",0);setTimeout((()=>$toast.addClass(`toast--animate`)),5);setTimeout((()=>doCleanup($toast)),5e3);if(JqueryUtil._ACTIVE_TOAST.length){JqueryUtil._ACTIVE_TOAST.forEach(($oldToast=>{const pos=$oldToast.data("pos");$oldToast.data("pos",pos+1);if(pos===2)doCleanup($oldToast)}))}JqueryUtil._ACTIVE_TOAST.push($toast)}};if(typeof window!=="undefined")window.addEventListener("load",JqueryUtil.initEnhancements);ElementUtil={getOrModify({tag:tag,clazz:clazz,style:style,click:click,contextmenu:contextmenu,change:change,mousedown:mousedown,mouseup:mouseup,mousemove:mousemove,html:html,text:text,ele:ele,name:name,title:title,val:val,children:children,outer:outer,href:href}){ele=ele||(outer?(new DOMParser).parseFromString(outer,"text/html").body.childNodes[0]:document.createElement(tag));if(clazz)ele.className=clazz;if(style)ele.setAttribute("style",style);if(click)ele.addEventListener("click",click);if(contextmenu)ele.addEventListener("contextmenu",contextmenu);if(change)ele.addEventListener("change",change);if(mousedown)ele.addEventListener("mousedown",mousedown);if(mouseup)ele.addEventListener("mouseup",mouseup);if(mousemove)ele.addEventListener("mousemove",mousemove);if(html!=null)ele.innerHTML=html;if(text!=null)ele.textContent=text;if(name!=null)ele.setAttribute("name",name);if(title!=null)ele.setAttribute("title",title);if(href!=null)ele.setAttribute("href",href);if(val!=null)ele.setAttribute("value",val);if(children)for(let i=0,len=children.length;i<len;++i)ele.append(children[i]);ele.appends=ele.appends||ElementUtil._appends.bind(ele);ele.appendTo=ele.appendTo||ElementUtil._appendTo.bind(ele);ele.prependTo=ele.prependTo||ElementUtil._prependTo.bind(ele);ele.addClass=ele.addClass||ElementUtil._addClass.bind(ele);ele.removeClass=ele.removeClass||ElementUtil._removeClass.bind(ele);ele.toggleClass=ele.toggleClass||ElementUtil._toggleClass.bind(ele);ele.showVe=ele.showVe||ElementUtil._showVe.bind(ele);ele.hideVe=ele.hideVe||ElementUtil._hideVe.bind(ele);ele.toggleVe=ele.toggleVe||ElementUtil._toggleVe.bind(ele);ele.empty=ele.empty||ElementUtil._empty.bind(ele);ele.detach=ele.detach||ElementUtil._detach.bind(ele);ele.attr=ele.attr||ElementUtil._attr.bind(ele);ele.val=ele.val||ElementUtil._val.bind(ele);ele.html=ele.html||ElementUtil._html.bind(ele);ele.onClick=ele.onClick||ElementUtil._onClick.bind(ele);ele.onContextmenu=ele.onContextmenu||ElementUtil._onContextmenu.bind(ele);ele.onChange=ele.onChange||ElementUtil._onChange.bind(ele);return ele},_appends(child){this.appendChild(child);return this},_appendTo(parent){parent.appendChild(this);return this},_prependTo(parent){parent.prepend(this);return this},_addClass(clazz){this.classList.add(clazz);return this},_removeClass(clazz){this.classList.remove(clazz);return this},_toggleClass(clazz,isActive){if(isActive==null)this.classList.toggle(clazz);else if(isActive)this.classList.add(clazz);else this.classList.remove(clazz);return this},_showVe(){this.classList.remove("ve-hidden");return this},_hideVe(){this.classList.add("ve-hidden");return this},_toggleVe(isActive){this.toggleClass("ve-hidden",isActive==null?isActive:!isActive);return this},_empty(){this.innerHTML="";return this},_detach(){if(this.parentElement)this.parentElement.removeChild(this);return this},_attr(name,value){this.setAttribute(name,value);return this},_html(html){this.innerHTML=html;return this},_onClick(fn){return ElementUtil._onX(this,"click",fn)},_onContextmenu(fn){return ElementUtil._onX(this,"contextmenu",fn)},_onChange(fn){return ElementUtil._onX(this,"change",fn)},_onX(ele,evtName,fn){ele.addEventListener(evtName,fn);return ele},_val(val){if(val!==undefined){switch(this.tagName){case"SELECT":{let selectedIndexNxt=-1;for(let i=0,len=this.options.length;i<len;++i){if(this.options[i]?.value===val){selectedIndexNxt=i;break}}this.selectedIndex=selectedIndexNxt;return this}default:{this.value=val;return this}}}switch(this.tagName){case"SELECT":return this.options[this.selectedIndex]?.value;default:return this.value}},getIndexPathToParent(parent,child){if(!parent.contains(child))return null;const path=[];while(child!==parent){if(!child.parentElement)return null;const ix=[...child.parentElement.children].indexOf(child);if(!~ix)return null;path.push(ix);child=child.parentElement}return path.reverse()},getChildByIndexPath(parent,indexPath){for(let i=0;i<indexPath.length;++i){const ix=indexPath[i];parent=parent.children[ix];if(!parent)return null}return parent}};if(typeof window!=="undefined")window.e_=ElementUtil.getOrModify;ObjUtil={mergeWith(source,target,fnMerge,options={depth:1}){if(!source||!target||typeof fnMerge!=="function")throw new Error("Must include a source, target and a fnMerge to handle merging");const recursive=function(deepSource,deepTarget,depth=1){if(depth>options.depth||!deepSource||!deepTarget)return;for(let prop of Object.keys(deepSource)){deepTarget[prop]=fnMerge(deepSource[prop],deepTarget[prop],source,target);recursive(source[prop],deepTarget[prop],depth+1)}};recursive(source,target,1)},async pForEachDeep(source,pCallback,options={depth:Infinity,callEachLevel:false}){const path=[];const pDiveDeep=async function(val,path,depth=0){if(options.callEachLevel||typeof val!=="object"||options.depth===depth){await pCallback(val,path,depth)}if(options.depth!==depth&&typeof val==="object"){for(const key of Object.keys(val)){path.push(key);await pDiveDeep(val[key],path,depth+1)}}path.pop()};await pDiveDeep(source,path)}};MiscUtil={COLOR_HEALTHY:"#00bb20",COLOR_HURT:"#c5ca00",COLOR_BLOODIED:"#f7a100",COLOR_DEFEATED:"#cc0000",copy(obj){return JSON.parse(JSON.stringify(obj))},async pCopyTextToClipboard(text){function doCompatibilityCopy(){const $iptTemp=$(`<textarea class="clp__wrp-temp"></textarea>`).appendTo(document.body).val(text).select();document.execCommand("Copy");$iptTemp.remove()}if(navigator&&navigator.permissions){try{const access=await navigator.permissions.query({name:"clipboard-write"});if(access.state==="granted"||access.state==="prompt"){await navigator.clipboard.writeText(text)}else doCompatibilityCopy()}catch(e){doCompatibilityCopy()}}else doCompatibilityCopy()},checkProperty(object,...path){for(let i=0;i<path.length;++i){object=object[path[i]];if(object==null)return false}return true},get(object,...path){if(object==null)return null;for(let i=0;i<path.length;++i){object=object[path[i]];if(object==null)return object}return object},set(object,...pathAndVal){if(object==null)return null;const val=pathAndVal.pop();if(!pathAndVal.length)return null;const len=pathAndVal.length;for(let i=0;i<len;++i){const pathPart=pathAndVal[i];if(i===len-1)object[pathPart]=val;else object=object[pathPart]=object[pathPart]||{}}return val},getOrSet(object,...pathAndVal){if(pathAndVal.length<2)return null;const existing=MiscUtil.get(object,...pathAndVal.slice(0,-1));return existing||MiscUtil.set(object,...pathAndVal)},delete(object,...path){if(object==null)return null;for(let i=0;i<path.length-1;++i){object=object[path[i]];if(object==null)return object}return delete object[path.last()]},mix:superclass=>new MiscUtil._MixinBuilder(superclass),_MixinBuilder:function(superclass){this.superclass=superclass;this.with=function(...mixins){return mixins.reduce(((c,mixin)=>mixin(c)),this.superclass)}},clearSelection(){if(document.getSelection){document.getSelection().removeAllRanges();document.getSelection().addRange(document.createRange())}else if(window.getSelection){if(window.getSelection().removeAllRanges){window.getSelection().removeAllRanges();window.getSelection().addRange(document.createRange())}else if(window.getSelection().empty){window.getSelection().empty()}}else if(document.selection){document.selection.empty()}},randomColor(){let r;let g;let b;const h=RollerUtil.randomise(30,0)/30;const i=~~(h*6);const f=h*6-i;const q=1-f;switch(i%6){case 0:r=1;g=f;b=0;break;case 1:r=q;g=1;b=0;break;case 2:r=0;g=1;b=f;break;case 3:r=0;g=q;b=1;break;case 4:r=f;g=0;b=1;break;case 5:r=1;g=0;b=q;break}return`#${`00${(~~(r*255)).toString(16)}`.slice(-2)}${`00${(~~(g*255)).toString(16)}`.slice(-2)}${`00${(~~(b*255)).toString(16)}`.slice(-2)}`},invertColor(hex,opts){opts=opts||{};hex=hex.slice(1);let r=parseInt(hex.slice(0,2),16);let g=parseInt(hex.slice(2,4),16);let b=parseInt(hex.slice(4,6),16);const isDark=r*.299+g*.587+b*.114>186;if(opts.dark&&opts.light)return isDark?opts.dark:opts.light;else if(opts.bw)return isDark?"#000000":"#FFFFFF";r=(255-r).toString(16);g=(255-g).toString(16);b=(255-b).toString(16);return`#${[r,g,b].map((it=>it.padStart(2,"0"))).join("")}`},scrollPageTop(){document.body.scrollTop=document.documentElement.scrollTop=0},expEval(str){return new Function(`return ${str.replace(/[^-()\d/*+.]/g,"")}`)()},parseNumberRange(input,min=Number.MIN_SAFE_INTEGER,max=Number.MAX_SAFE_INTEGER){function errInvalid(input){throw new Error(`Could not parse range input "${input}"`)}function errOutOfRange(){throw new Error(`Number was out of range! Range was ${min}-${max} (inclusive).`)}function isOutOfRange(num){return num<min||num>max}function addToRangeVal(range,num){range.add(num)}function addToRangeLoHi(range,lo,hi){for(let i=lo;i<=hi;++i)range.add(i)}while(true){if(input&&input.trim()){const clean=input.replace(/\s*/g,"");if(/^((\d+-\d+|\d+),)*(\d+-\d+|\d+)$/.exec(clean)){const parts=clean.split(",");const out=new Set;for(const part of parts){if(part.includes("-")){const spl=part.split("-");const numLo=Number(spl[0]);const numHi=Number(spl[1]);if(isNaN(numLo)||isNaN(numHi)||numLo===0||numHi===0||numLo>numHi)errInvalid();if(isOutOfRange(numLo)||isOutOfRange(numHi))errOutOfRange();if(numLo===numHi)addToRangeVal(out,numLo);else addToRangeLoHi(out,numLo,numHi)}else{const num=Number(part);if(isNaN(num)||num===0)errInvalid();else{if(isOutOfRange(num))errOutOfRange();addToRangeVal(out,num)}}}return out}else errInvalid()}else return null}},MONTH_NAMES:["January","February","March","April","May","June","July","August","September","October","November","December"],dateToStr(date,short){const month=MiscUtil.MONTH_NAMES[date.getMonth()];return`${short?month.substring(0,3):month} ${Parser.getOrdinalForm(date.getDate())}, ${date.getFullYear()}`},findCommonPrefix(strArr){let prefix=null;strArr.forEach((s=>{if(prefix==null){prefix=s}else{const minLen=Math.min(s.length,prefix.length);for(let i=0;i<minLen;++i){const cp=prefix[i];const cs=s[i];if(cp!==cs){prefix=prefix.substring(0,i);break}}}}));return prefix},calculateBlendedColor(fgHexTarget,fgOpacity,bgHex){const fgDcTarget=CryptUtil.hex2Dec(fgHexTarget);const bgDc=CryptUtil.hex2Dec(bgHex);return((fgDcTarget-(1-fgOpacity)*bgDc)/fgOpacity).toString(16)},debounce(func,wait,options){let lastArgs;let lastThis;let maxWait;let result;let timerId;let lastCallTime;let lastInvokeTime=0;let leading=false;let maxing=false;let trailing=true;wait=Number(wait)||0;if(typeof options==="object"){leading=!!options.leading;maxing="maxWait"in options;maxWait=maxing?Math.max(Number(options.maxWait)||0,wait):maxWait;trailing="trailing"in options?!!options.trailing:trailing}function invokeFunc(time){let args=lastArgs;let thisArg=lastThis;lastArgs=lastThis=undefined;lastInvokeTime=time;result=func.apply(thisArg,args);return result}function leadingEdge(time){lastInvokeTime=time;timerId=setTimeout(timerExpired,wait);return leading?invokeFunc(time):result}function remainingWait(time){let timeSinceLastCall=time-lastCallTime;let timeSinceLastInvoke=time-lastInvokeTime;let result=wait-timeSinceLastCall;return maxing?Math.min(result,maxWait-timeSinceLastInvoke):result}function shouldInvoke(time){let timeSinceLastCall=time-lastCallTime;let timeSinceLastInvoke=time-lastInvokeTime;return lastCallTime===undefined||timeSinceLastCall>=wait||timeSinceLastCall<0||maxing&&timeSinceLastInvoke>=maxWait}function timerExpired(){const time=Date.now();if(shouldInvoke(time)){return trailingEdge(time)}timerId=setTimeout(timerExpired,remainingWait(time))}function trailingEdge(time){timerId=undefined;if(trailing&&lastArgs)return invokeFunc(time);lastArgs=lastThis=undefined;return result}function cancel(){if(timerId!==undefined)clearTimeout(timerId);lastInvokeTime=0;lastArgs=lastCallTime=lastThis=timerId=undefined}function flush(){return timerId===undefined?result:trailingEdge(Date.now())}function debounced(){let time=Date.now();let isInvoking=shouldInvoke(time);lastArgs=arguments;lastThis=this;lastCallTime=time;if(isInvoking){if(timerId===undefined)return leadingEdge(lastCallTime);if(maxing){timerId=setTimeout(timerExpired,wait);return invokeFunc(lastCallTime)}}if(timerId===undefined)timerId=setTimeout(timerExpired,wait);return result}debounced.cancel=cancel;debounced.flush=flush;return debounced},throttle(func,wait,options){let leading=true;let trailing=true;if(typeof options==="object"){leading="leading"in options?!!options.leading:leading;trailing="trailing"in options?!!options.trailing:trailing}return this.debounce(func,wait,{leading:leading,maxWait:wait,trailing:trailing})},pDelay(msecs,resolveAs){return new Promise((resolve=>setTimeout((()=>resolve(resolveAs)),msecs)))},GENERIC_WALKER_ENTRIES_KEY_BLACKLIST:new Set(["caption","type","colLabels","name","colStyles","style","shortName","subclassShortName"]),getWalker(opts){opts=opts||{};const keyBlacklist=opts.keyBlacklist||new Set;const fn=(obj,primitiveHandlers,lastKey,stack)=>{if(obj==null){if(primitiveHandlers.null)return MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.null,obj:obj,lastKey:lastKey,stack:stack});return obj}const doObjectRecurse=()=>{Object.keys(obj).forEach((k=>{const v=obj[k];if(!keyBlacklist.has(k)){const out=fn(v,primitiveHandlers,k,stack);if(!opts.isNoModification)obj[k]=out}}))};const to=typeof obj;switch(to){case undefined:if(primitiveHandlers.preUndefined)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preUndefined,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.undefined){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.undefined,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postUndefined)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postUndefined,obj:obj,lastKey:lastKey,stack:stack});return obj;case"boolean":if(primitiveHandlers.preBoolean)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preBoolean,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.boolean){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.boolean,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postBoolean)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postBoolean,obj:obj,lastKey:lastKey,stack:stack});return obj;case"number":if(primitiveHandlers.preNumber)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preNumber,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.number){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.number,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postNumber)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postNumber,obj:obj,lastKey:lastKey,stack:stack});return obj;case"string":if(primitiveHandlers.preString)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preString,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.string){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.string,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postString)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postString,obj:obj,lastKey:lastKey,stack:stack});return obj;case"object":{if(obj instanceof Array){if(primitiveHandlers.preArray)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preArray,obj:obj,lastKey:lastKey,stack:stack});if(opts.isDepthFirst){if(stack)stack.push(obj);const out=obj.map((it=>fn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out;if(stack)stack.pop();if(primitiveHandlers.array){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.array,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteArrays)throw new Error(`Array handler(s) returned null!`)}}else{if(primitiveHandlers.array){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.array,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj!=null){const out=obj.map((it=>fn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out}else{if(!opts.isAllowDeleteArrays)throw new Error(`Array handler(s) returned null!`)}}if(primitiveHandlers.postArray)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postArray,obj:obj,lastKey:lastKey,stack:stack});return obj}else{if(primitiveHandlers.preObject)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.preObject,obj:obj,lastKey:lastKey,stack:stack});if(opts.isDepthFirst){if(stack)stack.push(obj);doObjectRecurse();if(stack)stack.pop();if(primitiveHandlers.object){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.object,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}}else{if(primitiveHandlers.object){const out=MiscUtil._getWalker_applyHandlers({opts:opts,handlers:primitiveHandlers.object,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}else{doObjectRecurse()}}if(primitiveHandlers.postObject)MiscUtil._getWalker_runHandlers({handlers:primitiveHandlers.postObject,obj:obj,lastKey:lastKey,stack:stack});return obj}}default:throw new Error(`Unhandled type "${to}"`)}};return{walk:fn}},_getWalker_applyHandlers({opts:opts,handlers:handlers,obj:obj,lastKey:lastKey,stack:stack}){handlers=handlers instanceof Array?handlers:[handlers];handlers.forEach((h=>{const out=h(obj,lastKey,stack);if(!opts.isNoModification)obj=out}));return obj},_getWalker_runHandlers({handlers:handlers,obj:obj,lastKey:lastKey,stack:stack}){handlers=handlers instanceof Array?handlers:[handlers];handlers.forEach((h=>h(obj,lastKey,stack)))},getAsyncWalker(opts){opts=opts||{};const keyBlacklist=opts.keyBlacklist||new Set;const pFn=async(obj,primitiveHandlers,lastKey,stack)=>{if(obj==null){if(primitiveHandlers.null)return MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.null,obj:obj,lastKey:lastKey,stack:stack});return obj}const pDoObjectRecurse=async()=>{await Object.keys(obj).pSerialAwaitMap((async k=>{const v=obj[k];if(keyBlacklist.has(k))return;const out=await pFn(v,primitiveHandlers,k,stack);if(!opts.isNoModification)obj[k]=out}))};const to=typeof obj;switch(to){case undefined:if(primitiveHandlers.preUndefined)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preUndefined,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.undefined){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.undefined,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postUndefined)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postUndefined,obj:obj,lastKey:lastKey,stack:stack});return obj;case"boolean":if(primitiveHandlers.preBoolean)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preBoolean,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.boolean){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.boolean,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postBoolean)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postBoolean,obj:obj,lastKey:lastKey,stack:stack});return obj;case"number":if(primitiveHandlers.preNumber)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preNumber,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.number){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.number,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postNumber)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postNumber,obj:obj,lastKey:lastKey,stack:stack});return obj;case"string":if(primitiveHandlers.preString)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preString,obj:obj,lastKey:lastKey,stack:stack});if(primitiveHandlers.string){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.string,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(primitiveHandlers.postString)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postString,obj:obj,lastKey:lastKey,stack:stack});return obj;case"object":{if(obj instanceof Array){if(primitiveHandlers.preArray)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preArray,obj:obj,lastKey:lastKey,stack:stack});if(opts.isDepthFirst){if(stack)stack.push(obj);const out=await obj.pSerialAwaitMap((it=>pFn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out;if(stack)stack.pop();if(primitiveHandlers.array){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.array,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteArrays)throw new Error(`Array handler(s) returned null!`)}}else{if(primitiveHandlers.array){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.array,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj!=null){const out=await obj.pSerialAwaitMap((it=>pFn(it,primitiveHandlers,lastKey,stack)));if(!opts.isNoModification)obj=out}else{if(!opts.isAllowDeleteArrays)throw new Error(`Array handler(s) returned null!`)}}if(primitiveHandlers.postArray)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postArray,obj:obj,lastKey:lastKey,stack:stack});return obj}else{if(primitiveHandlers.preObject)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.preObject,obj:obj,lastKey:lastKey,stack:stack});if(opts.isDepthFirst){if(stack)stack.push(obj);await pDoObjectRecurse();if(stack)stack.pop();if(primitiveHandlers.object){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.object,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}}else{if(primitiveHandlers.object){const out=await MiscUtil._getAsyncWalker_pApplyHandlers({opts:opts,handlers:primitiveHandlers.object,obj:obj,lastKey:lastKey,stack:stack});if(!opts.isNoModification)obj=out}if(obj==null){if(!opts.isAllowDeleteObjects)throw new Error(`Object handler(s) returned null!`)}else{await pDoObjectRecurse()}}if(primitiveHandlers.postObject)await MiscUtil._getAsyncWalker_pRunHandlers({handlers:primitiveHandlers.postObject,obj:obj,lastKey:lastKey,stack:stack});return obj}}default:throw new Error(`Unhandled type "${to}"`)}};return{pWalk:pFn}},async _getAsyncWalker_pApplyHandlers({opts:opts,handlers:handlers,obj:obj,lastKey:lastKey,stack:stack}){handlers=handlers instanceof Array?handlers:[handlers];await handlers.pSerialAwaitMap((async pH=>{const out=await pH(obj,lastKey,stack);if(!opts.isNoModification)obj=out}));return obj},async _getAsyncWalker_pRunHandlers({handlers:handlers,obj:obj,lastKey:lastKey,stack:stack}){handlers=handlers instanceof Array?handlers:[handlers];await handlers.pSerialAwaitMap((pH=>pH(obj,lastKey,stack)))},pDefer(fn){return(async()=>fn())()}};EventUtil={_mouseX:0,_mouseY:0,init(){document.addEventListener("mousemove",(evt=>{EventUtil._mouseX=evt.clientX;EventUtil._mouseY=evt.clientY}))},getClientX(evt){return evt.touches&&evt.touches.length?evt.touches[0].clientX:evt.clientX},getClientY(evt){return evt.touches&&evt.touches.length?evt.touches[0].clientY:evt.clientY},isInInput(evt){return evt.target.nodeName==="INPUT"||evt.target.nodeName==="TEXTAREA"||evt.target.getAttribute("contenteditable")==="true"},noModifierKeys(evt){return!evt.ctrlKey&&!evt.altKey&&!evt.metaKey}};if(typeof window!=="undefined")window.addEventListener("load",EventUtil.init);ContextUtil={_isInit:false,_menus:[],_init(){if(ContextUtil._isInit)return;ContextUtil._isInit=true;$(document.body).click((()=>ContextUtil._menus.forEach((menu=>menu.close()))))},getMenu(actions){ContextUtil._init();const menu=new ContextUtil.Menu(actions);ContextUtil._menus.push(menu);return menu},deleteMenu(menu){menu.remove();const ix=ContextUtil._menus.findIndex((it=>it===menu));if(~ix)ContextUtil._menus.splice(ix,1)},pOpenMenu(evt,menu,userData){evt.preventDefault();evt.stopPropagation();ContextUtil._init();ContextUtil._menus.filter((it=>it!==menu)).forEach((it=>it.close()));return menu.pOpen(evt,userData)},Menu:function(actions){this._actions=actions;this._pResult=null;this._resolveResult=null;this._userData=null;this.remove=function(){if(this._$ele)this._$ele.remove()};this.width=function(){return this._$ele?this._$ele.width():undefined};this.height=function(){return this._$ele?this._$ele.height():undefined};this.pOpen=function(evt,userData){this._initLazy();if(this._resolveResult)this._resolveResult(null);this._pResult=new Promise((resolve=>{this._resolveResult=resolve}));this._userData=userData;this._$ele.css({position:"absolute",left:this._getMenuPosition(evt,"x"),top:this._getMenuPosition(evt,"y")}).showVe();return this._pResult};this.close=function(){if(this._$ele)this._$ele.hideVe()};this._initLazy=function(){if(this._$ele)return;const $elesAction=this._actions.map((it=>{if(it==null)return $(`<div class="my-1 w-100 ui-ctx__divider"></div>`);const $row=$$`<div class="py-1 px-5 ui-ctx__row ${it.isDisabled?"disabled":""} ${it.style||""}">${it.text}</div>`.click((async evt=>{if(it.isDisabled)return;evt.preventDefault();evt.stopPropagation();this.close();const result=await it.fnAction(evt,this._userData);if(this._resolveResult)this._resolveResult(result)}));if(it.title)$row.title(it.title);return $row}));this._$ele=$$`<div class="flex-col ui-ctx__wrp py-2">${$elesAction}</div>`.hideVe().appendTo(document.body)};this._getMenuPosition=function(evt,axis){const{fnMenuSize:fnMenuSize,propMousePos:propMousePos,fnWindowSize:fnWindowSize,fnScrollDir:fnScrollDir}=axis==="x"?{fnMenuSize:"width",propMousePos:"clientX",fnWindowSize:"width",fnScrollDir:"scrollLeft"}:{fnMenuSize:"height",propMousePos:"clientY",fnWindowSize:"height",fnScrollDir:"scrollTop"};const posMouse=evt[propMousePos];const szWin=$(window)[fnWindowSize]();const posScroll=$(window)[fnScrollDir]();let position=posMouse+posScroll;const szMenu=this[fnMenuSize]();if(posMouse+szMenu>szWin&&szMenu<posMouse)position-=szMenu;return position}},Action:function(text,fnAction,opts){opts=opts||{};this.text=text;this.fnAction=fnAction;this.isDisabled=opts.isDisabled;this.title=opts.title;this.style=opts.style}};SearchUtil={removeStemmer(elasticSearch){const stemmer=elasticlunr.Pipeline.getRegisteredFunction("stemmer");elasticSearch.pipeline.remove(stemmer)}};UrlUtil={encodeForHash(toEncode){if(toEncode instanceof Array)return toEncode.map((it=>`${it}`.toUrlified())).join(HASH_LIST_SEP);else return`${toEncode}`.toUrlified()},autoEncodeHash(obj){const curPage=UrlUtil.getCurrentPage();const encoder=UrlUtil.URL_TO_HASH_BUILDER[curPage];if(!encoder)throw new Error(`No encoder found for page ${curPage}`);return encoder(obj)},decodeHash(hash){return hash.split(HASH_LIST_SEP).map((it=>decodeURIComponent(it)))},getCurrentPage(){if(typeof window==="undefined")return VeCt.PG_NONE;const pSplit=window.location.pathname.split("/");let out=pSplit[pSplit.length-1];if(!out.toLowerCase().endsWith(".html"))out+=".html";return out},link(href){function addGetParam(curr){if(href.includes("?"))return`${curr}&v=${VERSION_NUMBER}`;else return`${curr}?v=${VERSION_NUMBER}`}if(!IS_VTT&&IS_DEPLOYED)return addGetParam(`${DEPLOYED_STATIC_ROOT}${href}`);else if(IS_DEPLOYED)return addGetParam(href);return href},unpackSubHash(subHash,unencode){if(subHash.includes(HASH_SUB_KV_SEP)){const keyValArr=subHash.split(HASH_SUB_KV_SEP).map((s=>s.trim()));const out={};let k=keyValArr[0].toLowerCase();if(unencode)k=decodeURIComponent(k);let v=keyValArr[1].toLowerCase();if(unencode)v=decodeURIComponent(v);out[k]=v.split(HASH_SUB_LIST_SEP).map((s=>s.trim()));if(out[k].length===1&&out[k]===HASH_SUB_NONE)out[k]=[];return out}else{throw new Error(`Badly formatted subhash ${subHash}`)}},packSubHash(key,values,opts){opts=opts||{};if(opts.isEncodeBoth||opts.isEncodeKey)key=key.toUrlified();if(opts.isEncodeBoth||opts.isEncodeValues)values=values.map((it=>it.toUrlified()));return`${key}${HASH_SUB_KV_SEP}${values.join(HASH_SUB_LIST_SEP)}`},categoryToPage(category){return UrlUtil.CAT_TO_PAGE[category]},categoryToHoverPage(category){return UrlUtil.CAT_TO_HOVER_PAGE[category]||UrlUtil.categoryToPage(category)},bindLinkExportButton(filterBox,$btn){$btn=$btn||ListUtil.getOrTabRightButton(`btn-link-export`,`magnet`);$btn.addClass("btn-copy-effect").off("click").on("click",(async evt=>{let url=window.location.href;const parts=filterBox.getSubHashes({isAddSearchTerm:true});parts.unshift(url);if(evt.shiftKey&&ListUtil.sublist){const toEncode=JSON.stringify(ListUtil.getExportableSublist());const part2=UrlUtil.packSubHash(ListUtil.SUB_HASH_PREFIX,[toEncode],{isEncodeBoth:true});parts.push(part2)}await MiscUtil.pCopyTextToClipboard(parts.join(HASH_PART_SEP));JqueryUtil.showCopiedEffect($btn)})).title("Get Link to Filters (SHIFT adds List)")},mini:{compress(primitive){const type=typeof primitive;if(primitive==null)return`x`;switch(type){case"boolean":return`b${Number(primitive)}`;case"number":return`n${primitive}`;case"string":return`s${primitive.toUrlified()}`;default:throw new Error(`Unhandled type "${type}"`)}},decompress(raw){const[type,data]=[raw.slice(0,1),raw.slice(1)];switch(type){case"x":return null;case"b":return!!Number(data);case"n":return Number(data);case"s":return String(data);default:throw new Error(`Unhandled type "${type}"`)}}},class:{getIndexedClassEntries(cls){const out=[];(cls.classFeatures||[]).forEach(((lvlFeatureList,ixLvl)=>{lvlFeatureList.filter((feature=>!feature.gainSubclassFeature&&feature.name!=="Ability Score Improvement"&&feature.name!=="Proficiency Versatility")).forEach(((feature,ixFeature)=>{const name=Renderer.findName(feature);if(!name){if(BrewUtil.hasSourceJson(cls.source))return;else throw new Error("Class feature had no name!")}out.push({_type:"classFeature",source:cls.source.source||cls.source,name:name,hash:`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls)}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:ixLvl,ixFeature:ixFeature}})}`,entry:feature,level:ixLvl+1})}))}));return out},getIndexedSubclassEntries(sc){const out=[];const lvlFeatures=sc.subclassFeatures||[];sc.source=sc.source||sc.classSource;lvlFeatures.forEach((lvlFeature=>{lvlFeature.forEach(((feature,ixFeature)=>{const subclassFeatureHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:sc.className,source:sc.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc,feature:{ixLevel:feature.level-1,ixFeature:ixFeature}})}`;const name=Renderer.findName(feature);if(!name){if(BrewUtil.hasSourceJson(sc.source))return;else throw new Error("Subclass feature had no name!")}out.push({_type:"subclassFeature",name:name,subclassName:sc.name,subclassShortName:sc.shortName,source:sc.source.source||sc.source,hash:subclassFeatureHash,entry:feature,level:feature.level});if(feature.entries){const namedFeatureParts=feature.entries.filter((it=>it.name));namedFeatureParts.forEach((it=>{if(out.find((existing=>it.name===existing.name&&feature.level===existing.level)))return;out.push({_type:"subclassFeaturePart",name:it.name,subclassName:sc.name,subclassShortName:sc.shortName,source:sc.source.source||sc.source,hash:subclassFeatureHash,entry:feature,level:feature.level})}))}}))}));return out}},getStateKeySubclass(sc){return Parser.stringToSlug(`sub ${sc.shortName||sc.name} ${Parser.sourceJsonToAbv(sc.source)}`)},getClassesPageStatePart(opts){const stateParts=[opts.subclass?`${UrlUtil.getStateKeySubclass(opts.subclass)}=${UrlUtil.mini.compress(true)}`:null,opts.feature?`feature=${UrlUtil.mini.compress(`${opts.feature.ixLevel}-${opts.feature.ixFeature}`)}`:""].filter(Boolean);return stateParts.length?UrlUtil.packSubHash("state",stateParts):""}};UrlUtil.PG_BESTIARY="bestiary.html";UrlUtil.PG_SPELLS="spells.html";UrlUtil.PG_BACKGROUNDS="backgrounds.html";UrlUtil.PG_ITEMS="items.html";UrlUtil.PG_CLASSES="classes.html";UrlUtil.PG_CONDITIONS_DISEASES="conditionsdiseases.html";UrlUtil.PG_FEATS="feats.html";UrlUtil.PG_OPT_FEATURES="optionalfeatures.html";UrlUtil.PG_PSIONICS="psionics.html";UrlUtil.PG_RACES="races.html";UrlUtil.PG_REWARDS="rewards.html";UrlUtil.PG_VARIANTRULES="variantrules.html";UrlUtil.PG_ADVENTURE="adventure.html";UrlUtil.PG_ADVENTURES="adventures.html";UrlUtil.PG_BOOK="book.html";UrlUtil.PG_BOOKS="books.html";UrlUtil.PG_DEITIES="deities.html";UrlUtil.PG_CULTS_BOONS="cultsboons.html";UrlUtil.PG_OBJECTS="objects.html";UrlUtil.PG_TRAPS_HAZARDS="trapshazards.html";UrlUtil.PG_QUICKREF="quickreference.html";UrlUtil.PG_MANAGE_BREW="managebrew.html";UrlUtil.PG_MAKE_BREW="makebrew.html";UrlUtil.PG_DEMO_RENDER="renderdemo.html";UrlUtil.PG_TABLES="tables.html";UrlUtil.PG_VEHICLES="vehicles.html";UrlUtil.PG_CHARACTERS="characters.html";UrlUtil.PG_ACTIONS="actions.html";UrlUtil.PG_LANGUAGES="languages.html";UrlUtil.PG_STATGEN="statgen.html";UrlUtil.PG_LIFEGEN="lifegen.html";UrlUtil.PG_NAMES="names.html";UrlUtil.PG_DM_SCREEN="dmscreen.html";UrlUtil.PG_CR_CALCULATOR="crcalculator.html";UrlUtil.PG_ENCOUNTERGEN="encountergen.html";UrlUtil.PG_LOOTGEN="lootgen.html";UrlUtil.PG_TEXT_CONVERTER="converter.html";UrlUtil.PG_CHANGELOG="changelog.html";UrlUtil.PG_CHAR_CREATION_OPTIONS="charcreationoptions.html";UrlUtil.PG_RECIPES="recipes.html";UrlUtil.PG_CLASS_SUBCLASS_FEATURES="classfeatures.html";UrlUtil.URL_TO_HASH_BUILDER={};UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BESTIARY]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_SPELLS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BACKGROUNDS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ITEMS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CONDITIONS_DISEASES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_FEATS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_OPT_FEATURES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_PSIONICS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RACES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_REWARDS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_VARIANTRULES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ADVENTURE]=it=>UrlUtil.encodeForHash(it.id);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BOOK]=it=>UrlUtil.encodeForHash(it.id);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_DEITIES]=it=>UrlUtil.encodeForHash([it.name,it.pantheon,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CULTS_BOONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_OBJECTS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_TRAPS_HAZARDS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_TABLES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_VEHICLES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ACTIONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_LANGUAGES]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CHAR_CREATION_OPTIONS]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RECIPES]=it=>`${UrlUtil.encodeForHash([it.name,it.source])}${it._scaleFactor?`${HASH_PART_SEP}${VeCt.HASH_SCALED}${HASH_SUB_KV_SEP}${it._scaleFactor}`:""}`;UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASS_SUBCLASS_FEATURES]=it=>it.__prop==="subclassFeature"||it.subclassSource?UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"](it):UrlUtil.URL_TO_HASH_BUILDER["classFeature"](it);UrlUtil.URL_TO_HASH_BUILDER["subclass"]=it=>{const hashParts=[UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource}),UrlUtil.getClassesPageStatePart({subclass:it})].filter(Boolean);return Hist.util.getCleanHash(hashParts.join(HASH_PART_SEP))};UrlUtil.URL_TO_HASH_BUILDER["classFeature"]=it=>UrlUtil.encodeForHash([it.name,it.className,it.classSource,it.level,it.source]);UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]=it=>UrlUtil.encodeForHash([it.name,it.className,it.classSource,it.subclassShortName,it.subclassSource,it.level,it.source]);UrlUtil.URL_TO_HASH_BUILDER["legendaryGroup"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["legendarygroup"]=UrlUtil.URL_TO_HASH_BUILDER["legendaryGroup"];UrlUtil.URL_TO_HASH_BUILDER["itemEntry"]=it=>UrlUtil.encodeForHash([it.name,it.source]);UrlUtil.URL_TO_HASH_BUILDER["itementry"]=UrlUtil.URL_TO_HASH_BUILDER["itemEntry"];UrlUtil.PG_TO_NAME={};UrlUtil.PG_TO_NAME[UrlUtil.PG_BESTIARY]="Bestiary";UrlUtil.PG_TO_NAME[UrlUtil.PG_SPELLS]="Spells";UrlUtil.PG_TO_NAME[UrlUtil.PG_BACKGROUNDS]="Backgrounds";UrlUtil.PG_TO_NAME[UrlUtil.PG_ITEMS]="Items";UrlUtil.PG_TO_NAME[UrlUtil.PG_CLASSES]="Classes";UrlUtil.PG_TO_NAME[UrlUtil.PG_CONDITIONS_DISEASES]="Conditions & Diseases";UrlUtil.PG_TO_NAME[UrlUtil.PG_FEATS]="Feats";UrlUtil.PG_TO_NAME[UrlUtil.PG_OPT_FEATURES]="Other Options and Features";UrlUtil.PG_TO_NAME[UrlUtil.PG_PSIONICS]="Psionics";UrlUtil.PG_TO_NAME[UrlUtil.PG_RACES]="Races";UrlUtil.PG_TO_NAME[UrlUtil.PG_REWARDS]="Supernatural Gifts & Rewards";UrlUtil.PG_TO_NAME[UrlUtil.PG_VARIANTRULES]="Optional, Variant, and Expanded Rules";UrlUtil.PG_TO_NAME[UrlUtil.PG_ADVENTURES]="Adventures";UrlUtil.PG_TO_NAME[UrlUtil.PG_BOOKS]="Books";UrlUtil.PG_TO_NAME[UrlUtil.PG_DEITIES]="Deities";UrlUtil.PG_TO_NAME[UrlUtil.PG_CULTS_BOONS]="Cults & Supernatural Boons";UrlUtil.PG_TO_NAME[UrlUtil.PG_OBJECTS]="Objects";UrlUtil.PG_TO_NAME[UrlUtil.PG_TRAPS_HAZARDS]="Traps & Hazards";UrlUtil.PG_TO_NAME[UrlUtil.PG_QUICKREF]="Quick Reference";UrlUtil.PG_TO_NAME[UrlUtil.PG_MANAGE_BREW]="Homebrew Manager";UrlUtil.PG_TO_NAME[UrlUtil.PG_MAKE_BREW]="Homebrew Builder";UrlUtil.PG_TO_NAME[UrlUtil.PG_DEMO_RENDER]="Renderer Demo";UrlUtil.PG_TO_NAME[UrlUtil.PG_TABLES]="Tables";UrlUtil.PG_TO_NAME[UrlUtil.PG_VEHICLES]="Vehicles";UrlUtil.PG_TO_NAME[UrlUtil.PG_ACTIONS]="Actions";UrlUtil.PG_TO_NAME[UrlUtil.PG_LANGUAGES]="Languages";UrlUtil.PG_TO_NAME[UrlUtil.PG_STATGEN]="Stat Generator";UrlUtil.PG_TO_NAME[UrlUtil.PG_LIFEGEN]="This Is Your Life";UrlUtil.PG_TO_NAME[UrlUtil.PG_NAMES]="Names";UrlUtil.PG_TO_NAME[UrlUtil.PG_DM_SCREEN]="DM Screen";UrlUtil.PG_TO_NAME[UrlUtil.PG_CR_CALCULATOR]="CR Calculator";UrlUtil.PG_TO_NAME[UrlUtil.PG_ENCOUNTERGEN]="Encounter Generator";UrlUtil.PG_TO_NAME[UrlUtil.PG_LOOTGEN]="Loot Generator";UrlUtil.PG_TO_NAME[UrlUtil.PG_TEXT_CONVERTER]="Text Converter";UrlUtil.PG_TO_NAME[UrlUtil.PG_CHANGELOG]="Changelog";UrlUtil.PG_TO_NAME[UrlUtil.PG_CHAR_CREATION_OPTIONS]="Other Character Creation Options";UrlUtil.PG_TO_NAME[UrlUtil.PG_RECIPES]="Recipes";UrlUtil.PG_TO_NAME[UrlUtil.PG_CLASS_SUBCLASS_FEATURES]="Class & Subclass Features";UrlUtil.CAT_TO_PAGE={};UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CREATURE]=UrlUtil.PG_BESTIARY;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SPELL]=UrlUtil.PG_SPELLS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_BACKGROUND]=UrlUtil.PG_BACKGROUNDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ITEM]=UrlUtil.PG_ITEMS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CLASS]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CLASS_FEATURE]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SUBCLASS]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SUBCLASS_FEATURE]=UrlUtil.PG_CLASSES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CONDITION]=UrlUtil.PG_CONDITIONS_DISEASES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_FEAT]=UrlUtil.PG_FEATS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ELDRITCH_INVOCATION]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_METAMAGIC]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_MANEUVER_BATTLEMASTER]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_MANEUVER_CAVALIER]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ARCANE_SHOT]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_OPTIONAL_FEATURE_OTHER]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_FIGHTING_STYLE]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PSIONIC]=UrlUtil.PG_PSIONICS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_RACE]=UrlUtil.PG_RACES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_OTHER_REWARD]=UrlUtil.PG_REWARDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_VARIANT_OPTIONAL_RULE]=UrlUtil.PG_VARIANTRULES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ADVENTURE]=UrlUtil.PG_ADVENTURE;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_DEITY]=UrlUtil.PG_DEITIES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_OBJECT]=UrlUtil.PG_OBJECTS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TRAP]=UrlUtil.PG_TRAPS_HAZARDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_HAZARD]=UrlUtil.PG_TRAPS_HAZARDS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_QUICKREF]=UrlUtil.PG_QUICKREF;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CULT]=UrlUtil.PG_CULTS_BOONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_BOON]=UrlUtil.PG_CULTS_BOONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_DISEASE]=UrlUtil.PG_CONDITIONS_DISEASES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TABLE]=UrlUtil.PG_TABLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_TABLE_GROUP]=UrlUtil.PG_TABLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_VEHICLE]=UrlUtil.PG_VEHICLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PACT_BOON]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ELEMENTAL_DISCIPLINE]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ARTIFICER_INFUSION]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_SHIP_UPGRADE]=UrlUtil.PG_VEHICLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_INFERNAL_WAR_MACHINE_UPGRADE]=UrlUtil.PG_VEHICLES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ONOMANCY_RESONANT]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_RUNE_KNIGHT_RUNE]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ALCHEMICAL_FORMULA]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_MANEUVER]=UrlUtil.PG_OPT_FEATURES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_ACTION]=UrlUtil.PG_ACTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_LANGUAGE]=UrlUtil.PG_LANGUAGES;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_BOOK]=UrlUtil.PG_BOOK;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_PAGE]=null;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_LEGENDARY_GROUP]=null;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_CHAR_CREATION_OPTIONS]=UrlUtil.PG_CHAR_CREATION_OPTIONS;UrlUtil.CAT_TO_PAGE[Parser.CAT_ID_RECIPES]=UrlUtil.PG_RECIPES;UrlUtil.CAT_TO_HOVER_PAGE={};UrlUtil.CAT_TO_HOVER_PAGE[Parser.CAT_ID_CLASS_FEATURE]="classfeature";UrlUtil.CAT_TO_HOVER_PAGE[Parser.CAT_ID_SUBCLASS_FEATURE]="subclassfeature";UrlUtil.HASH_START_CREATURE_SCALED=`${VeCt.HASH_SCALED}${HASH_SUB_KV_SEP}`;UrlUtil.HASH_START_CREATURE_SCALED_SUMMON=`${VeCt.HASH_SCALED_SUMMON}${HASH_SUB_KV_SEP}`;if(!IS_DEPLOYED&&!IS_VTT&&typeof window!=="undefined"){window.addEventListener("keypress",(e=>{if(EventUtil.noModifierKeys(e)&&typeof d20==="undefined"){if(e.key==="#"){const spl=window.location.href.split("/");window.prompt("Copy to clipboard: Ctrl+C, Enter",`https://noads.5e.tools/${spl[spl.length-1]}`)}}}))}SortUtil={ascSort:(a,b)=>{if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}return SortUtil._ascSort(a,b)},ascSortProp:(prop,a,b)=>SortUtil.ascSort(a[prop],b[prop]),ascSortLower:(a,b)=>{if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}a=a?a.toLowerCase():a;b=b?b.toLowerCase():b;return SortUtil._ascSort(a,b)},ascSortLowerProp:(prop,a,b)=>SortUtil.ascSortLower(a[prop],b[prop]),ascSortNumericalSuffix(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}function popEndNumber(str){const spl=str.split(" ");return spl.last().isNumeric()?[spl.slice(0,-1).join(" "),Number(spl.last().replace(Parser._numberCleanRegexp,""))]:[spl.join(" "),0]}const[aStr,aNum]=popEndNumber(a.item||a);const[bStr,bNum]=popEndNumber(b.item||b);const initialSort=SortUtil.ascSort(aStr,bStr);if(initialSort)return initialSort;return SortUtil.ascSort(aNum,bNum)},_ascSort:(a,b)=>{if(b===a)return 0;return b<a?1:-1},ascSortDate(a,b){return b.getTime()-a.getTime()},ascSortDateString(a,b){return SortUtil.ascSortDate(new Date(a||"1970-01-0"),new Date(b||"1970-01-0"))},compareListNames(a,b){return SortUtil._ascSort(a.name.toLowerCase(),b.name.toLowerCase())},listSort(a,b,opts){opts=opts||{sortBy:"name"};if(opts.sortBy==="name")return SortUtil.compareListNames(a,b);else return SortUtil._compareByOrDefault_compareByOrDefault(a,b,opts.sortBy)},_listSort_compareBy(a,b,sortBy){const aValue=typeof a.values[sortBy]==="string"?a.values[sortBy].toLowerCase():a.values[sortBy];const bValue=typeof b.values[sortBy]==="string"?b.values[sortBy].toLowerCase():b.values[sortBy];return SortUtil._ascSort(aValue,bValue)},_compareByOrDefault_compareByOrDefault(a,b,sortBy){return SortUtil._listSort_compareBy(a,b,sortBy)||SortUtil.compareListNames(a,b)},_MON_TRAIT_ORDER:["special equipment","shapechanger"],monTraitSort:(a,b)=>{if(a.sort!=null&&b.sort!=null)return a.sort-b.sort;if(a.sort!=null&&b.sort==null)return-1;if(a.sort==null&&b.sort!=null)return 1;if(!a.name&&!b.name)return 0;const aClean=a.name.toLowerCase().trim();const bClean=b.name.toLowerCase().trim();const isOnlyA=a.name.endsWith(" Only)");const isOnlyB=b.name.endsWith(" Only)");if(!isOnlyA&&isOnlyB)return-1;if(isOnlyA&&!isOnlyB)return 1;const ixA=SortUtil._MON_TRAIT_ORDER.indexOf(aClean);const ixB=SortUtil._MON_TRAIT_ORDER.indexOf(bClean);if(~ixA&&~ixB)return ixA-ixB;else if(~ixA)return-1;else if(~ixB)return 1;else return SortUtil.ascSort(aClean,bClean)},_alignFirst:["L","C"],_alignSecond:["G","E"],alignmentSort:(a,b)=>{if(a===b)return 0;if(SortUtil._alignFirst.includes(a))return-1;if(SortUtil._alignSecond.includes(a))return 1;if(SortUtil._alignFirst.includes(b))return 1;if(SortUtil._alignSecond.includes(b))return-1;return 0},ascSortCr(a,b){if(typeof FilterItem!=="undefined"){if(a instanceof FilterItem)a=a.item;if(b instanceof FilterItem)b=b.item}if(a==="Unknown")a="998";if(b==="Unknown")b="998";if(a==="—"||a==null)a="999";if(b==="—"||b==null)b="999";return SortUtil.ascSort(Parser.crToNumber(a),Parser.crToNumber(b))},ascSortAtts(a,b){const aSpecial=a==="special";const bSpecial=b==="special";return aSpecial&&bSpecial?0:aSpecial?1:bSpecial?-1:Parser.ABIL_ABVS.indexOf(a)-Parser.ABIL_ABVS.indexOf(b)},initBtnSortHandlers($wrpBtnsSort,list){function addCaret($btnSort,direction){$wrpBtnsSort.find(".caret").removeClass("caret");$btnSort.find(".caret_wrp").addClass("caret").toggleClass("caret--reverse",direction==="asc")}const $btnSort=$wrpBtnsSort.find(`.sort[data-sort="${list.sortBy}"]`);addCaret($btnSort,list.sortDir);$wrpBtnsSort.find(".sort").each(((i,e)=>{const $btnSort=$(e);$btnSort.click((evt=>{evt.stopPropagation();const direction=list.sortDir==="asc"?"desc":"asc";addCaret($btnSort,direction);list.sort($btnSort.data("sort"),direction)}))}))}};DataUtil={_loading:{},_loaded:{},_merging:{},_merged:{},async _pLoad(url){if(DataUtil._loading[url]){await DataUtil._loading[url];return DataUtil._loaded[url]}DataUtil._loading[url]=new Promise(((resolve,reject)=>{const request=new XMLHttpRequest;request.open("GET",url,true);request.overrideMimeType("application/json");request.onload=function(){try{DataUtil._loaded[url]=JSON.parse(this.response);resolve()}catch(e){reject(new Error(`Could not parse JSON from ${url}: ${e.message}`))}};request.onerror=e=>reject(new Error(`Error during JSON request: ${e.target.status}`));request.send()}));await DataUtil._loading[url];return DataUtil._loaded[url]},async loadJSON(url,...otherData){const procUrl=UrlUtil.link(url);let ident=procUrl;let data;try{data=await DataUtil._pLoad(procUrl)}catch(e){setTimeout((()=>{throw e}))}if(!data){ident=url;data=await DataUtil._pLoad(url)}await DataUtil.pDoMetaMerge(ident,data);return data},async pDoMetaMerge(ident,data,options){DataUtil._merging[ident]=DataUtil._merging[ident]||DataUtil._pDoMetaMerge(ident,data,options);await DataUtil._merging[ident];return DataUtil._merged[ident]},_pDoMetaMerge_handleCopyProp(prop,arr,entry,options){if(!entry._copy)return;const fnMergeCopy=DataUtil[prop]?.pMergeCopy;if(!fnMergeCopy)throw new Error(`No dependency _copy merge strategy specified for property "${prop}"`);return fnMergeCopy(arr,entry,options)},async _pDoMetaMerge(ident,data,options){if(data._meta){const loadedSourceIds=new Set;if(data._meta.dependencies){await Promise.all(Object.entries(data._meta.dependencies).map((async([dataProp,sourceIds])=>{sourceIds.forEach((sourceId=>loadedSourceIds.add(sourceId)));if(!data[dataProp])return;const isHasInternalCopies=(data._meta.internalCopies||[]).includes(dataProp);const dependencyData=await Promise.all(sourceIds.map((sourceId=>DataUtil.pLoadByMeta(dataProp,sourceId))));const flatDependencyData=dependencyData.map((dd=>dd[dataProp])).flat();await Promise.all(data[dataProp].map((entry=>DataUtil._pDoMetaMerge_handleCopyProp(dataProp,flatDependencyData,entry,{...options,isErrorOnMissing:!isHasInternalCopies}))))})));delete data._meta.dependencies}if(data._meta.internalCopies){for(const prop of data._meta.internalCopies){if(!data[prop])continue;for(const entry of data[prop]){await DataUtil._pDoMetaMerge_handleCopyProp(prop,data[prop],entry,{...options,isErrorOnMissing:true})}}delete data._meta.internalCopies}if(data._meta.includes){const includesData=await Promise.all(Object.entries(data._meta.includes).map((async([dataProp,sourceIds])=>{sourceIds=sourceIds.filter((it=>!loadedSourceIds.has(it)));sourceIds.forEach((sourceId=>loadedSourceIds.add(sourceId)));const includesData=await Promise.all(sourceIds.map((sourceId=>DataUtil.pLoadByMeta(dataProp,sourceId))));const flatIncludesData=includesData.map((dd=>dd[dataProp])).flat();return{dataProp:dataProp,flatIncludesData:flatIncludesData}})));delete data._meta.includes;includesData.forEach((({dataProp:dataProp,flatIncludesData:flatIncludesData})=>{data[dataProp]=[...data[dataProp]||[],...flatIncludesData]}))}}if(data._meta&&data._meta.otherSources){await Promise.all(Object.entries(data._meta.otherSources).map((async([dataProp,sourceIds])=>{const additionalData=await Promise.all(Object.entries(sourceIds).map((async([sourceId,findWith])=>({findWith:findWith,dataOther:await DataUtil.pLoadByMeta(dataProp,sourceId)}))));additionalData.forEach((({findWith:findWith,dataOther:dataOther})=>{const toAppend=dataOther[dataProp].filter((it=>it.otherSources&&it.otherSources.find((os=>os.source===findWith))));if(toAppend.length)data[dataProp]=(data[dataProp]||[]).concat(toAppend)}))})));delete data._meta.otherSources}const props=Object.keys(data);for(const prop of props){if(!data[prop]||!(data[prop]instanceof Array)||!data[prop].length)continue;if(DataUtil[prop]?.pPostProcess)await(DataUtil[prop]?.pPostProcess(data))}DataUtil._merged[ident]=data},getCleanFilename(filename){return filename.replace(/[^-_a-zA-Z0-9]/g,"_")},getCsv(headers,rows){function escapeCsv(str){return`"${str.replace(/"/g,`""`).replace(/ +/g," ").replace(/\n\n+/gi,"\n\n")}"`}function toCsv(row){return row.map((str=>escapeCsv(str))).join(",")}return`${toCsv(headers)}\n${rows.map((r=>toCsv(r))).join("\n")}`},userDownload(filename,data,{fileType:fileType=null,isSipAdditionalMetadata:isSipAdditionalMetadata=false,propVersion:propVersion="siteVersion",valVersion:valVersion=VERSION_NUMBER}={}){filename=`${filename}.json`;if(isSipAdditionalMetadata||data instanceof Array)return DataUtil._userDownload(filename,JSON.stringify(data,null,"\t"),"text/json");data={[propVersion]:valVersion,...data};if(fileType!=null)data={fileType:fileType,...data};return DataUtil._userDownload(filename,JSON.stringify(data,null,"\t"),"text/json")},userDownloadText(filename,string){return DataUtil._userDownload(filename,string,"text/plain")},_userDownload(filename,data,mimeType){const a=document.createElement("a");const t=new Blob([data],{type:mimeType});a.href=window.URL.createObjectURL(t);a.download=filename;a.dispatchEvent(new MouseEvent("click",{bubbles:true,cancelable:true,view:window}));setTimeout((()=>window.URL.revokeObjectURL(a.href)),100)},pUserUpload({isMultiple:isMultiple=false,expectedFileType:expectedFileType=null,propVersion:propVersion="siteVersion"}={}){return new Promise((resolve=>{const $iptAdd=$(`<input type="file" ${isMultiple?"multiple":""} accept=".json" style="position: fixed; top: -100px; left: -100px; display: none;">`).on("change",(evt=>{const input=evt.target;const reader=new FileReader;let readIndex=0;const out=[];reader.onload=async()=>{const name=input.files[readIndex-1].name;const text=reader.result;const json=JSON.parse(text);const isSkipFile=expectedFileType!=null&&json.fileType&&json.fileType!==expectedFileType&&!await InputUiUtil.pGetUserBoolean({textYes:"Yes",textNo:"Cancel",title:"File Type Mismatch",htmlDescription:`The file "${name}" has the type "${json.fileType}" when the expected file type was "${expectedFileType}".<br>Are you sure you want to upload this file?`});if(!isSkipFile){delete json.fileType;delete json[propVersion];out.push(json)}if(input.files[readIndex])reader.readAsText(input.files[readIndex++]);else resolve(out)};reader.readAsText(input.files[readIndex++])})).appendTo(document.body);$iptAdd.click()}))},cleanJson(cpy){cpy.name=cpy._displayName||cpy.name;delete cpy.uniqueId;DataUtil.__cleanJsonObject(cpy);return cpy},__cleanJsonObject(obj){if(obj==null)return obj;if(typeof obj==="object"){if(obj instanceof Array){obj.forEach((it=>DataUtil.__cleanJsonObject(it)))}else{Object.entries(obj).forEach((([k,v])=>{if(k.startsWith("_")&&k!=="_"||k==="customHashId")delete obj[k];else DataUtil.__cleanJsonObject(v)}))}}},_MULTI_SOURCE_PROP_TO_DIR:{monster:"bestiary",monsterFluff:"bestiary",spell:"spells",spellFluff:"spells",class:"class",subclass:"class"},_MULTI_SOURCE_PROP_TO_INDEX_NAME:{monster:"index.json",spell:"index.json",monsterFluff:"fluff-index.json",spellFluff:"fluff-index.json",class:"index.json",subclass:"index.json"},async pLoadByMeta(prop,source){switch(prop){case"monster":case"spell":case"monsterFluff":case"spellFluff":case"class":case"subclass":{const baseUrlPart=`${Renderer.get().baseUrl}data/${DataUtil._MULTI_SOURCE_PROP_TO_DIR[prop]}`;const index=await DataUtil.loadJSON(`${baseUrlPart}/${DataUtil._MULTI_SOURCE_PROP_TO_INDEX_NAME[prop]}`);if(index[source])return DataUtil.loadJSON(`${baseUrlPart}/${index[source]}`);return DataUtil.pLoadBrewBySource(source)}case"background":case"optionalfeature":case"raceFluff":{let url;switch(prop){case"background":url=`${Renderer.get().baseUrl}data/backgrounds.json`;break;case"optionalfeature":url=`${Renderer.get().baseUrl}data/optionalfeatures.json`;break;case"raceFluff":url=`${Renderer.get().baseUrl}data/fluff-races.json`;break}const data=await DataUtil.loadJSON(url);if(data[prop]&&data[prop].some((it=>it.source===source)))return data;return DataUtil.pLoadBrewBySource(source)}case"item":{const data=await DataUtil.item.loadRawJSON();if(data[prop]&&data[prop].some((it=>it.source===source)))return data;return DataUtil.pLoadBrewBySource(source)}case"race":{const data=await DataUtil.race.loadJSON({isAddBaseRaces:true});if(data[prop]&&data[prop].some((it=>it.source===source)))return data;return DataUtil.pLoadBrewBySource(source)}default:throw new Error(`Could not get loadable URL for \`${JSON.stringify({key:prop,value:source})}\``)}},async pLoadBrewBySource(source,{isSilent:isSilent=true}={}){const brewIndex=await DataUtil.brew.pLoadSourceIndex();if(!brewIndex[source]){if(isSilent)return null;throw new Error(`Neither base nor brew index contained source "${source}"`)}const urlRoot=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const brewUrl=DataUtil.brew.getFileUrl(brewIndex[source],urlRoot);await BrewUtil.pDoHandleBrewJson(await DataUtil.loadJSON(brewUrl),UrlUtil.getCurrentPage());return DataUtil.loadJSON(brewUrl)},dbg:{isTrackCopied:false},generic:{_MERGE_REQUIRES_PRESERVE_BASE:{page:true,otherSources:true,srd:true,hasFluff:true,hasFluffImages:true},_walker_replaceTxt:null,unpackUid(uid,tag,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,source,displayText,...others]=uid.split("|").map((it=>it.trim()));source=source||Parser.getTagSource(tag,source);if(opts.isLower)source=source.toLowerCase();return{name:name,source:source,displayText:displayText,others:others}},async _pMergeCopy(impl,page,entryList,entry,options){if(!entry._copy)return;const hash=UrlUtil.URL_TO_HASH_BUILDER[page](entry._copy);const it=impl._mergeCache[hash]||DataUtil.generic._pMergeCopy_search(impl,page,entryList,entry,options);if(!it){if(options.isErrorOnMissing){if(!IS_DEPLOYED&&!IS_VTT)throw new Error(`Could not find "${page}" entity "${entry._copy.name}" ("${entry._copy.source}") to copy in copier "${entry.name}" ("${entry.source}")`)}return}if(DataUtil.dbg.isTrackCopied)it.dbg_isCopied=true;if(it._copy)await DataUtil.generic._pMergeCopy(impl,page,entryList,it,options);return DataUtil.generic._pApplyCopy(impl,MiscUtil.copy(it),entry,options)},_pMergeCopy_search(impl,page,entryList,entry,options){const entryHash=UrlUtil.URL_TO_HASH_BUILDER[page](entry._copy);return entryList.find((it=>{const hash=UrlUtil.URL_TO_HASH_BUILDER[page](it);impl._mergeCache[hash]=it;return hash===entryHash}))},async _pApplyCopy(impl,copyFrom,copyTo,options={}){if(options.doKeepCopy)copyTo.__copy=MiscUtil.copy(copyFrom);function normaliseMods(obj){Object.entries(obj._mod).forEach((([k,v])=>{if(!(v instanceof Array))obj._mod[k]=[v]}))}const copyMeta=copyTo._copy||{};if(copyMeta._mod)normaliseMods(copyMeta);let racials=null;if(copyMeta._trait){const traitData=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/traits.json`);racials=traitData.trait.find((t=>t.name.toLowerCase()===copyMeta._trait.name.toLowerCase()&&t.source.toLowerCase()===copyMeta._trait.source.toLowerCase()));if(!racials)throw new Error(`Could not find traits to apply with name "${copyMeta._trait.name}" and source "${copyMeta._trait.source}"`);racials=MiscUtil.copy(racials);if(racials.apply._mod){normaliseMods(racials.apply);if(copyMeta._mod){Object.entries(racials.apply._mod).forEach((([k,v])=>{if(copyMeta._mod[k])copyMeta._mod[k]=copyMeta._mod[k].concat(v);else copyMeta._mod[k]=v}))}else copyMeta._mod=racials.apply._mod}delete copyMeta._trait}const copyToRootProps=new Set(Object.keys(copyTo));Object.keys(copyFrom).forEach((k=>{if(copyTo[k]===null)return delete copyTo[k];if(copyTo[k]==null){if(DataUtil.generic._MERGE_REQUIRES_PRESERVE_BASE[k]||impl._MERGE_REQUIRES_PRESERVE[k]){if(copyTo._copy._preserve&&copyTo._copy._preserve[k])copyTo[k]=copyFrom[k]}else copyTo[k]=copyFrom[k]}}));if(racials&&racials.apply._root){Object.entries(racials.apply._root).filter((([k,v])=>!copyToRootProps.has(k))).forEach((([k,v])=>copyTo[k]=v))}function doEnsureArray(obj,prop){if(!(obj[prop]instanceof Array))obj[prop]=[obj[prop]]}function getRegexFromReplaceModInfo(replace,flags){return new RegExp(replace,`g${flags||""}`)}function doReplaceStringHandler(re,withStr,str){const split=Renderer.splitByTags(str);const len=split.length;for(let i=0;i<len;++i){if(split[i].startsWith("{@"))continue;split[i]=split[i].replace(re,withStr)}return split.join("")}function doMod_appendStr(modInfo,prop){if(copyTo[prop])copyTo[prop]=`${copyTo[prop]}${modInfo.joiner||""}${modInfo.str}`;else copyTo[prop]=modInfo.str}function doMod_replaceName(modInfo,prop){if(!copyTo[prop])return;DataUtil.generic._walker_replaceTxt=DataUtil.generic._walker_replaceTxt||MiscUtil.getWalker();const re=getRegexFromReplaceModInfo(modInfo.replace,modInfo.flags);const handlers={string:doReplaceStringHandler.bind(null,re,modInfo.with)};copyTo[prop].forEach((it=>{if(it.name)it.name=DataUtil.generic._walker_replaceTxt.walk(it.name,handlers)}))}function doMod_replaceTxt(modInfo,prop){if(!copyTo[prop])return;DataUtil.generic._walker_replaceTxt=DataUtil.generic._walker_replaceTxt||MiscUtil.getWalker();const re=getRegexFromReplaceModInfo(modInfo.replace,modInfo.flags);const handlers={string:doReplaceStringHandler.bind(null,re,modInfo.with)};copyTo[prop]=copyTo[prop].map((it=>{if(typeof it!=="string")return it;return DataUtil.generic._walker_replaceTxt.walk(it,handlers)}));copyTo[prop].forEach((it=>{if(it.entries)it.entries=DataUtil.generic._walker_replaceTxt.walk(it.entries,handlers);if(it.headerEntries)it.headerEntries=DataUtil.generic._walker_replaceTxt.walk(it.headerEntries,handlers);if(it.footerEntries)it.footerEntries=DataUtil.generic._walker_replaceTxt.walk(it.footerEntries,handlers)}))}function doMod_prependArr(modInfo,prop){doEnsureArray(modInfo,"items");copyTo[prop]=copyTo[prop]?modInfo.items.concat(copyTo[prop]):modInfo.items}function doMod_appendArr(modInfo,prop){doEnsureArray(modInfo,"items");copyTo[prop]=copyTo[prop]?copyTo[prop].concat(modInfo.items):modInfo.items}function doMod_appendIfNotExistsArr(modInfo,prop){doEnsureArray(modInfo,"items");if(!copyTo[prop])return copyTo[prop]=modInfo.items;copyTo[prop]=copyTo[prop].concat(modInfo.items.filter((it=>!copyTo[prop].some((x=>CollectionUtil.deepEquals(it,x))))))}function doMod_replaceArr(modInfo,prop,isThrow=true){doEnsureArray(modInfo,"items");if(!copyTo[prop]){if(isThrow)throw new Error(`Could not find "${prop}" array`);return false}let ixOld;if(modInfo.replace.regex){const re=new RegExp(modInfo.replace.regex,modInfo.replace.flags||"");ixOld=copyTo[prop].findIndex((it=>it.name?re.test(it.name):typeof it==="string"?re.test(it):false))}else if(modInfo.replace.index!=null){ixOld=modInfo.replace.index}else{ixOld=copyTo[prop].findIndex((it=>it.name?it.name===modInfo.replace:it===modInfo.replace))}if(~ixOld){copyTo[prop].splice(ixOld,1,...modInfo.items);return true}else if(isThrow)throw new Error(`Could not find "${prop}" item with name "${modInfo.replace}" to replace`);return false}function doMod_replaceOrAppendArr(modInfo,prop){const didReplace=doMod_replaceArr(modInfo,prop,false);if(!didReplace)doMod_appendArr(modInfo,prop)}function doMod_insertArr(modInfo,prop){doEnsureArray(modInfo,"items");if(!copyTo[prop])throw new Error(`Could not find "${prop}" array`);copyTo[prop].splice(modInfo.index,0,...modInfo.items)}function doMod_removeArr(modInfo,prop){if(modInfo.names){doEnsureArray(modInfo,"names");modInfo.names.forEach((nameToRemove=>{const ixOld=copyTo[prop].findIndex((it=>it.name===nameToRemove));if(~ixOld)copyTo[prop].splice(ixOld,1);else{if(!modInfo.force)throw new Error(`Could not find "${prop}" item with name "${nameToRemove}" to remove`)}}))}else if(modInfo.items){doEnsureArray(modInfo,"items");modInfo.items.forEach((itemToRemove=>{const ixOld=copyTo[prop].findIndex((it=>it===itemToRemove));if(~ixOld)copyTo[prop].splice(ixOld,1);else throw new Error(`Could not find "${prop}" item "${itemToRemove}" to remove`)}))}else throw new Error(`One of "names" or "items" must be provided!`)}function doMod_calculateProp(modInfo,prop){copyTo[prop]=copyTo[prop]||{};const toExec=modInfo.formula.replace(/<\$([^$]+)\$>/g,((...m)=>{switch(m[1]){case"prof_bonus":return Parser.crToPb(copyTo.cr);case"dex_mod":return Parser.getAbilityModNumber(copyTo.dex);default:throw new Error(`Unknown variable "${m[1]}"`)}}));copyTo[prop][modInfo.prop]=eval(toExec)}function doMod_scalarAddProp(modInfo,prop){function applyTo(k){const out=Number(copyTo[prop][k])+modInfo.scalar;const isString=typeof copyTo[prop][k]==="string";copyTo[prop][k]=isString?`${out>=0?"+":""}${out}`:out}if(!copyTo[prop])return;if(modInfo.prop==="*")Object.keys(copyTo[prop]).forEach((k=>applyTo(k)));else applyTo(modInfo.prop)}function doMod_scalarMultProp(modInfo,prop){function applyTo(k){let out=Number(copyTo[prop][k])*modInfo.scalar;if(modInfo.floor)out=Math.floor(out);const isString=typeof copyTo[prop][k]==="string";copyTo[prop][k]=isString?`${out>=0?"+":""}${out}`:out}if(!copyTo[prop])return;if(modInfo.prop==="*")Object.keys(copyTo[prop]).forEach((k=>applyTo(k)));else applyTo(modInfo.prop)}function doMod_addSenses(modInfo){doEnsureArray(modInfo,"senses");copyTo.senses=copyTo.senses||[];modInfo.senses.forEach((sense=>{let found=false;for(let i=0;i<copyTo.senses.length;++i){const m=new RegExp(`${sense.type} (\\d+)`,"i").exec(copyTo.senses[i]);if(m){found=true;if(Number(m[1])<sense.type){copyTo.senses[i]=`${sense.type} ${sense.range} ft.`}break}}if(!found)copyTo.senses.push(`${sense.type} ${sense.range} ft.`)}))}function doMod_addSkills(modInfo){copyTo.skill=copyTo.skill||[];Object.entries(modInfo.skills).forEach((([skill,mode])=>{const total=mode*Parser.crToPb(copyTo.cr)+Parser.getAbilityModNumber(copyTo[Parser.skillToAbilityAbv(skill)]);const asText=total>=0?`+${total}`:`-${total}`;if(copyTo.skill&&copyTo.skill[skill]){if(Number(copyTo.skill[skill])<total)copyTo.skill[skill]=asText}else copyTo.skill[skill]=asText}))}function doMod_addSpells(modInfo){if(!copyTo.spellcasting)throw new Error(`Creature did not have a spellcasting property!`);const spellcasting=copyTo.spellcasting[0];if(modInfo.spells){const spells=spellcasting.spells;Object.keys(modInfo.spells).forEach((k=>{if(!spells[k])spells[k]=modInfo.spells[k];else{const spellCategoryNu=modInfo.spells[k];const spellCategoryOld=spells[k];Object.keys(spellCategoryNu).forEach((kk=>{if(!spellCategoryOld[kk])spellCategoryOld[kk]=spellCategoryNu[kk];else{if(typeof spellCategoryOld[kk]==="object"){if(spellCategoryOld[kk]instanceof Array)spellCategoryOld[kk]=spellCategoryOld[kk].concat(spellCategoryNu[kk]).sort(SortUtil.ascSortLower);else throw new Error(`Object at key ${kk} not an array!`)}else spellCategoryOld[kk]=spellCategoryNu[kk]}}))}}))}if(modInfo.will){modInfo.will.forEach((sp=>(modInfo.will=modInfo.will||[]).push(sp)))}if(modInfo.daily){for(let i=1;i<=9;++i){const e=`${i}e`;spellcasting.daily=spellcasting.daily||{};if(modInfo.daily[i]){modInfo.daily[i].forEach((sp=>(spellcasting.daily[i]=spellcasting.daily[i]||[]).push(sp)))}if(modInfo.daily[e]){modInfo.daily[e].forEach((sp=>(spellcasting.daily[e]=spellcasting.daily[e]||[]).push(sp)))}}}}function doMod_replaceSpells(modInfo){if(!copyTo.spellcasting)throw new Error(`Creature did not have a spellcasting property!`);const spellcasting=copyTo.spellcasting[0];const handleReplace=(curSpells,replaceMeta,k)=>{doEnsureArray(replaceMeta,"with");const ix=curSpells[k].indexOf(replaceMeta.replace);if(~ix){curSpells[k].splice(ix,1,...replaceMeta.with);curSpells[k].sort(SortUtil.ascSortLower)}else throw new Error(`Could not find spell "${replaceMeta.replace}" to replace`)};if(modInfo.spells){const trait0=spellcasting.spells;Object.keys(modInfo.spells).forEach((k=>{if(trait0[k]){const replaceMetas=modInfo.spells[k];const curSpells=trait0[k];replaceMetas.forEach((replaceMeta=>handleReplace(curSpells,replaceMeta,"spells")))}}))}if(modInfo.daily){for(let i=1;i<=9;++i){const e=`${i}e`;if(modInfo.daily[i]){modInfo.daily[i].forEach((replaceMeta=>handleReplace(spellcasting.daily,replaceMeta,i)))}if(modInfo.daily[e]){modInfo.daily[e].forEach((replaceMeta=>handleReplace(spellcasting.daily,replaceMeta,e)))}}}}function doMod_scalarAddHit(modInfo,prop){if(!copyTo[prop])return;copyTo[prop]=JSON.parse(JSON.stringify(copyTo[prop]).replace(/{@hit ([-+]?\d+)}/g,((m0,m1)=>`{@hit ${Number(m1)+modInfo.scalar}}`)))}function doMod_scalarAddDc(modInfo,prop){if(!copyTo[prop])return;copyTo[prop]=JSON.parse(JSON.stringify(copyTo[prop]).replace(/{@dc (\d+)}/g,((m0,m1)=>`{@dc ${Number(m1)+modInfo.scalar}}`)))}function doMod_maxSize(modInfo){const ixCur=Parser.SIZE_ABVS.indexOf(copyTo.size);const ixMax=Parser.SIZE_ABVS.indexOf(modInfo.max);if(ixCur<0||ixMax<0)throw new Error(`Unhandled size!`);copyTo.size=Parser.SIZE_ABVS[Math.min(ixCur,ixMax)]}function doMod_scalarMultXp(modInfo){function getOutput(input){let out=input*modInfo.scalar;if(modInfo.floor)out=Math.floor(out);return out}if(copyTo.cr.xp)copyTo.cr.xp=getOutput(copyTo.cr.xp);else{const curXp=Parser.crToXpNumber(copyTo.cr);if(!copyTo.cr.cr)copyTo.cr={cr:copyTo.cr};copyTo.cr.xp=getOutput(curXp)}}function doMod(modInfos,...properties){function handleProp(prop){modInfos.forEach((modInfo=>{if(typeof modInfo==="string"){switch(modInfo){case"remove":return delete copyTo[prop];default:throw new Error(`Unhandled mode: ${modInfo}`)}}else{switch(modInfo.mode){case"appendStr":return doMod_appendStr(modInfo,prop);case"replaceName":return doMod_replaceName(modInfo,prop);case"replaceTxt":return doMod_replaceTxt(modInfo,prop);case"prependArr":return doMod_prependArr(modInfo,prop);case"appendArr":return doMod_appendArr(modInfo,prop);case"replaceArr":return doMod_replaceArr(modInfo,prop);case"replaceOrAppendArr":return doMod_replaceOrAppendArr(modInfo,prop);case"appendIfNotExistsArr":return doMod_appendIfNotExistsArr(modInfo,prop);case"insertArr":return doMod_insertArr(modInfo,prop);case"removeArr":return doMod_removeArr(modInfo,prop);case"calculateProp":return doMod_calculateProp(modInfo,prop);case"scalarAddProp":return doMod_scalarAddProp(modInfo,prop);case"scalarMultProp":return doMod_scalarMultProp(modInfo,prop);case"addSenses":return doMod_addSenses(modInfo);case"addSkills":return doMod_addSkills(modInfo);case"addSpells":return doMod_addSpells(modInfo);case"replaceSpells":return doMod_replaceSpells(modInfo);case"scalarAddHit":return doMod_scalarAddHit(modInfo,prop);case"scalarAddDc":return doMod_scalarAddDc(modInfo,prop);case"maxSize":return doMod_maxSize(modInfo);case"scalarMultXp":return doMod_scalarMultXp(modInfo);default:throw new Error(`Unhandled mode: ${modInfo.mode}`)}}}))}properties.forEach((prop=>handleProp(prop)));if(!properties.length)handleProp()}if(copyMeta._mod){Object.entries(copyMeta._mod).forEach((([k,v])=>{copyMeta._mod[k]=JSON.parse(JSON.stringify(v).replace(/<\$([^$]+)\$>/g,((...m)=>{const parts=m[1].split("__");switch(parts[0]){case"name":return copyTo.name;case"short_name":case"title_short_name":{return Renderer.monster.getShortName(copyTo,parts[0]==="title_short_name")}case"spell_dc":{if(!Parser.ABIL_ABVS.includes(parts[1]))throw new Error(`Unknown ability score "${parts[1]}"`);return 8+Parser.getAbilityModNumber(Number(copyTo[parts[1]]))+Parser.crToPb(copyTo.cr)}case"to_hit":{if(!Parser.ABIL_ABVS.includes(parts[1]))throw new Error(`Unknown ability score "${parts[1]}"`);const total=Parser.crToPb(copyTo.cr)+Parser.getAbilityModNumber(Number(copyTo[parts[1]]));return total>=0?`+${total}`:total}case"damage_mod":{if(!Parser.ABIL_ABVS.includes(parts[1]))throw new Error(`Unknown ability score "${parts[1]}"`);const total=Parser.getAbilityModNumber(Number(copyTo[parts[1]]));return total===0?"":total>0?` +${total}`:` ${total}`}case"damage_avg":{const replaced=parts[1].replace(/(str|dex|con|int|wis|cha)/gi,((...m2)=>Parser.getAbilityModNumber(Number(copyTo[m2[0]]))));const clean=replaced.replace(/[^-+/*0-9.,]+/g,"");return Math.floor(eval(clean))}default:return m[0]}})))}));Object.entries(copyMeta._mod).forEach((([prop,modInfos])=>{if(prop==="*")doMod(modInfos,"action","bonus","reaction","trait","legendary","mythic","variant","spellcasting","legendaryHeader");else if(prop==="_")doMod(modInfos);else doMod(modInfos,prop)}))}copyTo._isCopy=true;delete copyTo._copy}},monster:{_MERGE_REQUIRES_PRESERVE:{legendaryGroup:true,environment:true,soundClip:true,page:true,altArt:true,variant:true,dragonCastingColor:true,hasToken:true},_mergeCache:{},async pMergeCopy(monList,mon,options){return DataUtil.generic._pMergeCopy(DataUtil.monster,UrlUtil.PG_BESTIARY,monList,mon,options)},async pPreloadMeta(){DataUtil.monster._pLoadMeta=DataUtil.monster._pLoadMeta||(async()=>{const legendaryGroups=await DataUtil.legendaryGroup.pLoadAll();DataUtil.monster.populateMetaReference({legendaryGroup:legendaryGroups})})();await DataUtil.monster._pLoadMeta},async pLoadAll(){const[index]=await Promise.all([DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/index.json`),DataUtil.monster.pPreloadMeta()]);const allData=await Promise.all(Object.entries(index).map((async([source,file])=>{const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/${file}`);return data.monster.filter((it=>it.source===source))})));return allData.flat()},_pLoadMeta:null,metaGroupMap:{},getMetaGroup(mon){if(!mon.legendaryGroup||!mon.legendaryGroup.source||!mon.legendaryGroup.name)return null;return(DataUtil.monster.metaGroupMap[mon.legendaryGroup.source]||{})[mon.legendaryGroup.name]},populateMetaReference(data){(data.legendaryGroup||[]).forEach((it=>{(DataUtil.monster.metaGroupMap[it.source]=DataUtil.monster.metaGroupMap[it.source]||{})[it.name]=it}))},async pPostProcess(data){if(!data?.monster?.length)return;for(const mon of data.monster){if(!mon.summonedBySpell)continue;let[name,source]=mon.summonedBySpell.split("|");source=source||SRC_PHB;const hash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_SPELLS]({name:name,source:source});let spell=null;if(data.spell?.length)spell=data.spell.find((sp=>UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_SPELLS](sp)===hash));if(!spell)spell=await Renderer.hover.pCacheAndGetHash(UrlUtil.PG_SPELLS,hash);if(!spell){setTimeout((()=>{throw new Error(`Could not load "${mon.name} (${mon.source})" "summonedBySpell" "${mon.summonedBySpell}"`)}));continue}mon._summonedBySpell_levelBase=spell.level}}},monsterFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(monFlfList,monFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.monsterFluff,UrlUtil.PG_BESTIARY,monFlfList,monFlf,options)}},spell:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(spellList,spell,options){return DataUtil.generic._pMergeCopy(DataUtil.spell,UrlUtil.PG_SPELLS,spellList,spell,options)},async pLoadAll(){const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/index.json`);const allData=await Promise.all(Object.entries(index).map((async([source,file])=>{const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/${file}`);return data.spell.filter((it=>it.source===source))})));return allData.flat()}},spellFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(spellFlfList,spellFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.spellFluff,UrlUtil.PG_SPELLS,spellFlfList,spellFlf,options)}},item:{_MERGE_REQUIRES_PRESERVE:{lootTables:true,tier:true,page:true,otherSources:true,srd:true,hasFluff:true,hasFluffImages:true},_mergeCache:{},async pMergeCopy(itemList,item,options){return DataUtil.generic._pMergeCopy(DataUtil.item,UrlUtil.PG_ITEMS,itemList,item,options)},async loadRawJSON(){if(DataUtil.item._loadedRawJson)return DataUtil.item._loadedRawJson;DataUtil.item._pLoadingRawJson=(async()=>{const urlItems=`${Renderer.get().baseUrl}data/items.json`;const urlItemsBase=`${Renderer.get().baseUrl}data/items-base.json`;const urlVariants=`${Renderer.get().baseUrl}data/magicvariants.json`;const[dataItems,dataItemsBase,dataVariants]=await Promise.all([DataUtil.loadJSON(urlItems),DataUtil.loadJSON(urlItemsBase),DataUtil.loadJSON(urlVariants)]);DataUtil.item._loadedRawJson={item:MiscUtil.copy(dataItems.item),itemGroup:MiscUtil.copy(dataItems.itemGroup),variant:MiscUtil.copy(dataVariants.variant),baseitem:MiscUtil.copy(dataItemsBase.baseitem)}})();await DataUtil.item._pLoadingRawJson;return DataUtil.item._loadedRawJson}},itemFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(itemFlfList,itemFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.itemFluff,UrlUtil.PG_ITEMS,itemFlfList,itemFlf,options)}},background:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(bgList,bg,options){return DataUtil.generic._pMergeCopy(DataUtil.background,UrlUtil.PG_BACKGROUNDS,bgList,bg,options)}},race:{_MERGE_REQUIRES_PRESERVE:{subraces:true},_mergeCache:{},async pMergeCopy(raceList,race,options){return DataUtil.generic._pMergeCopy(DataUtil.race,UrlUtil.PG_RACES,raceList,race,options)},_loadCache:{},_pIsLoadings:{},async loadJSON({isAddBaseRaces:isAddBaseRaces=false}={}){if(!DataUtil.race._pIsLoadings[isAddBaseRaces]){DataUtil.race._pIsLoadings[isAddBaseRaces]=(async()=>{const rawRaceData=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/races.json`);const raceData=Renderer.race.mergeSubraces(rawRaceData.race,{isAddBaseRaces:isAddBaseRaces});DataUtil.race._loadCache[isAddBaseRaces]={race:raceData}})()}await DataUtil.race._pIsLoadings[isAddBaseRaces];return DataUtil.race._loadCache[isAddBaseRaces]},async loadBrew({isAddBaseRaces:isAddBaseRaces=true}={}){const brew=await BrewUtil.pAddBrewData();let fromBrew=MiscUtil.copy(brew.race||[]);fromBrew=Renderer.race.mergeSubraces(fromBrew,{isAddBaseRaces:isAddBaseRaces});return{race:fromBrew}}},raceFluff:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(raceFlfList,raceFlf,options){return DataUtil.generic._pMergeCopy(DataUtil.raceFluff,UrlUtil.PG_RACES,raceFlfList,raceFlf,options)}},class:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(classList,cls,options){return DataUtil.generic._pMergeCopy(DataUtil.class,UrlUtil.PG_CLASSES,classList,cls,options)},_pLoadingJson:null,_pLoadingRawJson:null,_loadedJson:null,_loadedRawJson:null,async loadJSON(){if(DataUtil.class._loadedJson)return DataUtil.class._loadedJson;DataUtil.class._pLoadingJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/index.json`);const allData=(await Object.values(index).pSerialAwaitMap((it=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/${it}`)))).map((it=>MiscUtil.copy(it)));const allDereferencedClassData=(await Promise.all(allData.map((json=>Promise.all((json.class||[]).map((cls=>DataUtil.class.pGetDereferencedClassData(cls)))))))).flat();const allDereferencedSubclassData=(await Promise.all(allData.map((json=>Promise.all((json.subclass||[]).map((sc=>DataUtil.class.pGetDereferencedSubclassData(sc)))))))).flat();DataUtil.class._loadedJson={class:allDereferencedClassData,subclass:allDereferencedSubclassData}})();await DataUtil.class._pLoadingJson;return DataUtil.class._loadedJson},async loadRawJSON(){if(DataUtil.class._loadedRawJson)return DataUtil.class._loadedRawJson;DataUtil.class._pLoadingRawJson=(async()=>{const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/index.json`);const allData=await Promise.all(Object.values(index).map((it=>DataUtil.loadJSON(`${Renderer.get().baseUrl}data/class/${it}`))));DataUtil.class._loadedRawJson={class:MiscUtil.copy(allData.map((it=>it.class||[])).flat()),subclass:MiscUtil.copy(allData.map((it=>it.subclass||[])).flat()),classFeature:allData.map((it=>it.classFeature||[])).flat(),subclassFeature:allData.map((it=>it.subclassFeature||[])).flat()}})();await DataUtil.class._pLoadingRawJson;return DataUtil.class._loadedRawJson},unpackUidClassFeature(uid,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,className,classSource,level,source,displayText]=uid.split("|").map((it=>it.trim()));classSource=classSource||(opts.isLower?SRC_PHB.toLowerCase():SRC_PHB);source=source||classSource;level=Number(level);return{name:name,className:className,classSource:classSource,level:level,source:source,displayText:displayText}},isValidClassFeatureUid(uid){const{name:name,className:className,level:level}=DataUtil.class.unpackUidClassFeature(uid);return!(!name||!className||isNaN(level))},packUidClassFeature(f){return[f.name,f.className,f.classSource===SRC_PHB?"":f.classSource,f.level,f.source===f.classSource?"":f.source].join("|").replace(/\|+$/,"")},unpackUidSubclassFeature(uid,opts){opts=opts||{};if(opts.isLower)uid=uid.toLowerCase();let[name,className,classSource,subclassShortName,subclassSource,level,source,displayText]=uid.split("|").map((it=>it.trim()));classSource=classSource||(opts.isLower?SRC_PHB.toLowerCase():SRC_PHB);subclassSource=subclassSource||(opts.isLower?SRC_PHB.toLowerCase():SRC_PHB);source=source||subclassSource;level=Number(level);return{name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source,displayText:displayText}},isValidSubclassFeatureUid(uid){const{name:name,className:className,subclassShortName:subclassShortName,level:level}=DataUtil.class.unpackUidSubclassFeature(uid);return!(!name||!className||!subclassShortName||isNaN(level))},packUidSubclassFeature(f){return[f.name,f.className,f.classSource===SRC_PHB?"":f.classSource,f.subclassShortName,f.subclassSource===SRC_PHB?"":f.subclassSource,f.level,f.source===f.subclassSource?"":f.source].join("|").replace(/\|+$/,"")},_mutEntryNestLevel(feature){const depth=(feature.header==null?1:feature.header)-1;for(let i=0;i<depth;++i){const nxt=MiscUtil.copy(feature);feature.entries=[nxt];delete feature.name;delete feature.page;delete feature.source}},async pGetDereferencedClassData(cls){if(cls.classFeatures&&cls.classFeatures.every((it=>typeof it!=="string"&&!it.classFeature)))return cls;cls=MiscUtil.copy(cls);const byLevel={};for(const classFeatureRef of cls.classFeatures||[]){const uid=classFeatureRef.classFeature?classFeatureRef.classFeature:classFeatureRef;const{name:name,className:className,classSource:classSource,level:level,source:source}=DataUtil.class.unpackUidClassFeature(uid);if(!name||!className||!level||isNaN(level))continue;if(source===SRC_5ETOOLS_TMP)continue;const hash=UrlUtil.URL_TO_HASH_BUILDER["classFeature"]({name:name,className:className,classSource:classSource,level:level,source:source});if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(hash,"classFeature",source,{isNoCount:true}))continue;const classFeature=await Renderer.hover.pCacheAndGet("classFeature",source,hash,{isCopy:true});if(!classFeature){JqueryUtil.doToast({type:"danger",content:`Failed to find <code>classFeature</code> <code>${uid}</code>`});continue}if(classFeatureRef.gainSubclassFeature)classFeature.gainSubclassFeature=true;if(classFeature.source===cls.source&&SourceUtil.isNonstandardSource(classFeature.source))delete classFeature.source;else if(cls.otherSources)classFeature.otherSources=MiscUtil.copy(cls.otherSources);DataUtil.class._mutEntryNestLevel(classFeature);const key=`${classFeature.level||1}`;(byLevel[key]=byLevel[key]||[]).push(classFeature)}const outClassFeatures=[];const maxLevel=Math.max(...Object.keys(byLevel).map((it=>Number(it))));for(let i=1;i<=maxLevel;++i){outClassFeatures[i-1]=byLevel[i]||[]}cls.classFeatures=outClassFeatures;return cls},async pGetDereferencedSubclassData(sc){if(sc.subclassFeatures&&sc.subclassFeatures.every((it=>typeof it!=="string"&&!it.subclassFeature)))return sc;sc=MiscUtil.copy(sc);const byLevel={};for(const subclassFeatureRef of sc.subclassFeatures||[]){const uid=subclassFeatureRef.subclassFeature?subclassFeatureRef.subclassFeature:subclassFeatureRef;const{name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source}=DataUtil.class.unpackUidSubclassFeature(uid);if(!name||!className||!subclassShortName||!level||isNaN(level))continue;const hash=UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]({name:name,className:className,classSource:classSource,subclassShortName:subclassShortName,subclassSource:subclassSource,level:level,source:source});if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(hash,"subclassFeature",source,{isNoCount:true}))continue;const subclassFeature=await Renderer.hover.pCacheAndGet("subclassFeature",source,hash,{isCopy:true});if(!subclassFeature){JqueryUtil.doToast({type:"danger",content:`Failed to find <code>subclassFeature</code> <code>${uid}</code>`});continue}if(subclassFeature.source===sc.source&&SourceUtil.isNonstandardSource(subclassFeature.source))delete subclassFeature.source;else if(sc.otherSources)subclassFeature.otherSources=MiscUtil.copy(sc.otherSources);DataUtil.class._mutEntryNestLevel(subclassFeature);const key=`${subclassFeature.level||1}`;(byLevel[key]=byLevel[key]||[]).push(subclassFeature)}sc.subclassFeatures=Object.keys(byLevel).map((it=>Number(it))).sort(SortUtil.ascSort).map((k=>byLevel[k]));return sc},_CACHE_SUBCLASS_LOOKUP_PROMISE:null,_CACHE_SUBCLASS_LOOKUP:null,async pGetSubclassLookup(){DataUtil.class._CACHE_SUBCLASS_LOOKUP_PROMISE=DataUtil.class._CACHE_SUBCLASS_LOOKUP_PROMISE||(async()=>{const subclassLookup={};Object.assign(subclassLookup,await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/generated/gendata-subclass-lookup.json`));const homebrew=await BrewUtil.pAddBrewData();DataUtil.class.mergeHomebrewSubclassLookup(subclassLookup,homebrew);DataUtil.class._CACHE_SUBCLASS_LOOKUP=subclassLookup})();await DataUtil.class._CACHE_SUBCLASS_LOOKUP_PROMISE;return DataUtil.class._CACHE_SUBCLASS_LOOKUP},mergeHomebrewSubclassLookup(subclassLookup,homebrew){(homebrew.subclass||[]).forEach((sc=>{const clSrc=sc.classSource||SRC_PHB;sc.shortName=sc.shortName||sc.name;const target=MiscUtil.getOrSet(subclassLookup,clSrc,sc.className,{});MiscUtil.set(target,sc.source,sc.shortName,{name:sc.name})}))}},subclass:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(subclassList,subclass,options){return DataUtil.generic._pMergeCopy(DataUtil.subclass,"subclass",subclassList,subclass,options)}},deity:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(deityList,deity,options){return DataUtil.generic._pMergeCopy(DataUtil.deity,UrlUtil.PG_DEITIES,deityList,deity,options)},doPostLoad:function(data){const PRINT_ORDER=[SRC_PHB,SRC_DMG,SRC_SCAG,SRC_VGM,SRC_MTF,SRC_ERLW];const inSource={};PRINT_ORDER.forEach((src=>{inSource[src]={};data.deity.filter((it=>it.source===src)).forEach((it=>inSource[src][it.reprintAlias||it.name]=it))}));const laterPrinting=[PRINT_ORDER.last()];[...PRINT_ORDER].reverse().slice(1).forEach((src=>{laterPrinting.forEach((laterSrc=>{Object.keys(inSource[src]).forEach((name=>{const newer=inSource[laterSrc][name];if(newer){const old=inSource[src][name];old.reprinted=true;if(!newer._isEnhanced){newer.previousVersions=newer.previousVersions||[];newer.previousVersions.push(old)}}}))}));laterPrinting.push(src)}));data.deity.forEach((g=>g._isEnhanced=true))},loadJSON:async function(){const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/deities.json`);DataUtil.deity.doPostLoad(data);return data}},table:{async loadJSON(){const[dataEncounters,dataNames,...datas]=await Promise.all([`${Renderer.get().baseUrl}data/encounters.json`,`${Renderer.get().baseUrl}data/names.json`,`${Renderer.get().baseUrl}data/generated/gendata-tables.json`,`${Renderer.get().baseUrl}data/tables.json`].map((url=>DataUtil.loadJSON(url))));const combined={};datas.forEach((data=>{Object.entries(data).forEach((([k,v])=>{if(combined[k]&&combined[k]instanceof Array&&v instanceof Array)combined[k]=combined[k].concat(v);else if(combined[k]==null)combined[k]=v;else throw new Error(`Could not merge keys for key "${k}"`)}))}));dataEncounters.encounter.forEach((group=>{group.tables.forEach((tableRaw=>{combined.table.push(DataUtil.table._getConvertedEncounterOrNamesTable({group:group,tableRaw:tableRaw,fnGetNameCaption:DataUtil.table._getConvertedEncounterTableName,colLabel1:"Encounter"}))}))}));dataNames.name.forEach((group=>{group.tables.forEach((tableRaw=>{combined.table.push(DataUtil.table._getConvertedEncounterOrNamesTable({group:group,tableRaw:tableRaw,fnGetNameCaption:DataUtil.table._getConvertedNameTableName,colLabel1:"Name"}))}))}));return combined},_getConvertedEncounterTableName(group,tableRaw){return`${group.name} Encounters (Levels ${tableRaw.minlvl}—${tableRaw.maxlvl})`},_getConvertedNameTableName(group,tableRaw){return`${group.name} Names - ${tableRaw.option}`},_getConvertedEncounterOrNamesTable({group:group,tableRaw:tableRaw,fnGetNameCaption:fnGetNameCaption,colLabel1:colLabel1}){const nameCaption=fnGetNameCaption(group,tableRaw);return{name:nameCaption,source:group.source,page:group.page,caption:nameCaption,colLabels:[`d${tableRaw.diceType}`,colLabel1],colStyles:["col-2 text-center","col-10"],rows:tableRaw.table.map((it=>[`${it.min}${it.max&&it.max!==it.min?`-${it.max}`:""}`,it.result.replace(RollerUtil.DICE_REGEX,((...m)=>`{@dice ${m[0]}}`))]))}}},legendaryGroup:{_MERGE_REQUIRES_PRESERVE:{},_mergeCache:{},async pMergeCopy(lgList,lg,options){return DataUtil.generic._pMergeCopy(DataUtil.legendaryGroup,UrlUtil.PG_BESTIARY,lgList,lg,options)},async pLoadAll(){return(await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/bestiary/legendarygroups.json`)).legendaryGroup}},language:{async loadJSON(){const rawData=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/languages.json`);const scriptLookup={};(rawData.languageScript||[]).forEach((script=>scriptLookup[script.name]=script));const out={language:MiscUtil.copy(rawData.language)};out.language.forEach((lang=>{if(!lang.script||lang.fonts===false)return;const script=scriptLookup[lang.script];if(!script)return;lang._fonts=[...script.fonts]}));return out}},recipe:{async loadJSON(){const out=[];const rawData=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/recipes.json`);DataUtil.recipe.postProcessData(rawData);for(const r of rawData.recipe){const fluff=await Renderer.utils.pGetFluff({entity:r,fluffUrl:`data/fluff-recipes.json`,fluffProp:"recipeFluff"});if(!fluff){out.push(r);continue}const cpyR=MiscUtil.copy(r);cpyR.fluff=MiscUtil.copy(fluff);delete cpyR.fluff.name;delete cpyR.fluff.source;out.push(cpyR)}return{recipe:out}},postProcessData(data){if(!data.recipe||!data.recipe.length)return;data.recipe.forEach((r=>Renderer.recipe.populateFullIngredients(r)))},async loadBrew(){const brew=await BrewUtil.pAddBrewData();DataUtil.recipe.postProcessData(brew);return brew}},variantrule:{async loadJSON(){const rawData=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/variantrules.json`);const rawDataGenerated=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/generated/gendata-variantrules.json`);return{variantrule:[...rawData.variantrule,...rawDataGenerated.variantrule]}}},brew:{_getCleanUrlRoot(urlRoot){if(urlRoot&&urlRoot.trim()){urlRoot=urlRoot.trim();if(!urlRoot.endsWith("/"))urlRoot=`${urlRoot}/`}else urlRoot=`https://raw.githubusercontent.com/TheGiddyLimit/homebrew/master/`;return urlRoot},async pLoadTimestamps(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-timestamps.json`)},async pLoadPropIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-props.json`)},async pLoadNameIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-names.json`)},async pLoadAbbreviationIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-abbreviations.json`)},async pLoadSourceIndex(urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return DataUtil.loadJSON(`${urlRoot}_generated/index-sources.json`)},getFileUrl(path,urlRoot){urlRoot=DataUtil.brew._getCleanUrlRoot(urlRoot);return`${urlRoot}${path}`}}};RollerUtil={isCrypto(){return typeof window!=="undefined"&&typeof window.crypto!=="undefined"},randomise(max,min=1){if(min>max)return 0;if(max===min)return max;if(RollerUtil.isCrypto()){return RollerUtil._randomise(min,max+1)}else{return RollerUtil.roll(max)+min}},rollOnArray(array){return array[RollerUtil.randomise(array.length)-1]},_randomise:(min,max)=>{const range=max-min;const bytesNeeded=Math.ceil(Math.log2(range)/8);const randomBytes=new Uint8Array(bytesNeeded);const maximumRange=(2**8)**bytesNeeded;const extendedRange=Math.floor(maximumRange/range)*range;let i;let randomInteger;while(true){window.crypto.getRandomValues(randomBytes);randomInteger=0;for(i=0;i<bytesNeeded;i++){randomInteger<<=8;randomInteger+=randomBytes[i]}if(randomInteger<extendedRange){randomInteger%=range;return min+randomInteger}}},roll(max,fn=Math.random){return Math.floor(fn()*max)},addListRollButton(isCompact){const $btnRoll=$(`<button class="btn btn-default ${isCompact?"px-2":""}" id="feelinglucky" title="Feeling Lucky?"><span class="glyphicon glyphicon-random"></span></button>`);$btnRoll.on("click",(()=>{const primaryLists=ListUtil.getPrimaryLists();if(primaryLists&&primaryLists.length){const allLists=primaryLists.filter((l=>l.visibleItems.length));if(allLists.length){const rollX=RollerUtil.roll(allLists.length);const list=allLists[rollX];const rollY=RollerUtil.roll(list.visibleItems.length);window.location.hash=$(list.visibleItems[rollY].ele).find(`a`).prop("hash")}}}));$(`#filter-search-group`).find(`#reset`).before($btnRoll)},getColRollType(colLabel){if(typeof colLabel!=="string")return false;if(/^{@dice [^}]+}$/.test(colLabel.trim()))return true;colLabel=Renderer.stripTags(colLabel);if(Renderer.dice.lang.getTree3(colLabel))return RollerUtil.ROLL_COL_STANDARD;colLabel=colLabel.replace(RollerUtil._REGEX_ROLLABLE_COL_LABEL,"$1");if(Renderer.dice.lang.getTree3(colLabel))return RollerUtil.ROLL_COL_VARIABLE;return 0},getFullRollCol(lbl){if(lbl.includes("@dice"))return lbl;if(Renderer.dice.lang.getTree3(lbl))return`{@dice ${lbl}}`;const m=RollerUtil._REGEX_ROLLABLE_COL_LABEL.exec(lbl);if(!m)return lbl;return`{@dice ${m[1]}${m[2]}#$prompt_number:title=Enter a ${m[3].trim()}$#|${lbl}}`},_DICE_REGEX_STR:"((([1-9]\\d*)?d([1-9]\\d*)(\\s*?[-+×x*÷/]\\s*?(\\d,\\d|\\d)+(\\.\\d+)?)?))+?"};RollerUtil.DICE_REGEX=new RegExp(RollerUtil._DICE_REGEX_STR,"g");RollerUtil.REGEX_DAMAGE_DICE=/(\d+)( \((?:{@dice |{@damage ))([-+0-9d ]*)(}\)(?:\s*\+\s*the spell's level)? [a-z]+( \([-a-zA-Z0-9 ]+\))?( or [a-z]+( \([-a-zA-Z0-9 ]+\))?)? damage)/gi;RollerUtil.REGEX_DAMAGE_FLAT=/(Hit: |{@h})([0-9]+)( [a-z]+( \([-a-zA-Z0-9 ]+\))?( or [a-z]+( \([-a-zA-Z0-9 ]+\))?)? damage)/gi;RollerUtil._REGEX_ROLLABLE_COL_LABEL=/^(.*?\d)(\s*[-+/*^×÷]\s*)([a-zA-Z0-9 ]+)$/;RollerUtil.ROLL_COL_NONE=0;RollerUtil.ROLL_COL_STANDARD=1;RollerUtil.ROLL_COL_VARIABLE=2;StorageUtil={_init:false,_initAsync:false,_fakeStorage:{},_fakeStorageAsync:{},_getSyncStorage(){if(StorageUtil._init){if(StorageUtil.__fakeStorage)return StorageUtil._fakeStorage;else return window.localStorage}StorageUtil._init=true;try{window.localStorage.setItem("_test_storage",true);return window.localStorage}catch(e){StorageUtil.__fakeStorage=true;StorageUtil._fakeStorage={isSyncFake:true,getItem:k=>StorageUtil.__fakeStorage[k],removeItem:k=>delete StorageUtil.__fakeStorage[k],setItem:(k,v)=>StorageUtil.__fakeStorage[k]=v};return StorageUtil._fakeStorage}},async _getAsyncStorage(){if(StorageUtil._initAsync){if(StorageUtil.__fakeStorageAsync)return StorageUtil._fakeStorageAsync;else return localforage}const getInitFakeStorage=()=>{StorageUtil.__fakeStorageAsync={};StorageUtil._fakeStorageAsync={pIsAsyncFake:true,async setItem(k,v){StorageUtil.__fakeStorageAsync[k]=v},async getItem(k){return StorageUtil.__fakeStorageAsync[k]},async removeItem(k){delete StorageUtil.__fakeStorageAsync[k]}};return StorageUtil._fakeStorageAsync};if(typeof window!=="undefined"){try{await new Promise(((resolve,reject)=>{const request=window.indexedDB.open("_test_db",1);request.onerror=reject;request.onsuccess=resolve}));await localforage.setItem("_storage_check",true);return localforage}catch(e){return getInitFakeStorage()}finally{StorageUtil._initAsync=true}}else return getInitFakeStorage()},syncGet(key){const rawOut=StorageUtil._getSyncStorage().getItem(key);if(rawOut&&rawOut!=="undefined"&&rawOut!=="null")return JSON.parse(rawOut);return null},syncSet(key,value){StorageUtil._getSyncStorage().setItem(key,JSON.stringify(value));StorageUtil._syncTrackKey(key)},syncRemove(key){StorageUtil._getSyncStorage().removeItem(key);StorageUtil._syncTrackKey(key,true)},syncGetForPage(key){return StorageUtil.syncGet(`${key}_${UrlUtil.getCurrentPage()}`)},syncSetForPage(key,value){StorageUtil.syncSet(`${key}_${UrlUtil.getCurrentPage()}`,value)},isSyncFake(){return!!StorageUtil._getSyncStorage().isSyncFake},_syncTrackKey(key,isRemove){const meta=StorageUtil.syncGet(StorageUtil._META_KEY)||{};if(isRemove)delete meta[key];else meta[key]=1;StorageUtil._getSyncStorage().setItem(StorageUtil._META_KEY,JSON.stringify(meta))},syncGetDump(){const out={};const meta=StorageUtil.syncGet(StorageUtil._META_KEY)||{};Object.entries(meta).filter((([key,isPresent])=>isPresent)).forEach((([key])=>out[key]=StorageUtil.syncGet(key)));return out},syncSetFromDump(dump){Object.entries(dump).forEach((([k,v])=>StorageUtil.syncSet(k,v)))},async pIsAsyncFake(){const storage=await StorageUtil._getAsyncStorage();return!!storage.pIsAsyncFake},async pSet(key,value){StorageUtil._pTrackKey(key);const storage=await StorageUtil._getAsyncStorage();return storage.setItem(key,value)},async pGet(key){const storage=await StorageUtil._getAsyncStorage();return storage.getItem(key)},async pRemove(key){StorageUtil._pTrackKey(key,true);const storage=await StorageUtil._getAsyncStorage();return storage.removeItem(key)},getPageKey(key,page){return`${key}_${page||UrlUtil.getCurrentPage()}`},async pGetForPage(key){return StorageUtil.pGet(StorageUtil.getPageKey(key))},async pSetForPage(key,value){return StorageUtil.pSet(StorageUtil.getPageKey(key),value)},async pRemoveForPage(key){return StorageUtil.pRemove(StorageUtil.getPageKey(key))},async _pTrackKey(key,isRemove){const storage=await StorageUtil._getAsyncStorage();const meta=await StorageUtil.pGet(StorageUtil._META_KEY)||{};if(isRemove)delete meta[key];else meta[key]=1;return storage.setItem(StorageUtil._META_KEY,meta)},async pGetDump(){const out={};const meta=await StorageUtil.pGet(StorageUtil._META_KEY)||{};await Promise.all(Object.entries(meta).filter((([key,isPresent])=>isPresent)).map((async([key])=>out[key]=await StorageUtil.pGet(key))));return out},async pSetFromDump(dump){return Promise.all(Object.entries(dump).map((([k,v])=>StorageUtil.pSet(k,v))))}};StorageUtil._META_KEY="_STORAGE_META_STORAGE";SessionStorageUtil={_fakeStorage:{},__storage:null,getStorage:()=>{try{return window.sessionStorage}catch(e){if(SessionStorageUtil.__storage)return SessionStorageUtil.__storage;else{return SessionStorageUtil.__storage={isFake:true,getItem:k=>SessionStorageUtil._fakeStorage[k],removeItem:k=>{delete SessionStorageUtil._fakeStorage[k]},setItem:(k,v)=>{SessionStorageUtil._fakeStorage[k]=v}}}}},isFake(){return SessionStorageUtil.getStorage().isSyncFake},setForPage:(key,value)=>{SessionStorageUtil.set(`${key}_${UrlUtil.getCurrentPage()}`,value)},set(key,value){SessionStorageUtil.getStorage().setItem(key,JSON.stringify(value))},getForPage:key=>SessionStorageUtil.get(`${key}_${UrlUtil.getCurrentPage()}`),get(key){const rawOut=SessionStorageUtil.getStorage().getItem(key);if(rawOut&&rawOut!=="undefined"&&rawOut!=="null")return JSON.parse(rawOut);return null},removeForPage:key=>{SessionStorageUtil.remove(`${key}_${UrlUtil.getCurrentPage()}`)},remove(key){SessionStorageUtil.getStorage().removeItem(key)}};BrewUtil={_PAGE:null,homebrew:null,homebrewMeta:null,_lists:null,_sourceCache:null,_filterBox:null,_sourceFilter:null,_pHandleBrew:null,_lockHandleBrewJson:null,bind(options){if(options.list)BrewUtil._lists=[options.list];else if(options.lists)BrewUtil._lists=options.lists;if(options.filterBox)BrewUtil._filterBox=options.filterBox;if(options.sourceFilter)BrewUtil._sourceFilter=options.sourceFilter;if(options.pHandleBrew!==undefined)this._pHandleBrew=options.pHandleBrew},async pAddBrewData(){if(BrewUtil.homebrew){return BrewUtil.homebrew}else{try{const homebrew=await StorageUtil.pGet(VeCt.STORAGE_HOMEBREW)||{};BrewUtil.homebrewMeta=StorageUtil.syncGet(VeCt.STORAGE_HOMEBREW_META)||{sources:[]};BrewUtil.homebrewMeta.sources=BrewUtil.homebrewMeta.sources||[];await this._pAddLocalBrewData(homebrew);BrewUtil._mutMakeBrewCompatible(homebrew);BrewUtil.homebrew=homebrew;BrewUtil._resetSourceCache();return BrewUtil.homebrew}catch(e){BrewUtil.pPurgeBrew(e)}}},_mutMakeBrewCompatible(homebrew){let hasOldSubclasses=false;if(homebrew.class){homebrew.class.forEach((cls=>{if(cls.subclasses){hasOldSubclasses=true;cls.subclasses.forEach((sc=>{sc.className=sc.className||cls.name;sc.classSource=sc.classSource||cls.source;(homebrew.subclass=homebrew.subclass||[]).push(sc)}));delete cls.subclasses}}))}if(hasOldSubclasses){JqueryUtil.doToast({type:"warning",content:`Converted legacy homebrew subclasses—you should re-load your class homebrews, as this backwards compatibility will be removed in future!`})}},async pPurgeBrew(error){JqueryUtil.doToast({content:"Error when loading homebrew! Purged homebrew data. (See the log for more information.)",type:"danger"});await StorageUtil.pRemove(VeCt.STORAGE_HOMEBREW);StorageUtil.syncRemove(VeCt.STORAGE_HOMEBREW_META);BrewUtil.homebrew=null;window.location.hash="";BrewUtil.homebrew={};BrewUtil.homebrewMeta={sources:[]};if(error)setTimeout((()=>{throw error}))},async _pAddLocalBrewData(homebrew){if(IS_VTT||IS_DEPLOYED)return;const indexLocal=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${VeCt.JSON_HOMEBREW_INDEX}`);if(!indexLocal?.toImport?.length)return;const page=BrewUtil._PAGE||UrlUtil.getCurrentPage();const allData=await Promise.all(indexLocal.toImport.map((it=>DataUtil.loadJSON(`homebrew/${it}`))));for(const d of allData)await BrewUtil._pDoHandleBrewJson(d,page,{isLocalPreload:true,homebrew:homebrew})},async _pRenderBrewScreen($appendTo,opts){opts=opts||{};const page=BrewUtil._PAGE||UrlUtil.getCurrentPage();const $brewList=$(`<div class="manbrew__current_brew flex-col h-100 mt-1"></div>`);await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);const $btnLoadFromFile=$(`<button class="btn btn-default btn-sm mr-2">Upload File</button>`).click((async()=>{const files=await DataUtil.pUserUpload({isMultiple:true});if(!files)return;for(const json of files){await DataUtil.pDoMetaMerge(CryptUtil.uid(),json);await BrewUtil.pDoHandleBrewJson(json,page,BrewUtil._pRenderBrewScreen_pRefreshBrewList.bind(this,$brewList))}}));const $btnLoadFromUrl=$(`<button class="btn btn-default btn-sm mr-2">Load from URL</button>`).click((async()=>{const enteredUrl=await InputUiUtil.pGetUserString({title:"Homebrew URL"});if(!enteredUrl||!enteredUrl.trim())return;let parsedUrl;try{parsedUrl=new URL(enteredUrl)}catch(e){JqueryUtil.doToast({content:`The provided URL does not appear to be valid.`,type:"danger"});return}BrewUtil.addBrewRemote(null,parsedUrl.href).catch((err=>{JqueryUtil.doToast({content:"Could not load homebrew from the provided URL.",type:"danger"});setTimeout((()=>{throw err}))}))}));const $btnGet=$(`<button class="btn btn-info btn-sm">Get Homebrew</button>`).click((()=>BrewUtil._pHandleClickBtnGet(opts)));const $btnCustomUrl=$(`<button class="btn btn-info btn-sm px-2" title="Set Custom Repository URL"><span class="glyphicon glyphicon-cog"></span></button>`).click((async()=>{const customBrewUtl=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const nxtUrl=await InputUiUtil.pGetUserString({title:"Homebrew Repository URL (Blank for Default)",default:customBrewUtl});if(nxtUrl==null)await StorageUtil.pRemove(`HOMEBREW_CUSTOM_REPO_URL`);else await StorageUtil.pSet(`HOMEBREW_CUSTOM_REPO_URL`,nxtUrl)}));const $btnDelAll=opts.isModal?null:BrewUtil._$getBtnDeleteAll();const $wrpBtns=$$`<div class="flex-vh-center no-shrink mobile__flex-col">
			<div class="flex-v-center mobile__mb-2">
				<div class="flex-v-center btn-group mr-2">
					${$btnGet}
					${$btnCustomUrl}
				</div>
				${$btnLoadFromFile}
				${$btnLoadFromUrl}
			</div>
			<div class="flex-v-center">
				<a href="https://github.com/TheGiddyLimit/homebrew" class="flex-v-center" target="_blank" rel="noopener noreferrer"><button class="btn btn-default btn-sm">Browse Source Repository</button></a>
				${$btnDelAll}
			</div>
		</div>`;if(opts.isModal){$$($appendTo)`
			${$brewList}
			${$wrpBtns.addClass("mb-2")}`}else{$$($appendTo)`
			${$wrpBtns.addClass("mb-3")}
			${$brewList}`}BrewUtil.addBrewRemote=async($ele,jsonUrl,doUnescape)=>{let cached;if($ele){cached=$ele.html();$ele.text("Loading...")}if(doUnescape)jsonUrl=jsonUrl.unescapeQuotes();const data=await DataUtil.loadJSON(`${jsonUrl}?${(new Date).getTime()}`);await BrewUtil.pDoHandleBrewJson(data,page,BrewUtil._pRenderBrewScreen_pRefreshBrewList.bind(this,$brewList));if($ele){$ele.text("Done!");setTimeout((()=>$ele.html(cached)),VeCt.DUR_INLINE_NOTIFY)}}},async _pHandleClickBtnGet(opts){const $btnToggleDisplayNonPageBrews=opts.isModal?$(`<button class="btn btn-default btn-xs mr-2 ${opts.isShowAll?"":"active"}" disabled title="Hides homebrews which do not contain content relevant to this page.">Hide Unrelated</button>`):null;const $btnAll=$(`<button class="btn btn-default btn-xs" disabled title="(Excluding samples)">Add All</button>`);const $wrpRows=$$`<div class="list"><div class="lst__row flex-col"><div class="lst__wrp-cells lst--border lst__row-inner flex w-100"><span style="font-style: italic;">Loading...</span></div></div></div>`;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control w-100" placeholder="Find homebrew...">`).keydown((evt=>{switch(evt.which){case 13:{return $wrpRows.find(`.lst__row`).first().find(`.manbrew__load_from_url`).click()}case 40:{const firstItem=list.visibleItems[0];if(firstItem)firstItem.ele.focus()}}}));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isHeight100:true,title:`Get Homebrew`,isUncappedHeight:true,isWidth100:true,overlayColor:"transparent",isHeaderBorder:true});$$($modalInner)`
		<div class="mt-1"><i>A list of homebrew available in the public repository. Click a name to load the homebrew, or view the source directly.<br>
		Contributions are welcome; see the <a href="https://github.com/TheGiddyLimit/homebrew/blob/master/README.md" target="_blank" rel="noopener noreferrer">README</a>, or stop by our <a href="https://discord.gg/nGvRCDs" target="_blank" rel="noopener noreferrer">Discord</a>.</i></div>
		<hr class="hr-1">
		<div class="flex-h-right mb-1">${$btnToggleDisplayNonPageBrews}${$btnAll}</div>
		${$iptSearch}
		<div class="filtertools manbrew__filtertools btn-group input-group input-group--bottom flex no-shrink">
			<button class="col-4 sort btn btn-default btn-xs" data-sort="name">Name</button>
			<button class="col-3 sort btn btn-default btn-xs" data-sort="author">Author</button>
			<button class="col-1-2 sort btn btn-default btn-xs" data-sort="category">Category</button>
			<button class="col-1-4 sort btn btn-default btn-xs" data-sort="modified">Modified</button>
			<button class="col-1-4 sort btn btn-default btn-xs" data-sort="added">Added</button>
			<button class="sort btn btn-default btn-xs ve-grow" disabled>Source</button>
		</div>
		${$wrpRows}`;let dataList;function fnSort(a,b,o){a=dataList[a.ix];b=dataList[b.ix];if(o.sortBy==="name")return byName();if(o.sortBy==="author")return orFallback(SortUtil.ascSortLower,"_brewAuthor");if(o.sortBy==="category")return orFallback(SortUtil.ascSortLower,"_brewCat");if(o.sortBy==="added")return orFallback(SortUtil.ascSort,"_brewAdded");if(o.sortBy==="modified")return orFallback(SortUtil.ascSort,"_brewModified");function byName(){return SortUtil.ascSortLower(a._brewName,b._brewName)}function orFallback(func,prop){return func(a[prop],b[prop])||byName()}}const urlRoot=await StorageUtil.pGet(`HOMEBREW_CUSTOM_REPO_URL`);const[timestamps,propIndex,nameIndex]=await Promise.all([DataUtil.brew.pLoadTimestamps(urlRoot),DataUtil.brew.pLoadPropIndex(urlRoot),DataUtil.brew.pLoadNameIndex(urlRoot)]);const props=opts.isShowAll?BrewUtil.getPageProps(UrlUtil.PG_MANAGE_BREW):BrewUtil.getPageProps();const seenPaths=new Set;dataList=[];props.forEach((prop=>{Object.entries(propIndex[prop]||{}).forEach((([path,dir])=>{if(seenPaths.has(path))return;seenPaths.add(path);dataList.push({download_url:DataUtil.brew.getFileUrl(path,urlRoot),path:path,name:path.slice(path.indexOf("/")+1),_cat:BrewUtil.dirToProp(dir)})}))}));dataList.forEach((it=>{const cleanFilename=it.name.trim().replace(/\.json$/,"");const spl=cleanFilename.split(";").map((it=>it.trim()));if(spl.length>1){it._brewName=spl[1];it._brewAuthor=spl[0]}else{it._brewName=cleanFilename;it._brewAuthor=""}}));dataList.sort(((a,b)=>SortUtil.ascSortLower(a._brewName,b._brewName)));const list=new List({$iptSearch:$iptSearch,$wrpList:$wrpRows,fnSort:fnSort,isUseJquery:true,isFuzzy:true});SortUtil.initBtnSortHandlers($modalInner.find(".manbrew__filtertools"),list);dataList.forEach(((it,i)=>{it._brewAdded=(timestamps[it.path]||{}).a||0;it._brewModified=(timestamps[it.path]||{}).m||0;it._brewInternalSources=nameIndex[it.name]||[];it._brewCat=BrewUtil._pRenderBrewScreen_getDisplayCat(BrewUtil.dirToProp(it._cat));const timestampAdded=it._brewAdded?MiscUtil.dateToStr(new Date(it._brewAdded*1e3),true):"";const timestampModified=it._brewModified?MiscUtil.dateToStr(new Date(it._brewModified*1e3),true):"";const $btnAdd=$(`<span class="col-4 bold manbrew__load_from_url pl-0 clickable"></span>`).text(it._brewName).click((()=>BrewUtil.addBrewRemote($btnAdd,it.download_url||"",true)));const $row=$$`<div class="lst__row lst__row-inner not-clickable lst--border lst__row--focusable" tabindex="1">
				<div class="lst__wrp-cells flex w-100">
					${$btnAdd}
					<span class="col-3">${it._brewAuthor}</span>
					<span class="col-1-2 text-center">${it._brewCat}</span>
					<span class="col-1-4 text-center">${timestampModified}</span>
					<span class="col-1-4 text-center">${timestampAdded}</span>
					<span class="col-1 manbrew__source text-center pr-0"><a href="${it.download_url}" target="_blank" rel="noopener noreferrer">View Raw</a></span>
				</div>
			</div>`;$row.keydown((evt=>{switch(evt.which){case 13:{return $btnAdd.click()}case 38:{const ixCur=list.visibleItems.indexOf(listItem);if(~ixCur){const prevItem=list.visibleItems[ixCur-1];if(prevItem)prevItem.ele.focus()}else{const firstItem=list.visibleItems[0];if(firstItem)firstItem.ele.focus()}return}case 40:{const ixCur=list.visibleItems.indexOf(listItem);if(~ixCur){const nxtItem=list.visibleItems[ixCur+1];if(nxtItem)nxtItem.ele.focus()}else{const lastItem=list.visibleItems.last();if(lastItem)lastItem.ele.focus()}}}}));const listItem=new ListItem(i,$row,it._brewName,{author:it._brewAuthor,category:it._brewCat,internalSources:it._brewInternalSources},{$btnAdd:$btnAdd,isSample:it._brewAuthor.toLowerCase().startsWith("sample -"),added:timestampAdded,modified:timestampAdded});list.addItem(listItem)}));list.init();$btnAll.prop("disabled",false).click((async()=>{const toAdd=list.visibleItems.filter((it=>!it.data.isSample));if(toAdd.length>10&&!await InputUiUtil.pGetUserBoolean({title:"Are you sure?",htmlDescription:`<div>You area about to load ${toAdd.length} homebrew files.<br>Loading large quantities of homebrew can lead to performance and stability issues.</div>`,textYes:"Continue"}))return;toAdd.forEach((it=>it.data.$btnAdd.click()))}));if($btnToggleDisplayNonPageBrews){$btnToggleDisplayNonPageBrews.prop("disabled",false).click((()=>{$btnToggleDisplayNonPageBrews.toggleClass("active");doClose();BrewUtil._pHandleClickBtnGet({...opts,isShowAll:!$btnToggleDisplayNonPageBrews.hasClass("active")})}))}$iptSearch.focus()},_$getBtnDeleteAll(isModal){return $(`<button class="btn ${isModal?"btn-xs":"btn-sm ml-2"} btn-danger">Delete All</button>`).click((async()=>{if(!window.confirm("Are you sure?"))return;await StorageUtil.pSet(VeCt.STORAGE_HOMEBREW,{});StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,{});window.location.hash="";location.reload()}))},async _pCleanSaveBrew(){const cpy=MiscUtil.copy(BrewUtil.homebrew);BrewUtil._STORABLE.forEach((prop=>{(cpy[prop]||[]).forEach((ent=>{Object.keys(ent).filter((k=>k.startsWith("_"))).forEach((k=>delete ent[k]))}))}));await StorageUtil.pSet(VeCt.STORAGE_HOMEBREW,cpy)},async _pRenderBrewScreen_pDeleteSource($brewList,source,doConfirm,isAllSources){if(doConfirm&&!window.confirm(`Are you sure you want to remove all homebrew${!isAllSources?` with${source?` source "${Parser.sourceJsonToFull(source)}"`:`out a source`}`:""}?`))return;const vetoolsSourceSet=new Set(BrewUtil._getActiveVetoolsSources().map((it=>it.json)));const isMatchingSource=itSrc=>isAllSources||(itSrc===source||source===undefined&&!vetoolsSourceSet.has(itSrc)&&!BrewUtil.hasSourceJson(itSrc));await Promise.all(BrewUtil._getBrewCategories().map((async k=>{const cat=BrewUtil.homebrew[k];const pDeleteFn=BrewUtil._getPDeleteFunction(k);const toDel=[];cat.filter((it=>isMatchingSource(it.source))).forEach((it=>toDel.push(it.uniqueId)));await Promise.all(toDel.map((async uId=>pDeleteFn(uId))))})));if(BrewUtil._lists)BrewUtil._lists.forEach((l=>l.update()));BrewUtil._persistHomebrewDebounced();BrewUtil.removeJsonSource(source);if(BrewUtil._sourceFilter)BrewUtil._sourceFilter.removeItem(source);if(BrewUtil._filterBox)BrewUtil._filterBox.render();await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);window.location.hash="";if(BrewUtil._filterBox)BrewUtil._filterBox.fireChangeEvent()},async _pRenderBrewScreen_pRefreshBrewList($brewList){function showSourceManager(source,showAll){const $wrpBtnDel=$(`<div class="flex-v-center"></div>`);const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isHeight100:true,title:`View/Manage ${source?`Source Contents: ${Parser.sourceJsonToFull(source)}`:showAll?"Entries from All Sources":`Entries with No Source`}`,isUncappedHeight:true,isWidth100:true,overlayColor:"transparent",$titleSplit:$wrpBtnDel,isHeaderBorder:true});const $cbAll=$(`<input type="checkbox">`);const $wrpRows=$$`<div class="list flex-col w-100"></div>`;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control w-100 mt-1" placeholder="Search entries...">`);const $wrpBtnsSort=$$`<div class="filtertools manbrew__filtertools btn-group">
				<button class="col-6 sort btn btn-default btn-xs" data-sort="name">Name</button>
				<button class="col-5 sort btn btn-default btn-xs" data-sort="category">Category</button>
				<label class="wrp-cb-all pr-0 flex-vh-center mb-0 h-100">${$cbAll}</label>
			</div>`;$$($modalInner)`
				${$iptSearch}
				${$wrpBtnsSort}
				${$wrpRows}`;let list;function populateList(){$wrpRows.empty();list=new List({$iptSearch:$iptSearch,$wrpList:$wrpRows,fnSort:SortUtil.listSort});ListUiUtil.bindSelectAllCheckbox($cbAll.off("change"),list);function mapCategoryEntry(cat,bru){const out={};out.name=bru.name;out.uniqueId=bru.uniqueId;out.extraInfo="";switch(cat){case"subclass":out.extraInfo=` (${bru.class})`;break;case"subrace":out.extraInfo=` (${(bru.race||{}).name})`;break;case"psionic":out.extraInfo=` (${Parser.psiTypeToMeta(bru.type).short})`;break;case"itemProperty":{if(bru.entries)out.name=Renderer.findName(bru.entries);if(!out.name)out.name=bru.abbreviation;break}case"adventureData":case"bookData":{const assocData={adventureData:"adventure",bookData:"book"};out.name=((BrewUtil.homebrew[assocData[cat]]||[]).find((a=>a.id===bru.id))||{}).name||bru.id}}out.name=out.name||`(Unknown)`;return out}const vetoolsSourceSet=new Set(BrewUtil._getActiveVetoolsSources().map((it=>it.json)));const isMatchingSource=itSrc=>showAll||(itSrc===source||source===undefined&&!vetoolsSourceSet.has(itSrc)&&!BrewUtil.hasSourceJson(itSrc));BrewUtil._getBrewCategories().forEach((cat=>{BrewUtil.homebrew[cat].filter((it=>isMatchingSource(it.source))).map((it=>mapCategoryEntry(cat,it))).sort(((a,b)=>SortUtil.ascSort(a.name,b.name))).forEach(((it,i)=>{const dispCat=BrewUtil._pRenderBrewScreen_getDisplayCat(cat,true);const eleLi=document.createElement("div");eleLi.className="lst__row flex-col px-0";eleLi.innerHTML=`<label class="lst--border lst__row-inner no-select mb-0 flex-v-center">\n\t\t\t\t\t\t\t\t<div class="col-6 bold">${it.name}</div>\n\t\t\t\t\t\t\t\t<div class="col-5 flex-vh-center">${dispCat}${it.extraInfo}</div>\n\t\t\t\t\t\t\t\t<div class="pr-0 col-1 flex-vh-center"><input type="checkbox" class="no-events"></div>\n\t\t\t\t\t\t\t</label>`;const listItem=new ListItem(i,eleLi,it.name,{category:dispCat,category_raw:cat},{uniqueId:it.uniqueId,cbSel:eleLi.firstElementChild.children[2].firstElementChild});list.addItem(listItem);eleLi.addEventListener("click",(evt=>ListUiUtil.handleSelectClick(list,listItem,evt)))}))}));$wrpRows.empty();list.init();if(!list.items.length)$wrpRows.append(`<h5 class="text-center">No results found.</h5>`);SortUtil.initBtnSortHandlers($wrpBtnsSort,list)}populateList();$(`<button class="btn btn-danger btn-xs">Delete Selected</button>`).on("click",(async()=>{const toDel=list.items.filter((it=>$(it.ele).find(`input`).prop("checked"))).map((it=>({...it.values,...it.data})));if(!toDel.length)return;if(!window.confirm(`Are you sure you want to delete the ${toDel.length} selected item${toDel.length===1?"":"s"}?`))return;if(toDel.length===list.items.length){await BrewUtil._pRenderBrewScreen_pDeleteSource($brewList,source,false,false);doClose()}else{await Promise.all(toDel.map((async it=>{const pDeleteFn=BrewUtil._getPDeleteFunction(it.category_raw);await pDeleteFn(it.uniqueId)})));if(BrewUtil._lists)BrewUtil._lists.forEach((l=>l.update()));BrewUtil._persistHomebrewDebounced();populateList();await BrewUtil._pRenderBrewScreen_pRefreshBrewList($brewList);window.location.hash=""}})).appendTo($wrpBtnDel);$iptSearch.focus()}$brewList.empty();if(!BrewUtil.homebrew)return;const $iptSearch=$(`<input type="search" class="search manbrew__search form-control" placeholder="Search active homebrew...">`);const $wrpList=$(`<div class="list-display-only brew-list brew-list--target manbrew__list flex-col w-100 mb-3"></div>`);const $wrpListGroup=$(`<div class="list-display-only brew-list brew-list--groups no-shrink flex-col w-100" style="height: initial;"></div>`);const list=new List({$iptSearch:$iptSearch,$wrpList:$wrpList,isUseJquery:true,isFuzzy:true});const $lst=$$`
			<div class="flex-col h-100">
				${$iptSearch}
				<div class="filtertools manbrew__filtertools btn-group input-group input-group--bottom flex no-shrink">
					<button class="col-5 sort btn btn-default btn-xs ve-grow" data-sort="source">Source</button>
					<button class="col-5 sort btn btn-default btn-xs" data-sort="authors">Authors</button>
					<button class="col-1 btn btn-default btn-xs" disabled>Origin</button>
					<button class="col-1 ve-grow btn btn-default btn-xs" disabled>&nbsp;</button>
				</div>
				<div class="flex w-100 h-100 overflow-y-auto relative">${$wrpList}</div>
			</div>
		`.appendTo($brewList);$wrpListGroup.appendTo($brewList);SortUtil.initBtnSortHandlers($lst.find(".manbrew__filtertools"),list);const createButtons=(src,$row,isFooterGroup)=>{const hasConverters=!isFooterGroup&&!!src.convertedBy?.length;const btnConvertedBy=isFooterGroup?null:e_({tag:"button",clazz:`btn btn-xs btn-default ${!hasConverters?"disabled":""}`,title:hasConverters?`Converted by: ${src.convertedBy.join(", ").qq()}`:"(No conversion credit given)",children:[e_({tag:"span",clazz:"glyphicon glyphicon-certificate"})],click:()=>{if(!hasConverters)return;const{$modalInner:$modalInner}=UiUtil.getShowModal({title:"Converted By:",isMinHeight0:true});if(src.convertedBy.length===1)return $modalInner.append(`<div>${src.convertedBy.join("").qq()}</div>`);$modalInner.append(`<ul>${src.convertedBy.map((it=>`<li>${it.qq()}</li>`)).join("")}</ul>`)}});const $btnViewManage=$(`<button class="btn btn-xs btn-default" title="View/Manage"><span class="glyphicon glyphicon-folder-close"></span></button>`).on("click",(()=>{showSourceManager(src.json,src._all)}));const $btnDeleteAll=$(`<button class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-trash"></span></button>`).on("click",(()=>BrewUtil._pRenderBrewScreen_pDeleteSource($brewList,src.json,true,src._all)));$$`<div class="${isFooterGroup?`flex-v-center flex-h-right`:`flex-vh-center ve-grow`} btn-group">
				${$btnViewManage}
				${btnConvertedBy}
				${$btnDeleteAll}
			</div>`.appendTo($row)};const brewSources=MiscUtil.copy(BrewUtil.getJsonSources()).filter((src=>BrewUtil._isSourceRelevantForCurrentPage(src.json)));brewSources.sort(((a,b)=>SortUtil.ascSort(a.full,b.full)));brewSources.forEach(((src,i)=>{const validAuthors=(!src.authors?[]:!(src.authors instanceof Array)?[]:src.authors).join(", ");const isGroup=src._unknown||src._all;const $row=$(`<div class="manbrew__row flex-v-center lst__row lst--border lst__row-inner no-shrink">\n\t\t\t\t<span class="col-5 source manbrew__source">${isGroup?"<i>":""}${src.full}${isGroup?"</i>":""}</span>\n\t\t\t\t<span class="col-5 authors">${validAuthors}</span>\n\t\t\t\t<${src.url?"a":"span"} class="col-1 text-center" ${src.url?`href="${src.url}" target="_blank" rel="noopener noreferrer"`:""}>${src.url?"View Source":""}</${src.url?"a":"span"}>\n\t\t\t\t<span class="hidden">${src.abbreviation}</span>\n\t\t\t</div>`);createButtons(src,$row);const listItem=new ListItem(i,$row,src.full,{authors:validAuthors,abbreviation:src.abbreviation});list.addItem(listItem)}));const createGroupRow=(fullText,modeProp)=>{const $row=$(`<div class="manbrew__row flex-h-right flex-v-center">\n\t\t\t\t<div class="source manbrew__source text-right"><i class="mr-3">${fullText}</i></div>\n\t\t\t</div>`);createButtons({[modeProp]:true},$row,true);$wrpListGroup.append($row)};createGroupRow("Entries From All Sources","_all");createGroupRow("Entries Without Sources","_unknown");list.init();$iptSearch.focus()},_isSourceRelevantForCurrentPage(source){const cats=BrewUtil.getPageProps();return!!cats.find((cat=>!!(BrewUtil.homebrew[cat]||[]).some((entry=>(entry.inherits?entry.inherits.source:entry.source)===source))))},getPageProps(page){page=BrewUtil._PAGE||page||UrlUtil.getCurrentPage();const _PG_SPELLS=["spell","spellFluff"];const _PG_BESTIARY=["monster","legendaryGroup","monsterFluff"];switch(page){case UrlUtil.PG_SPELLS:return _PG_SPELLS;case UrlUtil.PG_CLASSES:return["class","subclass","classFeature","subclassFeature"];case UrlUtil.PG_BESTIARY:return _PG_BESTIARY;case UrlUtil.PG_BACKGROUNDS:return["background"];case UrlUtil.PG_FEATS:return["feat"];case UrlUtil.PG_OPT_FEATURES:return["optionalfeature"];case UrlUtil.PG_RACES:return["race","raceFluff","subrace"];case UrlUtil.PG_OBJECTS:return["object"];case UrlUtil.PG_TRAPS_HAZARDS:return["trap","hazard"];case UrlUtil.PG_DEITIES:return["deity"];case UrlUtil.PG_ITEMS:return["item","baseitem","variant","itemProperty","itemType","itemFluff","itemGroup","itemEntry"];case UrlUtil.PG_REWARDS:return["reward"];case UrlUtil.PG_PSIONICS:return["psionic"];case UrlUtil.PG_VARIANTRULES:return["variantrule"];case UrlUtil.PG_CONDITIONS_DISEASES:return["condition","disease","status"];case UrlUtil.PG_ADVENTURES:return["adventure","adventureData"];case UrlUtil.PG_BOOKS:return["book","bookData"];case UrlUtil.PG_TABLES:return["table","tableGroup"];case UrlUtil.PG_MAKE_BREW:return[..._PG_SPELLS,..._PG_BESTIARY,"makebrewCreatureTrait"];case UrlUtil.PG_MANAGE_BREW:case UrlUtil.PG_DEMO_RENDER:return BrewUtil._STORABLE;case UrlUtil.PG_VEHICLES:return["vehicle","vehicleUpgrade"];case UrlUtil.PG_ACTIONS:return["action"];case UrlUtil.PG_CULTS_BOONS:return["cult","boon"];case UrlUtil.PG_LANGUAGES:return["language","languageScript"];case UrlUtil.PG_CHAR_CREATION_OPTIONS:return["charoption"];case UrlUtil.PG_RECIPES:return["recipe"];case UrlUtil.PG_CLASS_SUBCLASS_FEATURES:return["classFeature","subclassFeature"];default:throw new Error(`No homebrew properties defined for category ${page}`)}},dirToProp(dir){if(!dir)return"";else if(BrewUtil._STORABLE.includes(dir))return dir;else{switch(dir){case"creature":return"monster";case"collection":return dir;case"magicvariant":return"variant";case"makebrew":return"makebrewCreatureTrait"}throw new Error(`Directory was not mapped to a category: "${dir}"`)}},_pRenderBrewScreen_getDisplayCat(cat,isManager){switch(cat){case"variantrule":return"Variant Rule";case"legendaryGroup":return"Legendary Group";case"optionalfeature":return"Optional Feature";case"adventure":return isManager?"Adventure Contents/Info":"Adventure";case"adventureData":return"Adventure Text";case"book":return isManager?"Book Contents/Info":"Book";case"bookData":return"Book Text";case"itemProperty":return"Item Property";case"itemEntry":return"Item Entry";case"baseitem":return"Base Item";case"variant":return"Magic Item Variant";case"itemGroup":return"Item Group";case"monsterFluff":return"Monster Fluff";case"itemFluff":return"Item Fluff";case"makebrewCreatureTrait":return"Homebrew Builder Creature Trait";case"classFeature":return"Class Feature";case"subclassFeature":return"Subclass Feature";case"charoption":return"Other Character Creation Option";default:return cat.uppercaseFirst()}},handleLoadbrewClick:async ele=>{const $ele=$(ele);if(!$ele.hasClass("rd__wrp-loadbrew--ready"))return;let jsonUrl=ele.dataset.rdLoaderPath;const name=ele.dataset.rdLoaderName;const cached=$ele.html();const cachedTitle=$ele.title();$ele.title("");$ele.removeClass("rd__wrp-loadbrew--ready").html(`${name.qq()}<span class="glyphicon glyphicon-refresh rd__loadbrew-icon rd__loadbrew-icon--active"></span>`);jsonUrl=jsonUrl.unescapeQuotes();const data=await DataUtil.loadJSON(`${jsonUrl}?${(new Date).getTime()}`);await BrewUtil.pDoHandleBrewJson(data,BrewUtil._PAGE||UrlUtil.getCurrentPage());$ele.html(`${name.qq()}<span class="glyphicon glyphicon-saved rd__loadbrew-icon"></span>`);setTimeout((()=>$ele.html(cached).addClass("rd__wrp-loadbrew--ready").title(cachedTitle)),500)},async _pDoRemove(arrName,uniqueId,{isChild:isChild}={}){const index=BrewUtil.homebrew[arrName].findIndex((it=>isChild?it.parentUniqueId:it.uniqueId===uniqueId));if(!~index)return;const toRemove=BrewUtil.homebrew[arrName][index];BrewUtil.homebrew[arrName].splice(index,1);if(BrewUtil._lists){BrewUtil._lists.forEach((l=>l.removeItemByData(isChild?"parentUniqueId":"uniqueId",uniqueId)))}return toRemove},_getPDeleteFunction(category){switch(category){case"spell":case"spellFluff":case"monster":case"monsterFluff":case"background":case"feat":case"optionalfeature":case"raceFluff":case"subrace":case"object":case"trap":case"hazard":case"deity":case"item":case"baseitem":case"variant":case"itemType":case"itemProperty":case"itemFluff":case"itemGroup":case"itemEntry":case"reward":case"psionic":case"variantrule":case"legendaryGroup":case"condition":case"disease":case"status":case"table":case"tableGroup":case"vehicle":case"vehicleUpgrade":case"action":case"cult":case"boon":case"language":case"languageScript":case"class":case"makebrewCreatureTrait":case"classFeature":case"subclassFeature":case"charoption":case"charoptionFluff":case"recipe":return BrewUtil._pPDeleteGenericBrew.bind(BrewUtil,category);case"race":return BrewUtil._pDeleteRaceBrew.bind(BrewUtil);case"subclass":return BrewUtil._pDeleteSubclassBrew.bind(BrewUtil);case"adventure":case"book":return BrewUtil._pDeleteGenericBookBrew.bind(BrewUtil,category);case"adventureData":case"bookData":return()=>{};default:throw new Error(`No homebrew delete function defined for category ${category}`)}},async _pDeleteSubclassBrew(uniqueId){let sc;let index=0;for(;index<BrewUtil.homebrew.subclass.length;++index){if(BrewUtil.homebrew.subclass[index].uniqueId===uniqueId){sc=BrewUtil.homebrew.subclass[index];break}}if(sc){BrewUtil.homebrew.subclass.splice(index,1);BrewUtil._persistHomebrewDebounced();if(typeof ClassesPage==="undefined")return;await classesPage.pDeleteSubclassBrew(uniqueId,sc)}},async _pDeleteRaceBrew(uniqueId){const removedRace=await BrewUtil._pDoRemove("race",uniqueId);if(!removedRace||!removedRace.subraces)return;if(typeof racesPage==="undefined"||!BrewUtil._lists)return;const subraceMetas=removedRace.subraces.map((it=>({name:it.name,source:it.source||removedRace.source}))).filter((it=>it.name));if(!subraceMetas.length)return;const allAttachedRaces=racesPage.getMergedSubraces(uniqueId).filter((it=>subraceMetas.some((meta=>meta.name===it._subraceName&&meta.source===it.source)))).filter((it=>it.uniqueId));if(!allAttachedRaces)return;allAttachedRaces.forEach((attachedRace=>{BrewUtil._lists.forEach((l=>l.removeItemByData("uniqueId",attachedRace.uniqueId)))}))},async _pPDeleteGenericBrew(category,uniqueId){await BrewUtil._pDoRemove(category,uniqueId)},async _pDeleteGenericBookBrew(category,uniqueId){await BrewUtil._pDoRemove(category,uniqueId);await BrewUtil._pDoRemove(`${category}Data`,uniqueId,{isChild:true})},manageBrew:()=>{const{$modalInner:$modalInner}=UiUtil.getShowModal({isHeight100:true,isWidth100:true,title:`Manage Homebrew`,isUncappedHeight:true,$titleSplit:BrewUtil._$getBtnDeleteAll(true),isHeaderBorder:true});BrewUtil._pRenderBrewScreen($modalInner,{isModal:true})},async pAddEntry(prop,obj){BrewUtil._mutUniqueId(obj);(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).push(obj);BrewUtil._persistHomebrewDebounced();return BrewUtil.homebrew[prop].length-1},async pRemoveEntry(prop,obj){const ix=(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).findIndex((it=>it.uniqueId===obj.uniqueId));if(~ix){BrewUtil.homebrew[prop].splice(ix,1);BrewUtil._persistHomebrewDebounced()}else throw new Error(`Could not find object with ID "${obj.uniqueId}" in "${prop}" list`)},getEntryIxByEntry(prop,obj){return(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[]).findIndex((it=>it.name===obj.name&&it.source===obj.source))},getEntryByEntryIx(prop,ix){return(BrewUtil.homebrew[prop]=BrewUtil.homebrew[prop]||[])[ix]},async pUpdateEntryByIx(prop,ix,obj){if(~ix&&ix<BrewUtil.homebrew[prop].length){BrewUtil._mutUniqueId(obj);BrewUtil.homebrew[prop].splice(ix,1,obj);BrewUtil._persistHomebrewDebounced()}else throw new Error(`Index "${ix}" was not valid!`)},_mutUniqueId(obj){delete obj.uniqueId;obj.uniqueId=CryptUtil.md5(JSON.stringify(obj))},_DIRS:["action","adventure","background","book","boon","charoption","class","condition","creature","cult","deity","disease","feat","hazard","item","language","magicvariant","makebrew","object","optionalfeature","psionic","race","recipe","reward","spell","spellFluff","subclass","subrace","table","trap","variantrule","vehicle","classFeature","subclassFeature"],_STORABLE:["class","subclass","classFeature","subclassFeature","spell","spellFluff","monster","legendaryGroup","monsterFluff","background","feat","optionalfeature","race","raceFluff","subrace","deity","item","baseitem","variant","itemProperty","itemType","itemFluff","itemGroup","itemEntry","psionic","reward","object","trap","hazard","variantrule","condition","disease","status","adventure","adventureData","book","bookData","table","tableGroup","vehicle","vehicleUpgrade","action","cult","boon","language","languageScript","makebrewCreatureTrait","charoption","charoptionFluff","recipe"],async pDoHandleBrewJson(json,page,pFuncRefresh){page=BrewUtil._PAGE||page;await BrewUtil._lockHandleBrewJson.pLock();try{await BrewUtil._pDoHandleBrewJson(json,page,{pFuncRefresh:pFuncRefresh});if(json.blacklist&&ExcludeUtil.isInitialised){await ExcludeUtil.pSetList(ExcludeUtil.getList().concat(json.blacklist||[]))}}finally{BrewUtil._lockHandleBrewJson.unlock()}},async _pDoHandleBrewJson(json,page,{pFuncRefresh:pFuncRefresh,isLocalPreload:isLocalPreload,homebrew:homebrew}={}){page=BrewUtil._PAGE||page;homebrew=homebrew||BrewUtil.homebrew||{};function storePrep(arrName){if(json[arrName]!=null&&!(json[arrName]instanceof Array)||!json[arrName])return;json[arrName].forEach((it=>BrewUtil._mutUniqueId(it)))}BrewUtil._STORABLE.forEach(storePrep);const bookPairs=[["adventure","adventureData"],["book","bookData"]];bookPairs.forEach((([bookMetaKey,bookDataKey])=>{if(json[bookMetaKey]&&json[bookDataKey]){json[bookMetaKey].forEach((book=>{const data=json[bookDataKey].find((it=>it.id===book.id));if(data){data.parentUniqueId=book.uniqueId}}))}}));async function pCheckAndAdd(prop){if(!homebrew[prop])homebrew[prop]=[];if(!json[prop]||!(json[prop]instanceof Array))return[];if(IS_DEPLOYED||IS_VTT||IS_NODE){const areNew=[];const existingIds=homebrew[prop].map((it=>it.uniqueId));json[prop].forEach((it=>{if(!existingIds.find((id=>it.uniqueId===id))){homebrew[prop].push(it);areNew.push(it)}}));return areNew}const existingLookup={};homebrew[prop].forEach((it=>{const brewHash=BrewUtil._getDevBrewHash(page,prop,it);existingLookup[brewHash]=it.uniqueId}));const pDeleteFn=BrewUtil._getPDeleteFunction(prop);for(const entity of json[prop]){const brewHash=BrewUtil._getDevBrewHash(page,prop,entity);if(existingLookup[brewHash]&&entity.uniqueId!==existingLookup[brewHash]){if(isLocalPreload){const ixExisting=homebrew[prop].findIndex((ex=>BrewUtil._getDevBrewHash(page,prop,ex)===brewHash));if(~ixExisting)homebrew[prop].splice(ixExisting,1)}else{await pDeleteFn(existingLookup[brewHash])}homebrew[prop].push(entity)}else if(!existingLookup[brewHash]){homebrew[prop].push(entity)}}return json[prop]}function checkAndAddMetaGetNewSources(){const areNew=[];if(json._meta){if(!BrewUtil.homebrewMeta)BrewUtil.homebrewMeta={sources:[]};Object.keys(json._meta).forEach((k=>{switch(k){case"dateAdded":case"dateLastModified":break;case"sources":{const existing=BrewUtil.homebrewMeta.sources.map((src=>src.json));json._meta.sources.forEach((src=>{if(!existing.find((it=>it===src.json))){BrewUtil.homebrewMeta.sources.push(src);areNew.push(src)}}));break}default:{BrewUtil.homebrewMeta[k]=BrewUtil.homebrewMeta[k]||{};Object.assign(BrewUtil.homebrewMeta[k],json._meta[k]);break}}}))}return areNew}let sourcesToAdd=json._meta?json._meta.sources:[];const toAdd={};BrewUtil._STORABLE.filter((k=>json[k]&&json[k]instanceof Array)).forEach((k=>toAdd[k]=json[k]));sourcesToAdd=checkAndAddMetaGetNewSources();await Promise.all(BrewUtil._STORABLE.map((async k=>toAdd[k]=await pCheckAndAdd(k))));if(!isLocalPreload)BrewUtil._persistHomebrewDebounced();StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta);BrewUtil._resetSourceCache();if(!isLocalPreload){switch(page){case UrlUtil.PG_SPELLS:case UrlUtil.PG_CLASSES:case UrlUtil.PG_BESTIARY:case UrlUtil.PG_BACKGROUNDS:case UrlUtil.PG_FEATS:case UrlUtil.PG_OPT_FEATURES:case UrlUtil.PG_RACES:case UrlUtil.PG_OBJECTS:case UrlUtil.PG_TRAPS_HAZARDS:case UrlUtil.PG_DEITIES:case UrlUtil.PG_ITEMS:case UrlUtil.PG_REWARDS:case UrlUtil.PG_PSIONICS:case UrlUtil.PG_VARIANTRULES:case UrlUtil.PG_CONDITIONS_DISEASES:case UrlUtil.PG_ADVENTURE:case UrlUtil.PG_ADVENTURES:case UrlUtil.PG_BOOK:case UrlUtil.PG_BOOKS:case UrlUtil.PG_TABLES:case UrlUtil.PG_VEHICLES:case UrlUtil.PG_ACTIONS:case UrlUtil.PG_CULTS_BOONS:case UrlUtil.PG_LANGUAGES:case UrlUtil.PG_CHAR_CREATION_OPTIONS:case UrlUtil.PG_RECIPES:case UrlUtil.PG_CLASS_SUBCLASS_FEATURES:await(BrewUtil._pHandleBrew||handleBrew)(MiscUtil.copy(toAdd));break;case UrlUtil.PG_MAKE_BREW:if(BrewUtil._pHandleBrew)await BrewUtil._pHandleBrew(MiscUtil.copy(toAdd));break;case UrlUtil.PG_MANAGE_BREW:case UrlUtil.PG_DEMO_RENDER:case VeCt.PG_NONE:break;default:throw new Error(`No homebrew add function defined for category ${page}`)}if(pFuncRefresh)await pFuncRefresh();if(BrewUtil._filterBox&&BrewUtil._sourceFilter){const cur=BrewUtil._filterBox.getValues();if(cur.Source){const toSet=JSON.parse(JSON.stringify(cur.Source));if(toSet._totals.yes||toSet._totals.no){if(page===UrlUtil.PG_CLASSES)toSet["Core"]=1;else sourcesToAdd.forEach((src=>toSet[src.json]=1));BrewUtil._filterBox.setFromValues({Source:toSet})}}if(BrewUtil._filterBox)BrewUtil._filterBox.fireChangeEvent()}}},_getDevBrewHash(page,prop,it){return UrlUtil.URL_TO_HASH_BUILDER[page]?UrlUtil.URL_TO_HASH_BUILDER[page](it):UrlUtil.URL_TO_HASH_BUILDER[prop]?UrlUtil.URL_TO_HASH_BUILDER[prop](it):`${it.inherits&&it.inherits.source?it.inherits.source:it.source}__${it.name}`},makeBrewButton:id=>{$(`#${id}`).on("click",(()=>BrewUtil.manageBrew()))},_getBrewCategories(){return Object.keys(BrewUtil.homebrew).filter((it=>!it.startsWith("_")))},_buildSourceCache(){function doBuild(){if(BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.sources){BrewUtil.homebrewMeta.sources.forEach((src=>BrewUtil._sourceCache[src.json.toLowerCase()]={...src}))}}if(!BrewUtil._sourceCache){BrewUtil._sourceCache={};if(!BrewUtil.homebrewMeta){const temp=StorageUtil.syncGet(VeCt.STORAGE_HOMEBREW_META)||{};temp.sources=temp.sources||[];BrewUtil.homebrewMeta=temp;doBuild()}else{doBuild()}}},_resetSourceCache(){BrewUtil._sourceCache=null},removeJsonSource(source){if(!source)return;source=source.toLowerCase();BrewUtil._resetSourceCache();const ix=BrewUtil.homebrewMeta.sources.findIndex((it=>it.json.toLowerCase()===source));if(~ix)BrewUtil.homebrewMeta.sources.splice(ix,1);StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},getJsonSources(){BrewUtil._buildSourceCache();return BrewUtil.homebrewMeta&&BrewUtil.homebrewMeta.sources?BrewUtil.homebrewMeta.sources:[]},hasSourceJson(source){if(!source)return false;source=source.toLowerCase();BrewUtil._buildSourceCache();return!!BrewUtil._sourceCache[source]},sourceJsonToFull(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].full||source:source},sourceJsonToAbv(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].abbreviation||source:source},sourceJsonToDate(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source].dateReleased||source:source},sourceJsonToSource(source){if(!source)return null;source=source.toLowerCase();BrewUtil._buildSourceCache();return BrewUtil._sourceCache[source]?BrewUtil._sourceCache[source]:null},sourceJsonToStyle(source){const stylePart=BrewUtil.sourceJsonToStylePart(source);if(!stylePart)return stylePart;return`style="${stylePart}"`},sourceJsonToStylePart(source){if(!source)return"";source=source.toLowerCase();const color=BrewUtil.sourceJsonToColor(source);if(color)return`color: #${color}; border-color: #${color}; text-decoration-color: #${color};`;return""},sourceJsonToColor(source){if(!source)return"";source=source.toLowerCase();BrewUtil._buildSourceCache();if(BrewUtil._sourceCache[source]&&BrewUtil._sourceCache[source].color){const validColor=BrewUtil.getValidColor(BrewUtil._sourceCache[source].color);if(validColor.length)return validColor;return""}else return""},getValidColor(color){return color.replace(/[^a-fA-F0-9]/g,"").slice(0,8)},addSource(sourceObj){BrewUtil._resetSourceCache();const exists=BrewUtil.homebrewMeta.sources.some((it=>it.json===sourceObj.json));if(exists)throw new Error(`Source "${sourceObj.json}" already exists!`);(BrewUtil.homebrewMeta.sources=BrewUtil.homebrewMeta.sources||[]).push(sourceObj);StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},updateSource(sourceObj){BrewUtil._resetSourceCache();const ix=BrewUtil.homebrewMeta.sources.findIndex((it=>it.json===sourceObj.json));if(!~ix)throw new Error(`Source "${sourceObj.json}" does not exist!`);const json=BrewUtil.homebrewMeta.sources[ix].json;BrewUtil.homebrewMeta.sources[ix]={...sourceObj,json:json};StorageUtil.syncSet(VeCt.STORAGE_HOMEBREW_META,BrewUtil.homebrewMeta)},_getActiveVetoolsSources(){if(BrewUtil.homebrew===null)throw new Error(`Homebrew was not initialized!`);const allActiveSources=new Set;Object.keys(BrewUtil.homebrew).forEach((k=>BrewUtil.homebrew[k].forEach((it=>it.source&&allActiveSources.add(it.source)))));return Object.keys(Parser.SOURCE_JSON_TO_FULL).map((k=>({json:k,full:Parser.SOURCE_JSON_TO_FULL[k],abbreviation:Parser.SOURCE_JSON_TO_ABV[k],dateReleased:Parser.SOURCE_JSON_TO_DATE[k]}))).sort(((a,b)=>SortUtil.ascSort(a.full,b.full))).filter((it=>allActiveSources.has(it.json)))},async pGetSearchIndex(){BrewUtil._buildSourceCache();const indexer=new Omnidexer(Omnisearch.highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];for(const IX_DEF of INDEX_DEFINITIONS){for(const arbiter of IX_DEF){if(arbiter.isSkipBrew)continue;if(!(BrewUtil.homebrew[arbiter.brewProp||arbiter.listProp]||[]).length)continue;if(arbiter.pFnPreProcBrew){const toProc=await arbiter.pFnPreProcBrew.bind(arbiter)(BrewUtil.homebrew);await indexer.pAddToIndex(arbiter,toProc)}else{await indexer.pAddToIndex(arbiter,BrewUtil.homebrew)}}}}return Omnidexer.decompressIndex(indexer.getIndex())},async pGetAdditionalSearchIndices(highestId,addiProp){BrewUtil._buildSourceCache();const indexer=new Omnidexer(highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];await Promise.all(INDEX_DEFINITIONS.map((IXDEF=>Promise.all(IXDEF.filter((ti=>ti.additionalIndexes&&(BrewUtil.homebrew[ti.listProp]||[]).length)).map((ti=>Promise.all(Object.entries(ti.additionalIndexes).filter((([prop])=>prop===addiProp)).map((async([prop,pGetIndex])=>{const toIndex=await pGetIndex(indexer,{[ti.listProp]:BrewUtil.homebrew[ti.listProp]});toIndex.forEach((add=>indexer.pushToIndex(add)))})))))))))}return Omnidexer.decompressIndex(indexer.getIndex())},async pGetAlternateSearchIndices(highestId,altProp){BrewUtil._buildSourceCache();const indexer=new Omnidexer(highestId+1);await BrewUtil.pAddBrewData();if(BrewUtil.homebrew){const INDEX_DEFINITIONS=[Omnidexer.TO_INDEX__FROM_INDEX_JSON,Omnidexer.TO_INDEX];for(const IXDEF of INDEX_DEFINITIONS){const filteredIxDef=IXDEF.filter((ti=>ti.alternateIndexes&&(BrewUtil.homebrew[ti.listProp]||[]).length));for(const ti of filteredIxDef){const filteredAltIndexes=Object.entries(ti.alternateIndexes).filter((([prop])=>prop===altProp));for(const tuple of filteredAltIndexes){const[prop,pGetIndex]=tuple;await indexer.pAddToIndex(ti,BrewUtil.homebrew,{alt:ti.alternateIndexes[prop]})}}}}return Omnidexer.decompressIndex(indexer.getIndex())},__pPersistHomebrewDebounced:null,_persistHomebrewDebounced(){if(BrewUtil.__pPersistHomebrewDebounced==null){BrewUtil.__pPersistHomebrewDebounced=MiscUtil.debounce((()=>BrewUtil._pCleanSaveBrew()),125)}BrewUtil.__pPersistHomebrewDebounced()}};CryptUtil={_md5cycle:(x,k)=>{let a=x[0];let b=x[1];let c=x[2];let d=x[3];a=CryptUtil._ff(a,b,c,d,k[0],7,-680876936);d=CryptUtil._ff(d,a,b,c,k[1],12,-389564586);c=CryptUtil._ff(c,d,a,b,k[2],17,606105819);b=CryptUtil._ff(b,c,d,a,k[3],22,-1044525330);a=CryptUtil._ff(a,b,c,d,k[4],7,-176418897);d=CryptUtil._ff(d,a,b,c,k[5],12,1200080426);c=CryptUtil._ff(c,d,a,b,k[6],17,-1473231341);b=CryptUtil._ff(b,c,d,a,k[7],22,-45705983);a=CryptUtil._ff(a,b,c,d,k[8],7,1770035416);d=CryptUtil._ff(d,a,b,c,k[9],12,-1958414417);c=CryptUtil._ff(c,d,a,b,k[10],17,-42063);b=CryptUtil._ff(b,c,d,a,k[11],22,-1990404162);a=CryptUtil._ff(a,b,c,d,k[12],7,1804603682);d=CryptUtil._ff(d,a,b,c,k[13],12,-40341101);c=CryptUtil._ff(c,d,a,b,k[14],17,-1502002290);b=CryptUtil._ff(b,c,d,a,k[15],22,1236535329);a=CryptUtil._gg(a,b,c,d,k[1],5,-165796510);d=CryptUtil._gg(d,a,b,c,k[6],9,-1069501632);c=CryptUtil._gg(c,d,a,b,k[11],14,643717713);b=CryptUtil._gg(b,c,d,a,k[0],20,-373897302);a=CryptUtil._gg(a,b,c,d,k[5],5,-701558691);d=CryptUtil._gg(d,a,b,c,k[10],9,38016083);c=CryptUtil._gg(c,d,a,b,k[15],14,-660478335);b=CryptUtil._gg(b,c,d,a,k[4],20,-405537848);a=CryptUtil._gg(a,b,c,d,k[9],5,568446438);d=CryptUtil._gg(d,a,b,c,k[14],9,-1019803690);c=CryptUtil._gg(c,d,a,b,k[3],14,-187363961);b=CryptUtil._gg(b,c,d,a,k[8],20,1163531501);a=CryptUtil._gg(a,b,c,d,k[13],5,-1444681467);d=CryptUtil._gg(d,a,b,c,k[2],9,-51403784);c=CryptUtil._gg(c,d,a,b,k[7],14,1735328473);b=CryptUtil._gg(b,c,d,a,k[12],20,-1926607734);a=CryptUtil._hh(a,b,c,d,k[5],4,-378558);d=CryptUtil._hh(d,a,b,c,k[8],11,-2022574463);c=CryptUtil._hh(c,d,a,b,k[11],16,1839030562);b=CryptUtil._hh(b,c,d,a,k[14],23,-35309556);a=CryptUtil._hh(a,b,c,d,k[1],4,-1530992060);d=CryptUtil._hh(d,a,b,c,k[4],11,1272893353);c=CryptUtil._hh(c,d,a,b,k[7],16,-155497632);b=CryptUtil._hh(b,c,d,a,k[10],23,-1094730640);a=CryptUtil._hh(a,b,c,d,k[13],4,681279174);d=CryptUtil._hh(d,a,b,c,k[0],11,-358537222);c=CryptUtil._hh(c,d,a,b,k[3],16,-722521979);b=CryptUtil._hh(b,c,d,a,k[6],23,76029189);a=CryptUtil._hh(a,b,c,d,k[9],4,-640364487);d=CryptUtil._hh(d,a,b,c,k[12],11,-421815835);c=CryptUtil._hh(c,d,a,b,k[15],16,530742520);b=CryptUtil._hh(b,c,d,a,k[2],23,-995338651);a=CryptUtil._ii(a,b,c,d,k[0],6,-198630844);d=CryptUtil._ii(d,a,b,c,k[7],10,1126891415);c=CryptUtil._ii(c,d,a,b,k[14],15,-1416354905);b=CryptUtil._ii(b,c,d,a,k[5],21,-57434055);a=CryptUtil._ii(a,b,c,d,k[12],6,1700485571);d=CryptUtil._ii(d,a,b,c,k[3],10,-1894986606);c=CryptUtil._ii(c,d,a,b,k[10],15,-1051523);b=CryptUtil._ii(b,c,d,a,k[1],21,-2054922799);a=CryptUtil._ii(a,b,c,d,k[8],6,1873313359);d=CryptUtil._ii(d,a,b,c,k[15],10,-30611744);c=CryptUtil._ii(c,d,a,b,k[6],15,-1560198380);b=CryptUtil._ii(b,c,d,a,k[13],21,1309151649);a=CryptUtil._ii(a,b,c,d,k[4],6,-145523070);d=CryptUtil._ii(d,a,b,c,k[11],10,-1120210379);c=CryptUtil._ii(c,d,a,b,k[2],15,718787259);b=CryptUtil._ii(b,c,d,a,k[9],21,-343485551);x[0]=CryptUtil._add32(a,x[0]);x[1]=CryptUtil._add32(b,x[1]);x[2]=CryptUtil._add32(c,x[2]);x[3]=CryptUtil._add32(d,x[3])},_cmn:(q,a,b,x,s,t)=>{a=CryptUtil._add32(CryptUtil._add32(a,q),CryptUtil._add32(x,t));return CryptUtil._add32(a<<s|a>>>32-s,b)},_ff:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b&c|~b&d,a,b,x,s,t),_gg:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b&d|c&~d,a,b,x,s,t),_hh:(a,b,c,d,x,s,t)=>CryptUtil._cmn(b^c^d,a,b,x,s,t),_ii:(a,b,c,d,x,s,t)=>CryptUtil._cmn(c^(b|~d),a,b,x,s,t),_md51:s=>{let n=s.length;let state=[1732584193,-271733879,-1732584194,271733878];let i;for(i=64;i<=s.length;i+=64){CryptUtil._md5cycle(state,CryptUtil._md5blk(s.substring(i-64,i)))}s=s.substring(i-64);let tail=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(i=0;i<s.length;i++)tail[i>>2]|=s.charCodeAt(i)<<(i%4<<3);tail[i>>2]|=128<<(i%4<<3);if(i>55){CryptUtil._md5cycle(state,tail);for(i=0;i<16;i++)tail[i]=0}tail[14]=n*8;CryptUtil._md5cycle(state,tail);return state},_md5blk:s=>{let md5blks=[];for(let i=0;i<64;i+=4){md5blks[i>>2]=s.charCodeAt(i)+(s.charCodeAt(i+1)<<8)+(s.charCodeAt(i+2)<<16)+(s.charCodeAt(i+3)<<24)}return md5blks},_hex_chr:"0123456789abcdef".split(""),_rhex:n=>{let s="";for(let j=0;j<4;j++){s+=CryptUtil._hex_chr[n>>j*8+4&15]+CryptUtil._hex_chr[n>>j*8&15]}return s},_add32:(a,b)=>a+b&4294967295,hex:x=>{for(let i=0;i<x.length;i++){x[i]=CryptUtil._rhex(x[i])}return x.join("")},hex2Dec(hex){return parseInt(`0x${hex}`)},md5:s=>CryptUtil.hex(CryptUtil._md51(s)),hashCode(obj){if(typeof obj==="string"){if(!obj)return 0;let h=0;for(let i=0;i<obj.length;++i)h=31*h+obj.charCodeAt(i);return h}else if(typeof obj==="number")return obj;else throw new Error(`No hashCode implementation for ${obj}`)},uid(){if(RollerUtil.isCrypto()){return([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,(c=>(c^crypto.getRandomValues(new Uint8Array(1))[0]&15>>c/4).toString(16)))}else{let d=Date.now();if(typeof performance!=="undefined"&&typeof performance.now==="function"){d+=performance.now()}return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(c){const r=(d+Math.random()*16)%16|0;d=Math.floor(d/16);return(c==="x"?r:r&3|8).toString(16)}))}}};CollectionUtil={ObjectSet:class ObjectSet{constructor(){this.map=new Map;this[Symbol.iterator]=this.values}add(item){this.map.set(item._toIdString(),item)}values(){return this.map.values()}},setEq(a,b){if(a.size!==b.size)return false;for(const it of a)if(!b.has(it))return false;return true},setDiff(set1,set2){return new Set([...set1].filter((it=>!set2.has(it))))},deepEquals(a,b){if(CollectionUtil._eq_sameValueZeroEqual(a,b))return true;if(a&&b&&typeof a==="object"&&typeof b==="object"){if(CollectionUtil._eq_isPlainObject(a)&&CollectionUtil._eq_isPlainObject(b))return CollectionUtil._eq_areObjectsEqual(a,b);const arrayA=Array.isArray(a);const arrayB=Array.isArray(b);if(arrayA||arrayB)return arrayA===arrayB&&CollectionUtil._eq_areArraysEqual(a,b);const setA=a instanceof Set;const setB=b instanceof Set;if(setA||setB)return setA===setB&&CollectionUtil.setEq(a,b);return CollectionUtil._eq_areObjectsEqual(a,b)}return false},_eq_sameValueZeroEqual:(a,b)=>a===b||a!==a&&b!==b,_eq_isPlainObject:value=>value.constructor===Object||value.constructor==null,_eq_areObjectsEqual(a,b){const keysA=Object.keys(a);const{length:length}=keysA;if(Object.keys(b).length!==length)return false;for(let i=0;i<length;i++){if(!b.hasOwnProperty(keysA[i]))return false;if(!CollectionUtil.deepEquals(a[keysA[i]],b[keysA[i]]))return false}return true},_eq_areArraysEqual(a,b){const{length:length}=a;if(b.length!==length)return false;for(let i=0;i<length;i++)if(!CollectionUtil.deepEquals(a[i],b[i]))return false;return true}};Array.prototype.last=Array.prototype.last||function(arg){if(arg!==undefined)this[this.length-1]=arg;else return this[this.length-1]};Array.prototype.filterIndex=Array.prototype.filterIndex||function(fnCheck){const out=[];this.forEach(((it,i)=>{if(fnCheck(it))out.push(i)}));return out};Array.prototype.equals=Array.prototype.equals||function(array2){const array1=this;if(!array1&&!array2)return true;else if(!array1&&array2||array1&&!array2)return false;let temp=[];if(!array1[0]||!array2[0])return false;if(array1.length!==array2.length)return false;let key;for(let i=0;i<array1.length;i++){key=`${typeof array1[i]}~${array1[i]}`;if(temp[key])temp[key]++;else temp[key]=1}for(let i=0;i<array2.length;i++){key=`${typeof array2[i]}~${array2[i]}`;if(temp[key]){if(temp[key]===0)return false;else temp[key]--}else return false}return true};Array.prototype.segregate=Array.prototype.segregate||function(fnIsValid){return this.reduce((([pass,fail],elem)=>fnIsValid(elem)?[[...pass,elem],fail]:[pass,[...fail,elem]]),[[],[]])};Array.prototype.partition=Array.prototype.partition||Array.prototype.segregate;Array.prototype.getNext=Array.prototype.getNext||function(curVal){let ix=this.indexOf(curVal);if(!~ix)throw new Error("Value was not in array!");if(++ix>=this.length)ix=0;return this[ix]};Array.prototype.shuffle=Array.prototype.shuffle||function(){for(let i=0;i<1e4;++i)this.sort((()=>Math.random()-.5));return this};Array.prototype.mergeMap=Array.prototype.mergeMap||function(fnMap){return this.map(((...args)=>fnMap(...args))).reduce(((a,b)=>Object.assign(a,b)),{})};Array.prototype.first=Array.prototype.first||function(fnMapFind){for(let i=0,len=this.length;i<len;++i){const result=fnMapFind(this[i],i,this);if(result)return result}};Array.prototype.pSerialAwaitMap=Array.prototype.pSerialAwaitMap||async function(fnMap){const out=[];for(let i=0,len=this.length;i<len;++i)out.push(await fnMap(this[i],i,this));return out};Array.prototype.unique=Array.prototype.unique||function(fnGetProp){const seen=new Set;return this.filter(((...args)=>{const val=fnGetProp?fnGetProp(...args):args[0];if(seen.has(val))return false;seen.add(val);return true}))};Array.prototype.zip=Array.prototype.zip||function(otherArray){const out=[];const len=Math.max(this.length,otherArray.length);for(let i=0;i<len;++i){out.push([this[i],otherArray[i]])}return out};Array.prototype.nextWrap=Array.prototype.nextWrap||function(item){const ix=this.indexOf(item);if(~ix){if(ix+1<this.length)return this[ix+1];else return this[0]}else return this.last()};Array.prototype.prevWrap=Array.prototype.prevWrap||function(item){const ix=this.indexOf(item);if(~ix){if(ix-1>=0)return this[ix-1];else return this.last()}else return this[0]};Array.prototype.findLast=Array.prototype.findLast||function(fn){for(let i=this.length-1;i>=0;--i)if(fn(this[i]))return this[i]};Array.prototype.findLastIndex=Array.prototype.findLastIndex||function(fn){for(let i=this.length-1;i>=0;--i)if(fn(this[i]))return i;return-1};Array.prototype.sum=Array.prototype.sum||function(){let tmp=0;const len=this.length;for(let i=0;i<len;++i)tmp+=this[i];return tmp};Array.prototype.mean=Array.prototype.mean||function(){return this.sum()/this.length};Array.prototype.meanAbsoluteDeviation=Array.prototype.meanAbsoluteDeviation||function(){const mean=this.mean();return(this.map((num=>Math.abs(num-mean)))||[]).mean()};function BookModeView(opts){opts=opts||{};const{hashKey:hashKey,$openBtn:$openBtn,$eleNoneVisible:$eleNoneVisible,pageTitle:pageTitle,popTblGetNumShown:popTblGetNumShown,isFlex:isFlex,state:state,stateKey:stateKey,isHideContentOnNoneShown:isHideContentOnNoneShown,isHideButtonCloseNone:isHideButtonCloseNone}=opts;if(hashKey&&stateKey)throw new Error;this.hashKey=hashKey;this.stateKey=stateKey;this.state=state;this.$openBtn=$openBtn;this.$eleNoneVisible=$eleNoneVisible;this.popTblGetNumShown=popTblGetNumShown;this.isHideContentOnNoneShown=isHideContentOnNoneShown;this.isHideButtonCloseNone=isHideButtonCloseNone;this.active=false;this._$body=null;this._$wrpBook=null;this._$wrpRenderedContent=null;this._$wrpNoneShown=null;this._doRenderContent=null;this.$openBtn.off("click").on("click",(()=>{if(this.stateKey){this.state[this.stateKey]=true}else{Hist.cleanSetHash(`${window.location.hash}${HASH_PART_SEP}${this.hashKey}${HASH_SUB_KV_SEP}true`)}}));this.close=()=>this._doHashTeardown();this._doHashTeardown=()=>{if(this.stateKey){this.state[this.stateKey]=false}else{Hist.cleanSetHash(window.location.hash.replace(`${this.hashKey}${HASH_SUB_KV_SEP}true`,""))}};this._renderContent=async($wrpContent,$dispName,$wrpControlsToPass)=>{this._$wrpRenderedContent=this._$wrpRenderedContent?this._$wrpRenderedContent.empty().append($wrpContent):$$`<div class="bkmv__scroller h-100 overflow-y-auto ${isFlex?"flex":""}">${this.isHideContentOnNoneShown?null:$wrpContent}</div>`;this._$wrpRenderedContent.appendTo(this._$wrpBook);const numShown=await this.popTblGetNumShown($wrpContent,$dispName,$wrpControlsToPass);if(numShown){if(this.isHideContentOnNoneShown)this._$wrpRenderedContent.append($wrpContent);if(this._$wrpNoneShown){this._$wrpNoneShown.detach()}}else{if(this.isHideContentOnNoneShown)$wrpContent.detach();if(!this._$wrpNoneShown){const $btnClose=$(`<button class="btn btn-default">Close</button>`).click((()=>this.close()));this._$wrpNoneShown=$$`<div class="w-100 flex-col flex-h-center no-shrink bkmv__footer mb-3">
					<div class="mb-2 flex-vh-center min-h-0">${this.$eleNoneVisible}</div>
					${this.isHideButtonCloseNone?null:$$`<div class="flex-vh-center">${$btnClose}</div>`}
				</div>`}this._$wrpNoneShown.appendTo(this.isHideContentOnNoneShown?this._$wrpRenderedContent:this._$wrpBook)}};this.pOpen=async()=>{if(this.active)return;this.active=true;document.title=`${pageTitle} - 5etools`;this._$body=$(`body`);this._$wrpBook=$(`<div class="bkmv"></div>`);this._$body.css("overflow","hidden");this._$body.addClass("bkmv-active");const $btnClose=$(`<span class="delete-icon glyphicon glyphicon-remove"></span>`).click((()=>this._doHashTeardown()));const $dispName=$(`<div></div>`);$$`<div class="bkmv__spacer-name split-v-center no-shrink">${$dispName}${$btnClose}</div>`.appendTo(this._$wrpBook);const $wrpControls=$(`<div class="w-100 flex-col bkmv__wrp-controls"></div>`).appendTo(this._$wrpBook);let $wrpControlsToPass=$wrpControls;if(opts.hasPrintColumns){$wrpControls.addClass("px-2 mt-2");const injectPrintCss=cols=>{$(`#bkmv__print-style`).remove();$(`<style media="print" id="bkmv__print-style">.bkmv__wrp { column-count: ${cols}; }</style>`).appendTo($(document.body))};const lastColumns=StorageUtil.syncGetForPage(BookModeView._BOOK_VIEW_COLUMNS_K);const $selColumns=$(`<select class="form-control input-sm">\n\t\t\t\t<option value="0">Two (book style)</option>\n\t\t\t\t<option value="1">One</option>\n\t\t\t</select>`).change((()=>{const val=Number($selColumns.val());if(val===0)injectPrintCss(2);else injectPrintCss(1);StorageUtil.syncSetForPage(BookModeView._BOOK_VIEW_COLUMNS_K,val)}));if(lastColumns!=null)$selColumns.val(lastColumns);$selColumns.change();$wrpControlsToPass=$$`<div class="w-100 flex">
				<div class="flex-vh-center"><div class="mr-2 no-wrap help-subtle" title="Applied when printing the page.">Print columns:</div>${$selColumns}</div>
			</div>`.appendTo($wrpControls)}const $wrpContent=$(`<div class="bkmv__wrp p-2"></div>`);await this._renderContent($wrpContent,$dispName,$wrpControlsToPass);this._pRenderContent=()=>this._renderContent($wrpContent,$dispName,$wrpControlsToPass);this._$body.append(this._$wrpBook)};this.teardown=()=>{if(this.active){if(this._$wrpRenderedContent)this._$wrpRenderedContent.detach();if(this._$wrpNoneShown)this._$wrpNoneShown.detach();this._$body.css("overflow","");this._$body.removeClass("bkmv-active");this._$wrpBook.remove();this.active=false;this._pRenderContent=null}};this.pHandleSub=sub=>{if(this.stateKey)return;const bookViewHash=sub.find((it=>it.startsWith(this.hashKey)));if(bookViewHash&&UrlUtil.unpackSubHash(bookViewHash)[this.hashKey][0]==="true")return this.pOpen();else this.teardown()}}BookModeView._BOOK_VIEW_COLUMNS_K="bookViewColumns";ExcludeUtil={isInitialised:false,_excludes:null,async pInitialise(){ExcludeUtil.pSave=MiscUtil.throttle(ExcludeUtil._pSave,50);try{ExcludeUtil._excludes=await StorageUtil.pGet(VeCt.STORAGE_EXCLUDES)||[];ExcludeUtil._excludes=ExcludeUtil._excludes.filter((it=>it.hash))}catch(e){JqueryUtil.doToast({content:"Error when loading content blacklist! Purged blacklist data. (See the log for more information.)",type:"danger"});try{await StorageUtil.pRemove(VeCt.STORAGE_EXCLUDES)}catch(e){setTimeout((()=>{throw e}))}ExcludeUtil._excludes=null;window.location.hash="";setTimeout((()=>{throw e}))}ExcludeUtil.isInitialised=true},getList(){return ExcludeUtil._excludes||[]},async pSetList(toSet){ExcludeUtil._excludes=toSet;await ExcludeUtil.pSave()},_excludeCount:0,isExcluded(hash,category,source,opts){if(!ExcludeUtil._excludes||!ExcludeUtil._excludes.length)return false;if(!source)throw new Error(`Entity had no source!`);opts=opts||{};source=source.source||source;const out=!!ExcludeUtil._excludes.find((row=>(row.source==="*"||row.source===source)&&(row.category==="*"||row.category===category)&&(row.hash==="*"||row.hash===hash)));if(out&&!opts.isNoCount)++ExcludeUtil._excludeCount;return out},checkShowAllExcluded(list,$pagecontent){if(!list.length&&ExcludeUtil._excludeCount||list.length>0&&list.length===ExcludeUtil._excludeCount){$pagecontent.html(`\n\t\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t\t\t<tr><td colspan="6" class="initial-message">(Content <a href="blacklist.html">blacklisted</a>)</td></tr>\n\t\t\t\t<tr><th class="border" colspan="6"></th></tr>\n\t\t\t`)}},addExclude(displayName,hash,category,source){if(!ExcludeUtil._excludes.find((row=>row.source===source&&row.category===category&&row.hash===hash))){ExcludeUtil._excludes.push({displayName:displayName,hash:hash,category:category,source:source});ExcludeUtil.pSave();return true}return false},removeExclude(hash,category,source){const ix=ExcludeUtil._excludes.findIndex((row=>row.source===source&&row.category===category&&row.hash===hash));if(~ix){ExcludeUtil._excludes.splice(ix,1);ExcludeUtil.pSave()}},async _pSave(){return StorageUtil.pSet(VeCt.STORAGE_EXCLUDES,ExcludeUtil._excludes)},async pSave(){},resetExcludes(){ExcludeUtil._excludes=[];ExcludeUtil.pSave()}};EncounterUtil={async pGetInitialState(){if(await EncounterUtil._pHasSavedStateLocal()){if(await EncounterUtil._hasSavedStateUrl()){return{type:"url",data:EncounterUtil._getSavedStateUrl()}}else{return{type:"local",data:await EncounterUtil._pGetSavedStateLocal()}}}else return null},_hasSavedStateUrl(){return window.location.hash.length&&Hist.getSubHash(EncounterUtil.SUB_HASH_PREFIX)!=null},_getSavedStateUrl(){let out=null;try{out=JSON.parse(decodeURIComponent(Hist.getSubHash(EncounterUtil.SUB_HASH_PREFIX)))}catch(e){setTimeout((()=>{throw e}))}Hist.setSubhash(EncounterUtil.SUB_HASH_PREFIX,null);return out},async _pHasSavedStateLocal(){return!!StorageUtil.pGet(VeCt.STORAGE_ENCOUNTER)},async _pGetSavedStateLocal(){try{return await StorageUtil.pGet(VeCt.STORAGE_ENCOUNTER)}catch(e){JqueryUtil.doToast({content:"Error when loading encounters! Purged encounter data. (See the log for more information.)",type:"danger"});await StorageUtil.pRemove(VeCt.STORAGE_ENCOUNTER);setTimeout((()=>{throw e}))}},async pDoSaveState(toSave){StorageUtil.pSet(VeCt.STORAGE_ENCOUNTER,toSave)},async pGetSavedState(){const saved=await StorageUtil.pGet(EncounterUtil.SAVED_ENCOUNTER_SAVE_LOCATION);return saved||{}},getEncounterName(encounter){if(encounter.l&&encounter.l.items&&encounter.l.items.length){const largestCount=encounter.l.items.sort(((a,b)=>SortUtil.ascSort(Number(b.c),Number(a.c))))[0];const name=(UrlUtil.decodeHash(largestCount.h)[0]||"(Unnamed)").toTitleCase();return`Encounter with ${name} ×${largestCount.c}`}else return"(Unnamed Encounter)"}};EncounterUtil.SUB_HASH_PREFIX="encounter";EncounterUtil.SAVED_ENCOUNTER_SAVE_LOCATION="ENCOUNTER_SAVED_STORAGE";ExtensionUtil={ACTIVE:false,_doSend(type,data){const detail=MiscUtil.copy({type:type,data:data});window.dispatchEvent(new CustomEvent("rivet.send",{detail:detail}))},async pDoSendStats(evt,ele){const $parent=$(ele).closest(`th.rnd-name`);const page=$parent.attr("data-page");const source=$parent.attr("data-source");const hash=$parent.attr("data-hash");const rawExtensionData=$parent.attr("data-extension");const extensionData=rawExtensionData?JSON.parse(rawExtensionData):null;if(page&&source&&hash){let toSend=await Renderer.hover.pCacheAndGet(page,source,hash);if(extensionData){switch(page){case UrlUtil.PG_BESTIARY:{if(extensionData._scaledCr)toSend=await ScaleCreature.scale(toSend,extensionData._scaledCr);else if(extensionData._scaledSummonLevel)toSend=await ScaleSummonCreature.scale(toSend,extensionData._scaledSummonLevel)}}}ExtensionUtil._doSend("entity",{page:page,entity:toSend,isTemp:!!evt.shiftKey})}},doSendRoll(data){ExtensionUtil._doSend("roll",data)}};if(typeof window!=="undefined")window.addEventListener("rivet.active",(()=>ExtensionUtil.ACTIVE=true));TokenUtil={handleStatblockScroll(event,ele){$(`#token_image`).toggle(ele.scrollTop<32).css({opacity:(32-ele.scrollTop)/32,top:-ele.scrollTop})}};VeLock=function(){this._lockMeta=null;this.pLock=async()=>{while(this._lockMeta)await this._lockMeta.lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));this._lockMeta={lock:lock,unlock:unlock}};this.unlock=()=>{const lockMeta=this._lockMeta;if(lockMeta){this._lockMeta=null;lockMeta.unlock()}}};BrewUtil._lockHandleBrewJson=new VeLock;if(!IS_VTT&&typeof window!=="undefined"){window.addEventListener("load",(()=>{$(document.body).on("click",`[data-packed-dice]`,(evt=>{Renderer.dice.pRollerClickUseData(evt,evt.currentTarget)})).on("click",`[data-rd-data-embed-header]`,(evt=>{Renderer.events.handleClick_dataEmbedHeader(evt,evt.currentTarget)}))}));if(location.origin===VeCt.LOC_ORIGIN_CANCER){const ivsCancer=[];window.addEventListener("load",(()=>{let isPadded=false;let anyFound=false;["div-gpt-ad-5etools35927","div-gpt-ad-5etools35930","div-gpt-ad-5etools35928","div-gpt-ad-5etools35929","div-gpt-ad-5etools36159","div-gpt-ad-5etools36834"].forEach((id=>{const iv=setInterval((()=>{const $wrp=$(`#${id}`);if(!$wrp.length)return;if(!$wrp.children().length)return;if($wrp.children()[0].tagName==="SCRIPT")return;const $tgt=$wrp.closest(".cancer__anchor").find(".cancer__disp-cancer");if($tgt.length){anyFound=true;$tgt.css({display:"flex"}).text("Advertisements");clearInterval(iv)}}),250);ivsCancer.push(iv)}));const ivPad=setInterval((()=>{if(!anyFound)return;if(isPadded)return;isPadded=true;$(`.view-col-group--cancer`).append(`<div class="w-100 no-shrink" style="height: 110px;"></div>`)}),300);ivsCancer.push(ivPad)}));setTimeout((()=>{const $wrp=$(`.cancer__wrp-leaderboard-inner`);const h=$wrp.outerHeight();$wrp.css({height:h});ivsCancer.forEach((iv=>clearInterval(iv)))}),5e3)}else{window.addEventListener("load",(()=>$(`.cancer__anchor`).remove()))}}_Donate={cycleLeader(ele){const modes=[{width:970,height:90},{width:970,height:250},{width:320,height:50},{width:728,height:90}];_Donate._cycleMode(ele,modes)},cycleSide(ele){const modes=[{width:300,height:250},{width:300,height:600}];_Donate._cycleMode(ele,modes)},_cycleMode(ele,modes){const $e=$(ele);const pos=$e.data("pos")||0;const mode=modes[pos];$e.css(mode);$e.text(`${mode.width}*${mode.height}`);$e.data("pos",(pos+1)%modes.length)}};;
"use strict";class Prx{static addHook(prop,hook){this.px._hooks[prop]=this.px._hooks[prop]||[];this.px._hooks[prop].push(hook)}static addHookAll(hook){this.px._hooksAll.push(hook)}static toString(){return JSON.stringify(this,((k,v)=>k==="px"?undefined:v))}static copy(){return JSON.parse(Prx.toString.bind(this)())}static get(toProxy){toProxy.px={addHook:Prx.addHook.bind(toProxy),addHookAll:Prx.addHookAll.bind(toProxy),toString:Prx.toString.bind(toProxy),copy:Prx.copy.bind(toProxy),_hooksAll:[],_hooks:{}};return new Proxy(toProxy,{set:(object,prop,value)=>{object[prop]=value;toProxy.px._hooksAll.forEach((hook=>hook(prop,value)));if(toProxy.px._hooks[prop])toProxy.px._hooks[prop].forEach((hook=>hook(prop,value)));return true},deleteProperty:(object,prop)=>{delete object[prop];toProxy.px._hooksAll.forEach((hook=>hook(prop,null)));if(toProxy.px._hooks[prop])toProxy.px._hooks[prop].forEach((hook=>hook(prop,null)));return true}})}}class ProxyBase{constructor(){this.__hooks={};this.__hooksAll={};this.__hooksTmp=null;this.__hooksAllTmp=null}_getProxy(hookProp,toProxy){return new Proxy(toProxy,{set:(object,prop,value)=>this._doProxySet(hookProp,object,prop,value),deleteProperty:(object,prop)=>{if(!(prop in object))return true;const prevValue=object[prop];delete object[prop];if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hook=>hook(prop,undefined,prevValue)));if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])this.__hooks[hookProp][prop].forEach((hook=>hook(prop,undefined,prevValue)));return true}})}_doProxySet(hookProp,object,prop,value){if(object[prop]===value)return true;const prevValue=object[prop];object[prop]=value;if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hook=>hook(prop,value,prevValue)));if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])this.__hooks[hookProp][prop].forEach((hook=>hook(prop,value,prevValue)));return true}async _pDoProxySet(hookProp,object,prop,value){if(object[prop]===value)return true;const prevValue=object[prop];object[prop]=value;if(this.__hooksAll[hookProp])for(const hook of this.__hooksAll[hookProp])await hook(prop,value,prevValue);if(this.__hooks[hookProp]&&this.__hooks[hookProp][prop])for(const hook of this.__hooks[hookProp][prop])await hook(prop,value,prevValue);return true}_addHook(hookProp,prop,hook){ProxyBase._addHook_to(this.__hooks,hookProp,prop,hook);if(this.__hooksTmp)ProxyBase._addHook_to(this.__hooksTmp,hookProp,prop,hook)}static _addHook_to(obj,hookProp,prop,hook){((obj[hookProp]=obj[hookProp]||{})[prop]=obj[hookProp][prop]||[]).push(hook)}_addHookAll(hookProp,hook){ProxyBase._addHookAll_to(this.__hooksAll,hookProp,hook);if(this.__hooksAllTmp)ProxyBase._addHookAll_to(this.__hooksAllTmp,hookProp,hook)}static _addHookAll_to(obj,hookProp,hook){(obj[hookProp]=obj[hookProp]||[]).push(hook)}_removeHook(hookProp,prop,hook){ProxyBase._removeHook_from(this.__hooks,hookProp,prop,hook);if(this.__hooksTmp)ProxyBase._removeHook_from(this.__hooksTmp,hookProp,prop,hook)}static _removeHook_from(obj,hookProp,prop,hook){if(obj[hookProp]&&obj[hookProp][prop]){const ix=obj[hookProp][prop].findIndex((hk=>hk===hook));if(~ix)obj[hookProp][prop].splice(ix,1)}}_removeHooks(hookProp,prop){if(this.__hooks[hookProp])delete this.__hooks[hookProp][prop];if(this.__hooksTmp&&this.__hooksTmp[hookProp])delete this.__hooksTmp[hookProp][prop]}_removeHookAll(hookProp,hook){ProxyBase._removeHookAll_from(this.__hooksAll,hookProp,hook);if(this.__hooksAllTmp)ProxyBase._removeHook_from(this.__hooksAllTmp,hookProp,hook)}static _removeHookAll_from(obj,hookProp,hook){if(obj[hookProp]){const ix=obj[hookProp].findIndex((hk=>hk===hook));if(~ix)obj[hookProp].splice(ix,1)}}_resetHooks(hookProp){if(hookProp!==undefined)delete this.__hooks[hookProp];else Object.keys(this.__hooks).forEach((prop=>delete this.__hooks[prop]))}_resetHooksAll(hookProp){if(hookProp!==undefined)delete this.__hooksAll[hookProp];else Object.keys(this.__hooksAll).forEach((prop=>delete this.__hooksAll[prop]))}_saveHookCopiesTo(obj){this.__hooksTmp=obj}_saveHookAllCopiesTo(obj){this.__hooksAllTmp=obj}_proxyAssign(hookProp,proxyProp,underProp,toObj,isOverwrite){const oldKeys=Object.keys(this[proxyProp]);const nuKeys=new Set(Object.keys(toObj));const dirtyKeys=new Set;if(isOverwrite){oldKeys.forEach((k=>{if(!nuKeys.has(k)&&this[underProp]!==undefined){delete this[underProp][k];dirtyKeys.add(k)}}))}nuKeys.forEach((k=>{if(!CollectionUtil.deepEquals(this[underProp][k],toObj[k])){this[underProp][k]=toObj[k];dirtyKeys.add(k)}}));dirtyKeys.forEach((k=>{if(this.__hooksAll[hookProp])this.__hooksAll[hookProp].forEach((hk=>hk(k,this[underProp][k])));if(this.__hooks[hookProp]&&this.__hooks[hookProp][k])this.__hooks[hookProp][k].forEach((hk=>hk(k,this[underProp][k])))}))}_proxyAssignSimple(hookProp,toObj,isOverwrite){return this._proxyAssign(hookProp,`_${hookProp}`,`__${hookProp}`,toObj,isOverwrite)}}class UiUtil{static strToInt(string,fallbackEmpty=0,opts){return UiUtil._strToNumber(string,fallbackEmpty,opts,true)}static strToNumber(string,fallbackEmpty=0,opts){return UiUtil._strToNumber(string,fallbackEmpty,opts,false)}static _strToNumber(string,fallbackEmpty=0,opts,isInt){opts=opts||{};let out;string=string.trim();if(!string)out=fallbackEmpty;else{const num=UiUtil._parseStrAsNumber(string,isInt);out=isNaN(num)||!isFinite(num)?opts.fallbackOnNaN!==undefined?opts.fallbackOnNaN:0:num}if(opts.max!=null)out=Math.min(out,opts.max);if(opts.min!=null)out=Math.max(out,opts.min);return out}static strToBool(string,fallbackEmpty=null,opts){opts=opts||{};if(!string)return fallbackEmpty;string=string.trim().toLowerCase();if(!string)return fallbackEmpty;return string==="true"?true:string==="false"?false:opts.fallbackOnNaB}static intToBonus(int){return`${int>=0?"+":int<0?"‒":""}${Math.abs(int)}`}static getEntriesAsText(entryArray){if(!entryArray||!entryArray.length)return"";const lines=JSON.stringify(entryArray,null,2).replace(/^\s*\[/,"").replace(/]\s*$/,"").split("\n").filter((it=>it.trim())).map((it=>{const trim=it.replace(/^\s\s/,"");const mQuotes=/^"(.*?)",?$/.exec(trim);if(mQuotes)return mQuotes[1];else return`  ${trim}`}));let out="";const len=lines.length;for(let i=0;i<len;++i){out+=lines[i];if(i<len-1){out+="\n";if(!lines[i].startsWith("  "))out+="\n"}}return out}static getTextAsEntries(text){try{const lines=[];text.split("\n").filter((it=>it.trim())).forEach((it=>{if(/^\s/.exec(it))lines.push(it);else lines.push(`"${it.replace(/"/g,`\\"`)}",`)}));if(lines.length)lines[lines.length-1]=lines.last().replace(/^(.*?),?$/,"$1");return JSON.parse(`[${lines.join("")}]`)}catch(e){const lines=text.split("\n").filter((it=>it.trim()));const slice=lines.join(" \\ ").substring(0,30);JqueryUtil.doToast({content:`Could not parse entries! Error was: ${e.message}<br>Text was: ${slice}${slice.length===30?"...":""}`,type:"danger"});return lines}}static getShowModal(opts){opts=opts||{};UiUtil._initModalEscapeHandler();UiUtil._initModalMouseupHandlers();if(document.activeElement)document.activeElement.blur();const pHandleCloseClick=async(isDataEntered,...args)=>{if(opts.cbClose)await opts.cbClose(isDataEntered,...args);if(opts.isIndestructible)wrpOverlay.detach();else wrpOverlay.remove();doTeardown()};const doTeardown=()=>{UiUtil._popFromModalStack(modalStackMeta);if(!UiUtil._MODAL_STACK.length)document.body.classList.remove(`ui-modal__body-active`)};const doOpen=()=>{wrpOverlay.appendTo(document.body);document.body.classList.add(`ui-modal__body-active`)};const wrpOverlay=e_({tag:"div",clazz:"ui-modal__overlay"});if(opts.zIndex!=null)wrpOverlay.style.zIndex=`${opts.zIndex}`;if(opts.overlayColor!=null)wrpOverlay.style.backgroundColor=`${opts.overlayColor}`;const overlayBlind=opts.isFullscreenModal?e_({tag:"div",clazz:`ui-modal__overlay-blind w-100 h-100 flex-col`}).appendTo(wrpOverlay):null;const wrpScroller=e_({tag:"div",clazz:`ui-modal__scroller flex-col`});const modalWindowClasses=[opts.isWidth100?`w-100`:"",opts.isHeight100?"h-100":"",opts.isUncappedHeight?"ui-modal__inner--uncap-height":"",opts.isUncappedWidth?"ui-modal__inner--uncap-width":"",opts.isMinHeight0?`ui-modal__inner--no-min-height`:"",opts.isMaxWidth640p?`ui-modal__inner--max-width-640p`:"",opts.isFullscreenModal?`ui-modal__inner--mode-fullscreen my-0 pt-0`:"",opts.hasFooter?`pb-0`:""].filter(Boolean);const btnCloseModal=opts.isFullscreenModal?e_({tag:"button",clazz:`btn btn-danger btn-xs`,html:`<span class="glyphicon glyphicon-remove></span>`,click:pHandleCloseClick(false)}):null;const modalFooter=opts.hasFooter?e_({tag:"div",clazz:`"no-shrink w-100 flex-col ui-modal__footer ${opts.isFullscreenModal?`ui-modal__footer--fullscreen mt-1`:""}`}):null;const modal=e_({tag:"div",clazz:`ui-modal__inner flex-col ${modalWindowClasses.join(" ")}`,children:[!opts.isEmpty&&opts.title?e_({tag:"div",clazz:`split-v-center no-shrink ${opts.isHeaderBorder?`ui-modal__header--border`:""} ${opts.isFullscreenModal?`ui-modal__header--fullscreen mb-1`:""}`,children:[opts.title?e_({tag:"h4",clazz:`my-2`,html:opts.title.qq()}):null,opts.$titleSplit?opts.$titleSplit[0]:null,btnCloseModal].filter(Boolean)}):null,!opts.isEmpty?wrpScroller:null,modalFooter].filter(Boolean)}).appendTo(opts.isFullscreenModal?overlayBlind:wrpOverlay);wrpOverlay.addEventListener("mouseup",(evt=>{if(evt.target!==wrpOverlay)return;if(evt.target!==UiUtil._MODAL_LAST_MOUSEDOWN)return;if(opts.isPermanent)return;evt.stopPropagation();evt.preventDefault();return pHandleCloseClick(false)}));if(!opts.isClosed)doOpen();const modalStackMeta={isPermanent:opts.isPermanent,pHandleCloseClick:pHandleCloseClick,doTeardown:doTeardown};if(!opts.isClosed)UiUtil._pushToModalStack(modalStackMeta);const out={$modal:$(modal),$modalInner:$(wrpScroller),$modalFooter:$(modalFooter),doClose:pHandleCloseClick,doTeardown:doTeardown};if(opts.isIndestructible||opts.isClosed){out.doOpen=()=>{UiUtil._pushToModalStack(modalStackMeta);doOpen()}}return out}static _pushToModalStack(modalStackMeta){if(!UiUtil._MODAL_STACK.includes(modalStackMeta)){UiUtil._MODAL_STACK.push(modalStackMeta)}}static _popFromModalStack(modalStackMeta){const ixStack=UiUtil._MODAL_STACK.indexOf(modalStackMeta);if(~ixStack)UiUtil._MODAL_STACK.splice(ixStack,1)}static _initModalEscapeHandler(){if(UiUtil._MODAL_STACK)return;UiUtil._MODAL_STACK=[];document.addEventListener("keydown",(evt=>{if(evt.which!==27)return;if(!UiUtil._MODAL_STACK.length)return;if(EventUtil.isInInput(evt))return;const outerModalMeta=UiUtil._MODAL_STACK.last();if(!outerModalMeta)return;evt.stopPropagation();if(!outerModalMeta.isPermanent)return outerModalMeta.pHandleCloseClick(false)}))}static _initModalMouseupHandlers(){document.addEventListener("mousedown",(evt=>{UiUtil._MODAL_LAST_MOUSEDOWN=evt.target}))}static addModalSep($modalInner){$modalInner.append(`<hr class="ui-modal__row-sep">`)}static $getAddModalRow($modalInner,tag="div"){return $(`<${tag} class="ui-modal__row"></${tag}>`).appendTo($modalInner)}static $getAddModalRowHeader($modalInner,headerText,opts){opts=opts||{};const $row=UiUtil.$getAddModalRow($modalInner,"h5").addClass("bold");if(opts.$eleRhs)$$`<div class="split flex-v-center w-100 pr-1"><span>${headerText}</span>${opts.$eleRhs}</div>`.appendTo($row);else $row.text(headerText);if(opts.helpText)$row.title(opts.helpText);return $row}static $getAddModalRowCb($modalInner,labelText,objectWithProp,propName,helpText){const $row=UiUtil.$getAddModalRow($modalInner,"label").addClass(`ui-modal__row--cb`);if(helpText)$row.title(helpText);$row.append(`<span>${labelText}</span>`);const $cb=$(`<input type="checkbox">`).appendTo($row).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).prop("checked",objectWithProp[propName]).on("change",(()=>objectWithProp[propName]=$cb.prop("checked")));return $cb}static $getAddModalRowSel($modalInner,labelText,objectWithProp,propName,values,opts){opts=opts||{};const $row=UiUtil.$getAddModalRow($modalInner,"label").addClass(`ui-modal__row--sel`);if(opts.helpText)$row.title(opts.helpText);$row.append(`<span>${labelText}</span>`);const $sel=$(`<select class="form-control input-xs w-30">`).appendTo($row);values.forEach(((val,i)=>$(`<option value="${i}"></option>`).text(opts.fnDisplay?opts.fnDisplay(val):val).appendTo($sel)));const ix=values.indexOf(objectWithProp[propName]);$sel.val(`${~ix?ix:0}`).change((()=>objectWithProp[propName]=values[$sel.val()]));return $sel}static _parseStrAsNumber(str,isInt){const wrpTree=Renderer.dice.lang.getTree3(str);if(!wrpTree)return NaN;const out=wrpTree.tree.evl({});if(!isNaN(out)&&isInt)return Math.round(out);return out}static bindTypingEnd({$ipt:$ipt,fnKeyup:fnKeyup,fnKeypress:fnKeypress,fnKeydown:fnKeydown,fnClick:fnClick}={}){let timerTyping;$ipt.on("keyup search paste",(evt=>{clearTimeout(timerTyping);timerTyping=setTimeout((()=>{fnKeyup(evt)}),UiUtil.TYPE_TIMEOUT_MS)})).on("keypress",(e=>{if(fnKeypress)fnKeypress(e)})).on("keydown",(evt=>{if(fnKeydown)fnKeydown(evt);clearTimeout(timerTyping)})).on("click",(()=>{if(fnClick)fnClick()}))}static async pDoForceFocus(ele,{timeout:timeout=250}={}){if(!ele)return;ele.focus();const forceFocusStart=Date.now();while(Date.now()<forceFocusStart+timeout&&document.activeElement!==ele){await MiscUtil.pDelay(33);ele.focus()}}}UiUtil.SEARCH_RESULTS_CAP=75;UiUtil.TYPE_TIMEOUT_MS=100;UiUtil._MODAL_STACK=null;UiUtil._MODAL_LAST_MOUSEDOWN=null;class ListUiUtil{static handleSelectClick(list,item,evt,opts){opts=opts||{};evt.preventDefault();evt.stopPropagation();const cb=this._getCb(item,opts);if(cb.disabled)return true;if(evt&&evt.shiftKey&&list.__firstListSelection){if(list.__lastListSelection===item){this.setCheckbox(item,{...opts,toVal:!cb.checked})}else if(list.__firstListSelection===item&&list.__lastListSelection){const ix1=list.visibleItems.indexOf(list.__firstListSelection);const ix2=list.visibleItems.indexOf(list.__lastListSelection);const[ixStart,ixEnd]=[ix1,ix2].sort(SortUtil.ascSort);for(let i=ixStart;i<=ixEnd;++i){const it=list.visibleItems[i];this.setCheckbox(it,{...opts,toVal:false})}this.setCheckbox(item,opts)}else{const ix1=list.visibleItems.indexOf(list.__firstListSelection);const ix2=list.visibleItems.indexOf(item);const ix2Prev=list.__lastListSelection?list.visibleItems.indexOf(list.__lastListSelection):null;const[ixStart,ixEnd]=[ix1,ix2].sort(SortUtil.ascSort);for(let i=ixStart;i<=ixEnd;++i){const it=list.visibleItems[i];this.setCheckbox(it,opts)}if(ix2Prev!=null){if(ix2Prev>ixEnd){const nxtOpts={...opts,toVal:false};for(let i=ixEnd+1;i<=ix2Prev;++i){const it=list.visibleItems[i];this.setCheckbox(it,nxtOpts)}}else if(ix2Prev<ixStart){const nxtOpts={...opts,toVal:false};for(let i=ix2Prev;i<ixStart;++i){const it=list.visibleItems[i];this.setCheckbox(it,nxtOpts)}}}}list.__lastListSelection=item}else{const cbMaster=this._getCb(item,opts);if(cbMaster){cbMaster.checked=!cbMaster.checked;if(opts.fnOnSelectionChange)opts.fnOnSelectionChange(item,cbMaster.checked);if(!opts.isNoHighlightSelection){if(cbMaster.checked)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}}else{if(!opts.isNoHighlightSelection){item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}}list.__firstListSelection=item;list.__lastListSelection=null}}static handleSelectClickRadio(list,item,evt){evt.preventDefault();evt.stopPropagation();list.items.forEach((it=>{if(it===item){it.data.cbSel.checked=true;it.ele.classList.add("list-multi-selected")}else{it.data.cbSel.checked=false;it.ele.classList.remove("list-multi-selected")}}))}static _getCb(item,opts){return opts.fnGetCb?opts.fnGetCb(item):item.data.cbSel}static setCheckbox(item,{fnGetCb:fnGetCb,fnOnSelectionChange:fnOnSelectionChange,isNoHighlightSelection:isNoHighlightSelection,toVal:toVal=true}={}){const cbSlave=this._getCb(item,{fnGetCb:fnGetCb,fnOnSelectionChange:fnOnSelectionChange,isNoHighlightSelection:isNoHighlightSelection});if(cbSlave){cbSlave.checked=toVal;if(fnOnSelectionChange)fnOnSelectionChange(item,toVal)}if(isNoHighlightSelection)return;if(toVal)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}static bindSelectAllCheckbox($cbAll,list){$cbAll.change((()=>{const isChecked=$cbAll.prop("checked");this.setCheckboxes({isChecked:isChecked,list:list})}))}static setCheckboxes({isChecked:isChecked,isIncludeHidden:isIncludeHidden,list:list}){(isIncludeHidden?list.items:list.visibleItems).forEach((item=>{if(item.data.cbSel)item.data.cbSel.checked=isChecked;if(isChecked)item.ele instanceof $?item.ele.addClass("list-multi-selected"):item.ele.classList.add("list-multi-selected");else item.ele instanceof $?item.ele.removeClass("list-multi-selected"):item.ele.classList.remove("list-multi-selected")}))}static bindPreviewButton(page,allData,item,btnShowHidePreview){btnShowHidePreview.addEventListener("click",(evt=>{const entity=allData[item.ix];const elePreviewWrp=this.getOrAddListItemPreviewLazy(item);this.handleClickBtnShowHideListPreview(evt,page,entity,btnShowHidePreview,elePreviewWrp)}))}static handleClickBtnShowHideListPreview(evt,page,entity,btnShowHidePreview,elePreviewWrp,nxtText=null){evt.stopPropagation();nxtText=nxtText??btnShowHidePreview.innerHTML.trim()===this.HTML_GLYPHICON_EXPAND?this.HTML_GLYPHICON_CONTRACT:this.HTML_GLYPHICON_EXPAND;elePreviewWrp.classList.toggle("ve-hidden",nxtText===this.HTML_GLYPHICON_EXPAND);btnShowHidePreview.innerHTML=nxtText;const elePreviewWrpInner=elePreviewWrp.lastElementChild;if(elePreviewWrpInner.innerHTML)return;elePreviewWrpInner.addEventListener("click",(evt=>{evt.stopPropagation()}));$(elePreviewWrpInner).empty();Renderer.hover.$getHoverContent_stats(page,entity).appendTo(elePreviewWrpInner)}static getOrAddListItemPreviewLazy(item){let elePreviewWrp;if(item.ele.children.length===1){elePreviewWrp=e_({ag:"div",clazz:"ve-hidden flex",children:[e_({tag:"div",clazz:"col-0-5"}),e_({tag:"div",clazz:"col-11-5 ui-list__wrp-preview py-2 pr-2"})]}).appendTo(item.ele)}else elePreviewWrp=item.ele.lastElementChild;return elePreviewWrp}static bindPreviewAllButton($btnAll,list){$btnAll.click((async()=>{const nxtHtml=$btnAll.html()===ListUiUtil.HTML_GLYPHICON_EXPAND?ListUiUtil.HTML_GLYPHICON_CONTRACT:ListUiUtil.HTML_GLYPHICON_EXPAND;if(nxtHtml===ListUiUtil.HTML_GLYPHICON_CONTRACT&&list.visibleItems.length>500){const isSure=await InputUiUtil.pGetUserBoolean({title:"Are You Sure?",htmlDescription:`You are about to expand ${list.visibleItems.length} rows. This may seriously degrade performance.<br>Are you sure you want to continue?`});if(!isSure)return}$btnAll.html(nxtHtml);list.visibleItems.forEach((listItem=>{if(listItem.data.btnShowHidePreview.innerHTML!==nxtHtml)listItem.data.btnShowHidePreview.click()}))}))}}ListUiUtil.HTML_GLYPHICON_EXPAND=`[+]`;ListUiUtil.HTML_GLYPHICON_CONTRACT=`[‒]`;class ProfUiUtil{static getProfCycler(state=0,opts){opts=opts||{};const STATES=opts.isSimple?Object.keys(ProfUiUtil.PROF_TO_FULL).slice(0,2):Object.keys(ProfUiUtil.PROF_TO_FULL);const NUM_STATES=Object.keys(STATES).length;state=Number(state)||0;if(state>=NUM_STATES)state=NUM_STATES-1;else if(state<0)state=0;const $btnCycle=$(`<button class="ui-prof__btn-cycle"></button>`).click((()=>{$btnCycle.attr("data-state",++state>=NUM_STATES?state=0:state).title(ProfUiUtil.PROF_TO_FULL[state].name).trigger("change")})).contextmenu((evt=>{evt.preventDefault();$btnCycle.attr("data-state",--state<0?state=NUM_STATES-1:state).title(ProfUiUtil.PROF_TO_FULL[state].name).trigger("change")}));const setState=nuState=>{state=nuState;if(state>NUM_STATES)state=0;else if(state<0)state=NUM_STATES-1;$btnCycle.attr("data-state",state).title(ProfUiUtil.PROF_TO_FULL[state].name)};return{$ele:$btnCycle,setState:setState,getState:()=>state}}}ProfUiUtil.PROF_TO_FULL={0:{name:"No proficiency",mult:0},1:{name:"Proficiency",mult:1},2:{name:"Expertise",mult:2},3:{name:"Half proficiency",mult:.5}};class TabUiUtilBase{static decorate(obj){obj.__tabState={};obj.__getTabProps=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}){return{_propProxy:`_${propProxy}`,__propProxy:`__${propProxy}`,propActive:`ixActiveTab__${tabGroup}`}};obj._renderTabs=function(tabMetas,{$parent:$parent,propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP,cbTabChange:cbTabChange}={}){if(!tabMetas.length)throw new Error(`One or more tab meta must be specified!`);obj._resetTabs({tabGroup:tabGroup});const isSingleTab=tabMetas.length===1;const{propActive:propActive,_propProxy:_propProxy,__propProxy:__propProxy}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});this[__propProxy][propActive]=this[__propProxy][propActive]||0;const $dispTabTitle=obj.__$getDispTabTitle({isSingleTab:isSingleTab});const renderTabMetas_standard=(it,i)=>{const $btnTab=obj.__$getBtnTab({isSingleTab:isSingleTab,tabMeta:it,_propProxy:_propProxy,propActive:propActive,ixTab:i});const $wrpTab=obj.__$getWrpTab({tabMeta:it,ixTab:i});return{...it,ix:i,$btnTab:$btnTab,$wrpTab:$wrpTab}};const tabMetasOut=tabMetas.map(((it,i)=>{if(it.type)return obj.__renderTypedTabMeta({tabMeta:it,ixTab:i});return renderTabMetas_standard(it,i)})).filter(Boolean);if($parent){$$`<div class="flex-col w-100 h-100">
					${$dispTabTitle}
					<div class="flex w-100 h-100 min-h-0">
						<div class="flex-col h-100 pt-2">${tabMetasOut.map((it=>it.$btnTab))}</div>
						<div class="flex-col w-100 h-100 min-w-0">${tabMetasOut.map((it=>it.$wrpTab)).filter(Boolean)}</div>
					</div>
				</div>`.appendTo($parent)}const hkActiveTab=()=>{tabMetasOut.forEach((it=>{if(it.type)return;const isActive=it.ix===this[_propProxy][propActive];if(isActive&&$dispTabTitle)$dispTabTitle.text(isSingleTab?"":it.name);if(it.$btnTab)it.$btnTab.toggleClass("active",isActive);it.$wrpTab.toggleVe(isActive)}));if(cbTabChange)cbTabChange()};this._addHook(propProxy,propActive,hkActiveTab);hkActiveTab();obj.__tabState[tabGroup]={fnReset:()=>{this._removeHook(propProxy,propActive,hkActiveTab)},tabMetasOut:tabMetasOut};return tabMetasOut};obj._resetTabs=function({tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){if(!obj.__tabState[tabGroup])return;obj.__tabState[tabGroup].fnReset();delete obj.__tabState[tabGroup]};obj._hasPrevTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){return obj.__hasTab({propProxy:propProxy,tabGroup:tabGroup,offset:-1})};obj._hasNextTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){return obj.__hasTab({propProxy:propProxy,tabGroup:tabGroup,offset:1})};obj.__hasTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP,offset:offset}){const{propActive:propActive,_propProxy:_propProxy}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});const ixActive=obj[_propProxy][propActive];return!!(obj.__tabState[tabGroup]?.tabMetasOut&&obj.__tabState[tabGroup]?.tabMetasOut[ixActive+offset])};obj._doSwitchToPrevTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){return obj.__doSwitchToTab({propProxy:propProxy,tabGroup:tabGroup,offset:-1})};obj._doSwitchToNextTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){return obj.__doSwitchToTab({propProxy:propProxy,tabGroup:tabGroup,offset:1})};obj.__doSwitchToTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP,offset:offset}){if(!obj.__hasTab({propProxy:propProxy,tabGroup:tabGroup,offset:offset}))return;const{propActive:propActive,_propProxy:_propProxy}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});obj[_propProxy][propActive]=obj[_propProxy][propActive]+offset};obj._addHookActiveTab=function(hook,{propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){const{propActive:propActive}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});this._addHook(propProxy,propActive,hook)};obj._getIxActiveTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP}={}){const{propActive:propActive,_propProxy:_propProxy}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});return obj[_propProxy][propActive]};obj._setIxActiveTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP,ixActiveTab:ixActiveTab}={}){const{propActive:propActive,_propProxy:_propProxy}=obj.__getTabProps({propProxy:propProxy,tabGroup:tabGroup});obj[_propProxy][propActive]=ixActiveTab};obj._setActiveTab=function({propProxy:propProxy=TabUiUtilBase._DEFAULT_PROP_PROXY,tabGroup:tabGroup=TabUiUtilBase._DEFAULT_TAB_GROUP,tab:tab}){const tabState=obj.__tabState[tabGroup];const ix=tabState.tabMetasOut.indexOf(tab);obj._setIxActiveTab({propProxy:propProxy,tabGroup:tabGroup,ixActiveTab:ix})};obj.__$getBtnTab=function(){throw new Error("Unimplemented!")};obj.__$getWrpTab=function(){throw new Error("Unimplemented!")};obj.__renderTypedTabMeta=function(){throw new Error("Unimplemented!")};obj.__$getDispTabTitle=function(){throw new Error("Unimplemented!")}}}TabUiUtilBase._DEFAULT_TAB_GROUP="_default";TabUiUtilBase._DEFAULT_PROP_PROXY="meta";TabUiUtilBase.TabMeta=class{constructor({name:name,icon:icon=null,type:type=null,buttons:buttons=null}={}){this.name=name;this.icon=icon;this.type=type;this.buttons=buttons}};class TabUiUtil extends TabUiUtilBase{static decorate(obj){super.decorate(obj);obj.__$getBtnTab=function({tabMeta:tabMeta,_propProxy:_propProxy,propActive:propActive,ixTab:ixTab}){return $(`<button class="btn btn-default ui-tab__btn-tab-head">${tabMeta.name.qq()}</button>`).click((()=>obj[_propProxy][propActive]=ixTab))};obj.__$getWrpTab=function({tabMeta:tabMeta}){return $(`<div class="ui-tab__wrp-tab-body ve-hidden ${tabMeta.hasBorder?"ui-tab__wrp-tab-body--border":""} ${tabMeta.hasBackground?"ui-tab__wrp-tab-body--background":""}"></div>`)};obj.__renderTypedTabMeta=function({tabMeta:tabMeta,ixTab:ixTab}){switch(tabMeta.type){default:throw new Error(`Unhandled tab type "${tabMeta.type}"`)}};obj.__$getDispTabTitle=function(){return null}}}TabUiUtil.TabMeta=class extends TabUiUtilBase.TabMeta{constructor(opts){super(opts);this.hasBorder=opts.hasBorder;this.hasBackground=opts.hasBackground}};class TabUiUtilSide extends TabUiUtilBase{static decorate(obj){super.decorate(obj);obj.__$getBtnTab=function({isSingleTab:isSingleTab,tabMeta:tabMeta,_propProxy:_propProxy,propActive:propActive,ixTab:ixTab}){return isSingleTab?null:$(`<button class="btn btn-default btn-sm ui-tab-side__btn-tab mb-2 br-0 btr-0 bbr-0 text-left flex-v-center" title="${tabMeta.name.qq()}"><div class="${tabMeta.icon} ui-tab-side__icon-tab mr-2 mobile-ish__mr-0 text-center"></div><div class="mobile-ish__hidden">${tabMeta.name.qq()}</div></button>`).click((()=>this[_propProxy][propActive]=ixTab))};obj.__$getWrpTab=function(){return $(`<div class="flex-col w-100 min-h-100 h-100 ui-tab-side__wrp-tab px-3 py-2 overflow-y-auto"></div>`)};obj.__renderTypedTabMeta=function({tabMeta:tabMeta,ixTab:ixTab}){switch(tabMeta.type){case"buttons":return obj.__renderTypedTabMeta_buttons({tabMeta:tabMeta,ixTab:ixTab});default:throw new Error(`Unhandled tab type "${tabMeta.type}"`)}};obj.__renderTypedTabMeta_buttons=function({tabMeta:tabMeta,ixTab:ixTab}){const $btns=tabMeta.buttons.map(((meta,j)=>{const $btn=$(`<button class="btn btn-primary btn-sm" ${meta.title?`title="${meta.title.qq()}"`:""}>${meta.html}</button>`).click((evt=>meta.pFnClick(evt,$btn)));if(j===tabMeta.buttons.length-1)$btn.addClass(`br-0 btr-0 bbr-0`);return $btn}));const $btnTab=$$`<div class="btn-group flex-v-center flex-h-right mb-2">${$btns}</div>`;return{...tabMeta,ix:ixTab,$btnTab:$btnTab}};obj.__$getDispTabTitle=function({isSingleTab:isSingleTab}){return $(`<div class="ui-tab-side__disp-active-tab-name ${isSingleTab?`ui-tab-side__disp-active-tab-name--single`:""} bold"></div>`)}}}class SearchUiUtil{static async pDoGlobalInit(){elasticlunr.clearStopWords();await Renderer.item.populatePropertyAndTypeReference()}static _isNoHoverCat(cat){return SearchUiUtil.NO_HOVER_CATEGORIES.has(cat)}static async pGetContentIndices(options){options=options||{};const availContent={};const data=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index.json`));const additionalData={};if(options.additionalIndices){await Promise.all(options.additionalIndices.map((async add=>{additionalData[add]=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index-${add}.json`));const maxId=additionalData[add].last().id;const brewIndex=await BrewUtil.pGetAdditionalSearchIndices(maxId,add);if(brewIndex.length)additionalData[add]=additionalData[add].concat(brewIndex)})))}const alternateData={};if(options.alternateIndices){await Promise.all(options.alternateIndices.map((async alt=>{alternateData[alt]=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index-alt-${alt}.json`));const maxId=alternateData[alt].last().id;const brewIndex=await BrewUtil.pGetAlternateSearchIndices(maxId,alt);if(brewIndex.length)alternateData[alt]=alternateData[alt].concat(brewIndex)})))}const fromDeepIndex=d=>d.d;availContent.ALL=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(availContent.ALL);let ixMax=0;const initIndexForFullCat=doc=>{if(!availContent[doc.cf]){availContent[doc.cf]=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(availContent[doc.cf])}};const handleDataItem=(d,isAlternate)=>{if(SearchUiUtil._isNoHoverCat(d.c)||fromDeepIndex(d))return;d.cf=d.c===Parser.CAT_ID_CREATURE?"Creature":Parser.pageCategoryToFull(d.c);if(isAlternate)d.cf=`alt_${d.cf}`;initIndexForFullCat(d);if(!isAlternate)availContent.ALL.addDoc(d);availContent[d.cf].addDoc(d);ixMax=Math.max(ixMax,d.id)};data.forEach((d=>handleDataItem(d)));Object.values(additionalData).forEach((arr=>arr.forEach((d=>handleDataItem(d)))));Object.values(alternateData).forEach((arr=>arr.forEach((d=>handleDataItem(d,true)))));Omnisearch.highestId=Math.max(ixMax,Omnisearch.highestId);const brewIndex=await BrewUtil.pGetSearchIndex();brewIndex.forEach((d=>{if(SearchUiUtil._isNoHoverCat(d.c)||fromDeepIndex(d))return;d.cf=Parser.pageCategoryToFull(d.c);d.cf=d.c===Parser.CAT_ID_CREATURE?"Creature":Parser.pageCategoryToFull(d.c);initIndexForFullCat(d);availContent.ALL.addDoc(d);availContent[d.cf].addDoc(d)}));return availContent}}SearchUiUtil.NO_HOVER_CATEGORIES=new Set([Parser.CAT_ID_ADVENTURE,Parser.CAT_ID_BOOK,Parser.CAT_ID_QUICKREF,Parser.CAT_ID_PAGE,Parser.CAT_ID_LEGENDARY_GROUP]);class SearchWidget{static getSearchNoResults(){return`<div class="ui-search__message"><i>No results.</i></div>`}static getSearchLoading(){return`<div class="ui-search__message"><i>•••</i></div>`}static getSearchEnter(){return`<div class="ui-search__message"><i>Enter a search.</i></div>`}static bindAutoSearch($iptSearch,opts){UiUtil.bindTypingEnd({$ipt:$iptSearch,fnKeyup:()=>{opts.fnSearch&&opts.fnSearch()},fnKeypress:evt=>{if(evt.which===13){opts.flags.doClickFirst=true;opts.fnSearch&&opts.fnSearch()}},fnKeydown:evt=>{if(opts.flags.isWait){opts.flags.isWait=false;opts.fnShowWait&&opts.fnShowWait()}else{switch(evt.which){case 40:{if(opts.$ptrRows&&opts.$ptrRows._[0]){evt.preventDefault();opts.$ptrRows._[0].focus()}break}case 13:{if(opts.$ptrRows&&opts.$ptrRows._[0]){evt.preventDefault();opts.$ptrRows._[0].click()}break}}}},fnClick:()=>{if(opts.fnSearch&&$iptSearch.val()&&$iptSearch.val().trim().length)opts.fnSearch()}})}static bindRowHandlers({result:result,$row:$row,$ptrRows:$ptrRows,fnHandleClick:fnHandleClick}){return $row.keydown((evt=>{switch(evt.which){case 13:{return fnHandleClick(result)}case 38:{evt.preventDefault();const ixRow=$ptrRows._.indexOf($row);const $prev=$ptrRows._[ixRow-1];if($prev)$prev.focus();else $ptrRows.focus();break}case 40:{evt.preventDefault();const ixRow=$ptrRows._.indexOf($row);const $nxt=$ptrRows._[ixRow+1];if($nxt)$nxt.focus();break}}})).click((()=>fnHandleClick(result)))}static docToPageSourceHash(doc){const page=UrlUtil.categoryToHoverPage(doc.c);const source=doc.s;const hash=doc.u;return{page:page,source:source,hash:hash}}constructor(indexes,cbSearch,options){options=options||{};this._indexes=indexes;this._cat=options.defaultCategory||"ALL";this._cbSearch=cbSearch;this._fnFilterResults=options.fnFilterResults||null;this._searchOptions=options.searchOptions||null;this._fnTransform=options.fnTransform||null;this._flags={doClickFirst:false,isWait:false};this._$ptrRows={_:[]};this._$selCat=null;this._$iptSearch=null;this._$wrpResults=null;this._$rendered=null}static pDoGlobalInit(){if(!SearchWidget.P_LOADING_CONTENT){SearchWidget.P_LOADING_CONTENT=(async()=>{Object.assign(SearchWidget.CONTENT_INDICES,await SearchUiUtil.pGetContentIndices({additionalIndices:["item"],alternateIndices:["spell"]}))})()}return SearchWidget.P_LOADING_CONTENT}__getSearchOptions(){return this._searchOptions||{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true}}__$getRow(r){return $(`<div class="ui-search__row" tabindex="0">\n\t\t\t<span>${r.doc.n}</span>\n\t\t\t<span>${r.doc.s?`<i title="${Parser.sourceJsonToFull(r.doc.s)}">${Parser.sourceJsonToAbv(r.doc.s)}${r.doc.p?` p${r.doc.p}`:""}</i>`:""}</span>\n\t\t</div>`)}static __getAllTitle(){return"All Categories"}static __getCatOptionText(it){return it}get $wrpSearch(){if(!this._$rendered)this._render();return this._$rendered}__showMsgInputRequired(){this._flags.isWait=true;this._$wrpResults.empty().append(SearchWidget.getSearchEnter())}__showMsgWait(){this._$wrpResults.empty().append(SearchWidget.getSearchLoading())}__showMsgNoResults(){this._flags.isWait=true;this._$wrpResults.empty().append(SearchWidget.getSearchNoResults())}__doSearch(){const searchInput=this._$iptSearch.val().trim();const index=this._indexes[this._cat];const results=index.search(searchInput,this.__getSearchOptions());const{toProcess:toProcess,resultCount:resultCount}=(()=>{if(results.length){if(this._fnFilterResults){const filtered=results.filter((it=>this._fnFilterResults(it.doc)));return{toProcess:filtered.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:filtered.length}}else{return{toProcess:results.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:results.length}}}else{if(searchInput.trim()){return{toProcess:[],resultCount:0}}if(this._fnFilterResults){const filtered=Object.values(index.documentStore.docs).filter((it=>this._fnFilterResults(it))).map((it=>({doc:it})));return{toProcess:filtered.slice(0,UiUtil.SEARCH_RESULTS_CAP),resultCount:filtered.length}}else{return{toProcess:Object.values(index.documentStore.docs).slice(0,UiUtil.SEARCH_RESULTS_CAP).map((it=>({doc:it}))),resultCount:Object.values(index.documentStore.docs).length}}}})();this._$wrpResults.empty();this._$ptrRows._=[];if(resultCount){const handleClick=r=>{if(this._fnTransform)this._cbSearch(this._fnTransform(r.doc));else this._cbSearch(r.doc)};if(this._flags.doClickFirst){handleClick(toProcess[0]);this._flags.doClickFirst=false;return}const res=toProcess.slice(0,UiUtil.SEARCH_RESULTS_CAP);res.forEach((r=>{const $row=this.__$getRow(r).appendTo(this._$wrpResults);SearchWidget.bindRowHandlers({result:r,$row:$row,$ptrRows:this._$ptrRows,fnHandleClick:handleClick});this._$ptrRows._.push($row)}));if(resultCount>UiUtil.SEARCH_RESULTS_CAP){const diff=resultCount-UiUtil.SEARCH_RESULTS_CAP;this._$wrpResults.append(`<div class="ui-search__row ui-search__row--readonly">...${diff} more result${diff===1?" was":"s were"} hidden. Refine your search!</div>`)}}else{if(!searchInput.trim())this.__showMsgInputRequired();else this.__showMsgNoResults()}}_render(){if(!this._$rendered){this._$rendered=$(`<div class="ui-search__wrp-output"></div>`);const $wrpControls=$(`<div class="ui-search__wrp-controls"></div>`).appendTo(this._$rendered);this._$selCat=$(`<select class="form-control ui-search__sel-category">\n\t\t\t\t<option value="ALL">${SearchWidget.__getAllTitle()}</option>\n\t\t\t\t${Object.keys(this._indexes).sort().filter((it=>it!=="ALL")).map((it=>`<option value="${it}">${SearchWidget.__getCatOptionText(it)}</option>`)).join("")}\n\t\t\t</select>`).appendTo($wrpControls).toggle(Object.keys(this._indexes).length!==1).on("change",(()=>{this._cat=this._$selCat.val();this.__doSearch()}));this._$iptSearch=$(`<input class="ui-search__ipt-search search form-control" autocomplete="off" placeholder="Search...">`).appendTo($wrpControls);this._$wrpResults=$(`<div class="ui-search__wrp-results"></div>`).appendTo(this._$rendered);let lastSearchTerm="";SearchWidget.bindAutoSearch(this._$iptSearch,{flags:this._flags,fnSearch:this.__doSearch.bind(this),fnShowWait:this.__showMsgWait.bind(this),$ptrRows:this._$ptrRows});this._$iptSearch.keydown((evt=>{if(evt.key==="Escape")this._$iptSearch.blur();if(!this._$iptSearch.val().trim().length)return;if(evt.which!==13){if(lastSearchTerm==="")this.__showMsgWait();lastSearchTerm=this._$iptSearch.val()}}));this.__doSearch()}}doFocus(){this._$iptSearch.focus()}static async pAddToIndexes(prop,entry){const nextId=Object.values(SearchWidget.CONTENT_INDICES.ALL.documentStore.docs).length;const indexer=new Omnidexer(nextId);const toIndex={[prop]:[entry]};const toIndexMultiPart=Omnidexer.TO_INDEX__FROM_INDEX_JSON.filter((it=>it.listProp===prop));for(const it of toIndexMultiPart)await indexer.pAddToIndex(it,toIndex);const toIndexSinglePart=Omnidexer.TO_INDEX.filter((it=>it.listProp===prop));for(const it of toIndexSinglePart)await indexer.pAddToIndex(it,toIndex);const toAdd=Omnidexer.decompressIndex(indexer.getIndex());toAdd.forEach((d=>{d.cf=d.c===Parser.CAT_ID_CREATURE?"Creature":Parser.pageCategoryToFull(d.c);SearchWidget.CONTENT_INDICES.ALL.addDoc(d);SearchWidget.CONTENT_INDICES[d.cf].addDoc(d)}))}static async pGetUserSpellSearch(opts){opts=opts||{};await SearchWidget.P_LOADING_CONTENT;const nxtOpts={fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@spell ${doc.n.toSpellCase()}${doc.s!==SRC_PHB?`|${doc.s}`:""}}`;return cpy}};if(opts.level!=null)nxtOpts.fnFilterResults=result=>result.lvl===opts.level;const title=opts.level===0?"Select Cantrip":"Select Spell";return SearchWidget.pGetUserEntitySearch(title,"alt_Spell",nxtOpts)}static async pGetUserLegendaryGroupSearch(){await SearchWidget.pLoadCustomIndex("entity_LegendaryGroups",`${Renderer.get().baseUrl}data/bestiary/legendarygroups.json`,"legendaryGroup",Parser.CAT_ID_LEGENDARY_GROUP,"legendaryGroup","legendary groups");return SearchWidget.pGetUserEntitySearch("Select Legendary Group","entity_LegendaryGroups",{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.page="legendaryGroup";return cpy}})}static async pGetUserFeatSearch(){await SearchWidget.pLoadCustomIndex("entity_Feats",`${Renderer.get().baseUrl}data/feats.json`,"feat",Parser.CAT_ID_FEAT,UrlUtil.PG_FEATS,"feats");return SearchWidget.pGetUserEntitySearch("Select Feat","entity_Feats",{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@feat ${doc.n}${doc.s!==SRC_PHB?`|${doc.s}`:""}}`;return cpy}})}static async pGetUserBackgroundSearch(){await SearchWidget.pLoadCustomIndex("entity_Backgrounds",`${Renderer.get().baseUrl}data/backgrounds.json`,"background",Parser.CAT_ID_BACKGROUND,UrlUtil.PG_BACKGROUNDS,"backgrounds");return SearchWidget.pGetUserEntitySearch("Select Background","entity_Backgrounds",{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@background ${doc.n}${doc.s!==SRC_PHB?`|${doc.s}`:""}}`;return cpy}})}static async pGetUserRaceSearch(){const dataSource=()=>DataUtil.race.loadJSON();await SearchWidget.pLoadCustomIndex("entity_Races",dataSource,"race",Parser.CAT_ID_RACE,UrlUtil.PG_RACES,"races");return SearchWidget.pGetUserEntitySearch("Select Race","entity_Races",{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@race ${doc.n}${doc.s!==SRC_PHB?`|${doc.s}`:""}}`;return cpy}})}static async pGetUserOptionalFeatureSearch(){await SearchWidget.pLoadCustomIndex("entity_OptionalFeatures",`${Renderer.get().baseUrl}data/optionalfeatures.json`,"optionalfeature",Parser.CAT_ID_OPTIONAL_FEATURE_OTHER,UrlUtil.PG_OPT_FEATURES,"optional features");return SearchWidget.pGetUserEntitySearch("Select Optional Feature","entity_OptionalFeatures",{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@optfeature ${doc.n}${doc.s!==SRC_PHB?`|${doc.s}`:""}}`;return cpy}})}static async pGetUserAdventureSearch(opts){await SearchWidget.pLoadCustomIndex("entity_Adventures",`${Renderer.get().baseUrl}data/adventures.json`,"adventure",Parser.CAT_ID_ADVENTURE,UrlUtil.PG_ADVENTURE,"adventures");return SearchWidget.pGetUserEntitySearch("Select Adventure","entity_Adventures",opts)}static async pGetUserCreatureSearch(){await SearchWidget.P_LOADING_CONTENT;const nxtOpts={fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@creature ${doc.n}${doc.s!==SRC_MM?`|${doc.s}`:""}}`;return cpy}};return SearchWidget.pGetUserEntitySearch("Select Creature","Creature",nxtOpts)}static async __pLoadItemIndex(isBasicIndex){const dataSource=async()=>{const allItems=await Renderer.item.pBuildList({isBlacklistVariants:true});return{item:allItems.filter((it=>{if(it.type==="GV")return false;if(isBasicIndex==null)return true;const isBasic=it.rarity==="none"||it.rarity==="unknown"||it._category==="basic";return isBasicIndex?isBasic:!isBasic}))}};const indexName=isBasicIndex==null?"entity_Items":isBasicIndex?"entity_ItemsBasic":"entity_ItemsMagic";return SearchWidget.pLoadCustomIndex(indexName,dataSource,"item",Parser.CAT_ID_ITEM,UrlUtil.PG_ITEMS,"items")}static async __pGetUserItemSearch(isBasicIndex){const indexName=isBasicIndex==null?"entity_Items":isBasicIndex?"entity_ItemsBasic":"entity_ItemsMagic";return SearchWidget.pGetUserEntitySearch("Select Item",indexName,{fnTransform:doc=>{const cpy=MiscUtil.copy(doc);Object.assign(cpy,SearchWidget.docToPageSourceHash(cpy));cpy.tag=`{@item ${doc.n}${doc.s!==SRC_DMG?`|${doc.s}`:""}}`;return cpy}})}static async pGetUserBasicItemSearch(){await SearchWidget.__pLoadItemIndex(true);return SearchWidget.__pGetUserItemSearch(true)}static async pGetUserMagicItemSearch(){await SearchWidget.__pLoadItemIndex(false);return SearchWidget.__pGetUserItemSearch(false)}static async pGetUserItemSearch(){await SearchWidget.__pLoadItemIndex();return SearchWidget.__pGetUserItemSearch()}static async pGetUserEntitySearch(title,indexName,opts){opts=opts||{};return new Promise((resolve=>{const searchOpts={defaultCategory:indexName};if(opts.fnFilterResults)searchOpts.fnFilterResults=opts.fnFilterResults;if(opts.fnTransform)searchOpts.fnTransform=opts.fnTransform;const searchWidget=new SearchWidget({[indexName]:SearchWidget.CONTENT_INDICES[indexName]},(docOrTransformed=>{doClose(false);resolve(docOrTransformed)}),searchOpts);const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:title,cbClose:doResolve=>{searchWidget.$wrpSearch.detach();if(doResolve)resolve(null)}});$modalInner.append(searchWidget.$wrpSearch);searchWidget.doFocus()}))}static async pLoadCustomIndex(contentIndexName,dataSource,jsonProp,catId,page,errorName){if(SearchWidget.P_LOADING_INDICES[contentIndexName])await SearchWidget.P_LOADING_INDICES[contentIndexName];else{const doClose=SearchWidget._showLoadingModal();try{SearchWidget.P_LOADING_INDICES[contentIndexName]=SearchWidget.CONTENT_INDICES[contentIndexName]=await SearchWidget._pGetIndex(dataSource,jsonProp,catId,page);SearchWidget.P_LOADING_INDICES[contentIndexName]=null}catch(e){JqueryUtil.doToast({type:"danger",content:`Could not load ${errorName}! ${VeCt.STR_SEE_CONSOLE}`});throw e}finally{doClose()}}}static async _pGetIndex(dataSource,prop,catId,page){const index=elasticlunr((function(){this.addField("n");this.addField("s");this.setRef("id")}));const[featJson,homebrew]=await Promise.all([typeof dataSource==="string"?DataUtil.loadJSON(dataSource):dataSource(),BrewUtil.pAddBrewData()]);featJson[prop].concat(homebrew[prop]||[]).forEach(((it,i)=>index.addDoc({id:i,c:catId,cf:Parser.pageCategoryToFull(catId),h:1,n:it.name,p:it.page,s:it.source,u:UrlUtil.URL_TO_HASH_BUILDER[page](it)})));return index}static _showLoadingModal(){const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({isPermanent:true});$(`<div class="flex-vh-center w-100 h-100"><span class="dnd-font italic ve-muted">Loading...</span></div>`).appendTo($modalInner);return doClose}}SearchWidget.P_LOADING_CONTENT=null;SearchWidget.CONTENT_INDICES={};SearchWidget.P_LOADING_INDICES={};class InputUiUtil{static async pGetUserNumber(opts){opts=opts||{};let defaultVal=opts.default!==undefined?opts.default:null;if(opts.storageKey_default){const prev=await(opts.isGlobal_default?StorageUtil.pGet(opts.storageKey_default):StorageUtil.pGetForPage(opts.storageKey_default));if(prev!=null)defaultVal=prev}return new Promise((resolve=>{const $iptNumber=$(`<input class="form-control mb-2 text-right" ${opts.min?`min="${opts.min}"`:""} ${opts.max?`max="${opts.max}"`:""}>`).keydown((evt=>{if(evt.key==="Escape"){$iptNumber.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));if(defaultVal!==undefined)$iptNumber.val(defaultVal);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter a Number",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptNumber.val();if(!raw.trim())return resolve(null);let num=UiUtil.strToInt(raw);if(opts.min)num=Math.max(opts.min,num);if(opts.max)num=Math.min(opts.max,num);if(opts.int)num=Math.round(num);if(opts.storageKey_default){opts.isGlobal_default?StorageUtil.pSet(opts.storageKey_default,num):StorageUtil.pSetForPage(opts.storageKey_default,num)}resolve(num)}});if(opts.$elePre)opts.$elePre.appendTo($modalInner);$iptNumber.appendTo($modalInner);if(opts.$elePost)opts.$elePost.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptNumber.focus();$iptNumber.select()}))}static async pGetUserBoolean(opts){opts=opts||{};if(opts.storageKey){const prev=await(opts.isGlobal?StorageUtil.pGet(opts.storageKey):StorageUtil.pGetForPage(opts.storageKey));if(prev!=null)return prev}return new Promise((resolve=>{const $btnTrueRemember=opts.textYesRemember?$(`<button class="btn btn-primary flex-v-center mr-2"><span class="glyphicon glyphicon-ok mr-2"></span><span>${opts.textYesRemember}</span></button>`).click((()=>{doClose(true,true);if(opts.fnRemember){opts.fnRemember(true)}else{opts.isGlobal?StorageUtil.pSet(opts.storageKey,true):StorageUtil.pSetForPage(opts.storageKey,true)}})):null;const $btnTrue=$(`<button class="btn btn-primary flex-v-center mr-3"><span class="glyphicon glyphicon-ok mr-2"></span><span>${opts.textYes||"OK"}</span></button>`).click((()=>doClose(true,true)));const $btnFalse=$(`<button class="btn btn-default btn-sm flex-v-center"><span class="glyphicon glyphicon-remove mr-2"></span><span>${opts.textNo||"Cancel"}</span></button>`).click((()=>doClose(true,false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default btn-sm ml-3"><span class="glyphicon glyphicon-forward"></span><span>${opts.textSkip||"Skip"}</span></button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Choose",isMinHeight0:true,cbClose:(isDataEntered,value)=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);if(value==null)throw new Error(`Callback must receive a value!`);resolve(value)}});if(opts.htmlDescription&&opts.htmlDescription.trim())$$`<div class="flex w-100 mb-1">${opts.htmlDescription}</div>`.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right py-1 px-1">${$btnTrueRemember}${$btnTrue}${$btnFalse}${$btnSkip}</div>`.appendTo($modalInner);$btnTrue.focus();$btnTrue.select()}))}static pGetUserEnum(opts){opts=opts||{};return new Promise((resolve=>{const $selEnum=$(`<select class="form-control mb-2"><option value="-1" disabled>${opts.placeholder||"Select..."}</option></select>`);if(opts.isAllowNull)$(`<option value="-1"></option>`).text(opts.fnDisplay?opts.fnDisplay(null,-1):"(None)").appendTo($selEnum);opts.values.forEach(((v,i)=>$(`<option value="${i}"></option>`).text(opts.fnDisplay?opts.fnDisplay(v,i):v).appendTo($selEnum)));if(opts.default!=null)$selEnum.val(opts.default);else $selEnum[0].selectedIndex=0;const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select an Option",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const ix=Number($selEnum.val());if(!~ix)return resolve(null);if(opts.fnGetExtraState){const out={extraState:opts.fnGetExtraState()};if(opts.isResolveItem)out.item=opts.values[ix];else out.ix=ix;resolve(out)}else resolve(opts.isResolveItem?opts.values[ix]:ix)}});$selEnum.appendTo($modalInner);if(opts.$elePost)opts.$elePost.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$selEnum.focus()}))}static pGetUserMultipleChoice(opts){return new Promise((resolve=>{const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const prop="formData";const initialState={};if(opts.defaults)opts.defaults.forEach((ix=>initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsActive(prop,ix)]=true));if(opts.required){opts.required.forEach((ix=>{initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsActive(prop,ix)]=true;initialState[ComponentUiUtil.getMetaWrpMultipleChoice_getPropIsRequired(prop,ix)]=true}))}const comp=BaseComponent.fromObject(initialState);let title=opts.title;if(!title){if(opts.count!=null)title=`Choose ${Parser.numberToText(opts.count).uppercaseFirst()}`;else if(opts.min!=null&&opts.max!=null)title=`Choose Between ${Parser.numberToText(opts.min).uppercaseFirst()} and ${Parser.numberToText(opts.max).uppercaseFirst()} Options`;else if(opts.min!=null)title=`Choose At Least ${Parser.numberToText(opts.min).uppercaseFirst()}`;else title=`Choose At Most ${Parser.numberToText(opts.max).uppercaseFirst()}`}const{$ele:$wrpList,propIsAcceptable:propIsAcceptable}=ComponentUiUtil.getMetaWrpMultipleChoice(comp,prop,opts);$wrpList.addClass(`mb-1`);const hkIsAcceptable=()=>$btnOk.attr("disabled",!comp._state[propIsAcceptable]);comp._addHookBase(propIsAcceptable,hkIsAcceptable);hkIsAcceptable();const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({...opts.modalOpts||{},title:title,isMinHeight0:true,isUncappedHeight:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const ixs=ComponentUiUtil.getMetaWrpMultipleChoice_getSelectedIxs(comp,prop);if(!opts.isResolveItems)resolve(ixs);else if(opts.values)resolve(ixs.map((ix=>opts.values[ix])));else if(opts.valueGroups){const allValues=opts.valueGroups.map((it=>it.values)).flat();resolve(ixs.map((ix=>allValues[ix])))}}});if(opts.htmlDescription)$modalInner.append(opts.htmlDescription);$wrpList.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right no-shrink pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$wrpList.focus()}))}static pGetUserIcon(opts){opts=opts||{};return new Promise((resolve=>{let lastIx=opts.default!=null?opts.default:-1;const onclicks=[];const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select an Option",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);return resolve(~lastIx?lastIx:null)}});$$`<div class="flex flex-wrap flex-h-center mb-2">${opts.values.map(((v,i)=>{const $btn=$$`<div class="m-2 btn ${v.buttonClass||"btn-default"} ui__btn-xxl-square flex-col flex-h-center">
					${v.iconClass?`<div class="ui-icn__wrp-icon ${v.iconClass} mb-1"></div>`:""}
					${v.iconContent?v.iconContent:""}
					<div class="whitespace-normal w-100">${v.name}</div>
				</div>`.click((()=>{lastIx=i;onclicks.forEach((it=>it()))})).toggleClass(v.buttonClassActive||"active",opts.default===i);if(v.buttonClassActive&&opts.default===i){$btn.removeClass("btn-default").addClass(v.buttonClassActive)}onclicks.push((()=>{$btn.toggleClass(v.buttonClassActive||"active",lastIx===i);if(v.buttonClassActive)$btn.toggleClass("btn-default",lastIx!==i)}));return $btn}))}</div>`.appendTo($modalInner);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}static pGetUserString(opts){opts=opts||{};return new Promise((resolve=>{const $iptStr=$(`<input class="form-control mb-2" type="text">`).val(opts.default).keydown((async evt=>{if(evt.key==="Escape"){$iptStr.blur();return}if(opts.autocomplete){await MiscUtil.pDelay(17);if($modalInner.find(`.typeahead.dropdown-menu`).is(":visible"))return}if(evt.which===13)doClose(true);evt.stopPropagation()}));if(opts.isCode)$iptStr.addClass("code");if(opts.autocomplete&&opts.autocomplete.length)$iptStr.typeahead({source:opts.autocomplete});const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Text",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptStr.val();return resolve(raw)}});$iptStr.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptStr.focus();$iptStr.select()}))}static pGetUserText(opts){opts=opts||{};return new Promise((resolve=>{const $iptStr=$(`<textarea class="form-control mb-2 resize-vertical w-100" ${opts.disabled?"disabled":""}></textarea>`).val(opts.default);if(opts.isCode)$iptStr.addClass("code");const $btnOk=$(`<button class="btn btn-primary mr-2">${opts.buttonText||"OK"}</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Text",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptStr.val();if(!raw.trim())return resolve(null);else return resolve(raw)}});$iptStr.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptStr.focus();$iptStr.select()}))}static pGetUserColor(opts){opts=opts||{};return new Promise((resolve=>{const $iptRgb=$(`<input class="form-control mb-2" ${opts.default!=null?`value="${opts.default}"`:""} type="color">`);const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Choose Color",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);const raw=$iptRgb.val();if(!raw.trim())return resolve(null);else return resolve(raw)}});$iptRgb.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner);$iptRgb.focus();$iptRgb.select()}))}static pGetUserDirection(opts){const X=0;const Y=1;const DEG_CIRCLE=360;opts=opts||{};const step=Math.max(2,Math.min(DEG_CIRCLE,opts.step||DEG_CIRCLE));const stepDeg=DEG_CIRCLE/step;function getAngle(p1,p2){return Math.atan2(p2[Y]-p1[Y],p2[X]-p1[X])*180/Math.PI}return new Promise((resolve=>{let active=false;let curAngle=Math.min(DEG_CIRCLE,opts.default)||0;const $arm=$(`<div class="ui-dir__arm"></div>`);const handleAngle=()=>$arm.css({transform:`rotate(${curAngle+180}deg)`});handleAngle();const $pad=$$`<div class="ui-dir__face">${$arm}</div>`.on("mousedown touchstart",(evt=>{active=true;handleEvent(evt)}));const $document=$(document);const evtId=`ui_user_dir_${CryptUtil.uid()}`;$document.on(`mousemove.${evtId} touchmove${evtId}`,(evt=>{handleEvent(evt)})).on(`mouseup.${evtId} touchend${evtId} touchcancel${evtId}`,(evt=>{evt.preventDefault();evt.stopPropagation();active=false}));const handleEvent=evt=>{if(!active)return;const coords=[EventUtil.getClientX(evt),EventUtil.getClientY(evt)];const{top:top,left:left}=$pad.offset();const center=[left+$pad.width()/2,top+$pad.height()/2];curAngle=getAngle(center,coords)+90;if(step!==DEG_CIRCLE)curAngle=Math.round(curAngle/stepDeg)*stepDeg;else curAngle=Math.round(curAngle);handleAngle()};const BTN_STEP_SIZE=26;const BORDER_PAD=16;const CONTROLS_RADIUS=(92+BTN_STEP_SIZE+BORDER_PAD)/2;const $padOuter=opts.stepButtons?(()=>{const steps=opts.stepButtons;const SEG_ANGLE=360/steps.length;const $btns=[];for(let i=0;i<steps.length;++i){const theta=SEG_ANGLE*i*(Math.PI/180)-1.5708;const x=CONTROLS_RADIUS*Math.cos(theta);const y=CONTROLS_RADIUS*Math.sin(theta);$btns.push($(`<button class="btn btn-default btn-xxs absolute">${steps[i]}</button>`).css({top:y+CONTROLS_RADIUS-BTN_STEP_SIZE/2,left:x+CONTROLS_RADIUS-BTN_STEP_SIZE/2,width:BTN_STEP_SIZE,height:BTN_STEP_SIZE,zIndex:1002}).click((()=>{curAngle=SEG_ANGLE*i;handleAngle()})))}const $wrpInner=$$`<div class="flex-vh-center relative">${$btns}${$pad}</div>`.css({width:CONTROLS_RADIUS*2,height:CONTROLS_RADIUS*2});return $$`<div class="flex-vh-center">${$wrpInner}</div>`.css({width:CONTROLS_RADIUS*2+BTN_STEP_SIZE+BORDER_PAD,height:CONTROLS_RADIUS*2+BTN_STEP_SIZE+BORDER_PAD})})():null;const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Select Direction",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);$document.off(`mousemove.${evtId} touchmove${evtId} mouseup.${evtId} touchend${evtId} touchcancel${evtId}`);if(!isDataEntered)return resolve(null);if(curAngle<0)curAngle+=360;return resolve(curAngle)}});$$`<div class="flex-vh-center mb-3">
				${$padOuter||$pad}
			</div>`.appendTo($modalInner);$$`<div class="flex-v-center flex-h-right pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}static pGetUserDice(opts){opts=opts||{};return new Promise((resolve=>{const comp=BaseComponent.fromObject({num:opts.default&&opts.default.num||1,faces:opts.default&&opts.default.faces||6,bonus:opts.default&&opts.default.bonus||null});comp.render=function($parent){$parent.empty();const $iptNum=ComponentUiUtil.$getIptInt(this,"num",0,{$ele:$(`<input class="form-control input-xs form-control--minimal text-center mr-1">`)}).appendTo($parent).keydown((evt=>{if(evt.key==="Escape"){$iptNum.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));const $selFaces=ComponentUiUtil.$getSelEnum(this,"faces",{values:Renderer.dice.DICE}).addClass("mr-2").addClass("text-center").css("textAlignLast","center");const $iptBonus=$(`<input class="form-control input-xs form-control--minimal text-center">`).change((()=>this._state.bonus=UiUtil.strToInt($iptBonus.val(),null,{fallbackOnNaN:null}))).keydown((evt=>{if(evt.key==="Escape"){$iptBonus.blur();return}if(evt.which===13)doClose(true);evt.stopPropagation()}));const hook=()=>$iptBonus.val(this._state.bonus!=null?UiUtil.intToBonus(this._state.bonus):this._state.bonus);comp._addHookBase("bonus",hook);hook();$$`<div class="flex-vh-center">${$iptNum}<div class="mr-1">d</div>${$selFaces}${$iptBonus}</div>`.appendTo($parent)};comp.getAsString=function(){return`${this._state.num}d${this._state.faces}${this._state.bonus?UiUtil.intToBonus(this._state.bonus):""}`};const $btnOk=$(`<button class="btn btn-primary mr-2">OK</button>`).click((()=>doClose(true)));const $btnCancel=$(`<button class="btn btn-default">Cancel</button>`).click((()=>doClose(false)));const $btnSkip=!opts.isSkippable?null:$(`<button class="btn btn-default ml-3">Skip</button>`).click((()=>doClose(VeCt.SYM_UI_SKIP)));const{$modalInner:$modalInner,doClose:doClose}=UiUtil.getShowModal({title:opts.title||"Enter Dice",isMinHeight0:true,cbClose:isDataEntered=>{if(typeof isDataEntered==="symbol")return resolve(isDataEntered);if(!isDataEntered)return resolve(null);return resolve(comp.getAsString())}});comp.render($modalInner);$$`<div class="flex-v-center flex-h-center pb-1 px-1">${$btnOk}${$btnCancel}${$btnSkip}</div>`.appendTo($modalInner)}))}}class DragReorderUiUtil{static $getDragPad(opts){opts=opts||{};const getComponentById=id=>opts.componentsParent[opts.componentsProp].find((it=>it.id===id));const dragMeta={};const doDragCleanup=()=>{dragMeta.on=false;dragMeta.$wrap.remove();dragMeta.$dummies.forEach(($d=>$d.remove()));$(document.body).off(`mouseup.drag__stop`)};const doDragRender=()=>{if(dragMeta.on)doDragCleanup();$(document.body).on(`mouseup.drag__stop`,(()=>{if(dragMeta.on)doDragCleanup()}));dragMeta.on=true;dragMeta.$wrap=$(`<div class="flex-col ui-drag__wrp-drag-block"></div>`).appendTo(opts.$parent);dragMeta.$dummies=[];const ids=opts.componentsParent[opts.componentsProp].map((it=>it.id));ids.forEach((id=>{const $dummy=$(`<div class="w-100 ${id===opts.componentId?"ui-drag__wrp-drag-dummy--highlight":"ui-drag__wrp-drag-dummy--lowlight"}"></div>`).height(getComponentById(id).height).mouseup((()=>{if(dragMeta.on)doDragCleanup()})).appendTo(dragMeta.$wrap);dragMeta.$dummies.push($dummy);if(id!==opts.componentId){$dummy.mouseenter((()=>{const cachedPos=getComponentById(id).pos;getComponentById(id).pos=getComponentById(opts.componentId).pos;getComponentById(opts.componentId).pos=cachedPos;doDragRender()}))}}))};return $(`<div class="m${opts.marginSide||"l"}-2 ui-drag__patch" title="Drag to Reorder">\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t</div>`).mousedown((()=>doDragRender()))}static $getDragPadOpts($fnGetRow,opts){if(!opts.$parent||!opts.swapRowPositions||!opts.$children&&!opts.$getChildren)throw new Error("Missing required option(s)!");const dragMeta={};const doDragCleanup=()=>{dragMeta.on=false;dragMeta.$wrap.remove();dragMeta.$dummies.forEach(($d=>$d.remove()));$(document.body).off(`mouseup.drag__stop`)};const doDragRender=()=>{if(dragMeta.on)doDragCleanup();$(document.body).on(`mouseup.drag__stop`,(()=>{if(dragMeta.on)doDragCleanup()}));dragMeta.on=true;dragMeta.$wrap=$(`<div class="flex-col ui-drag__wrp-drag-block"></div>`).appendTo(opts.$parent);dragMeta.$dummies=[];const $children=opts.$getChildren?opts.$getChildren():opts.$children;const ixRow=$children.indexOf($fnGetRow());$children.forEach((($child,i)=>{const dimensions={w:$child.outerWidth(true),h:$child.outerHeight(true)};const $dummy=$(`<div class="${i===ixRow?"ui-drag__wrp-drag-dummy--highlight":"ui-drag__wrp-drag-dummy--lowlight"}"></div>`).width(dimensions.w).height(dimensions.h).mouseup((()=>{if(dragMeta.on)doDragCleanup()})).appendTo(dragMeta.$wrap);dragMeta.$dummies.push($dummy);if(i!==ixRow){$dummy.mouseenter((()=>{opts.swapRowPositions(i,ixRow);doDragRender()}))}}))};return $(`<div class="mr-2 ui-drag__patch" title="Drag to Reorder">\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t<div class="ui-drag__patch-col"><div>&#8729</div><div>&#8729</div><div>&#8729</div></div>\n\t\t</div>`).mousedown((()=>doDragRender()))}static $getDragPad2($fnGetRow,$parent,parent){const{swapRowPositions:swapRowPositions,$children:$children,$getChildren:$getChildren}=parent;const nxtOpts={$parent:$parent,swapRowPositions:swapRowPositions,$children:$children,$getChildren:$getChildren};return this.$getDragPadOpts($fnGetRow,nxtOpts)}}class SourceUiUtil{static _getValidOptions(options){if(!options)throw new Error(`No options were specified!`);if(!options.$parent||!options.cbConfirm||!options.cbConfirmExisting||!options.cbCancel)throw new Error(`Missing options!`);options.mode=options.mode||"add";return options}static render(options){options=SourceUiUtil._getValidOptions(options);options.$parent.empty();options.mode=options.mode||"select";const isEditMode=options.mode==="edit";let jsonDirty=false;const $iptName=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptName.blur()})).change((()=>{if(!jsonDirty&&!isEditMode)$iptJson.val($iptName.val().replace(/[^-_a-zA-Z]/g,""));$iptName.removeClass("form-control--error")}));if(options.source)$iptName.val(options.source.full);const $iptAbv=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptAbv.blur()})).change((()=>{$iptAbv.removeClass("form-control--error")}));if(options.source)$iptAbv.val(options.source.abbreviation);const $iptJson=$(`<input class="form-control ui-source__ipt-named" ${isEditMode?"disabled":""}>`).keydown((evt=>{if(evt.key==="Escape")$iptJson.blur()})).change((()=>{jsonDirty=true;$iptJson.removeClass("form-control--error")}));if(options.source)$iptJson.val(options.source.json);const $iptUrl=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptUrl.blur()}));if(options.source)$iptUrl.val(options.source.url);const $iptAuthors=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptAuthors.blur()}));if(options.source)$iptAuthors.val((options.source.authors||[]).join(", "));const $iptConverters=$(`<input class="form-control ui-source__ipt-named">`).keydown((evt=>{if(evt.key==="Escape")$iptConverters.blur()}));if(options.source)$iptConverters.val((options.source.convertedBy||[]).join(", "));const $btnOk=$(`<button class="btn btn-primary">OK</button>`).click((()=>{let incomplete=false;[$iptName,$iptAbv,$iptJson].forEach(($ipt=>{const val=$ipt.val();if(!val||!val.trim())(incomplete=true)&&$ipt.addClass("form-control--error")}));if(incomplete)return;const jsonVal=$iptJson.val().trim();if(!isEditMode&&BrewUtil.hasSourceJson(jsonVal)){$iptJson.addClass("form-control--error");JqueryUtil.doToast({content:`The JSON identifier "${jsonVal}" already exists!`,type:"danger"});return}const source={json:jsonVal,abbreviation:$iptAbv.val().trim(),full:$iptName.val().trim(),url:$iptUrl.val().trim(),authors:$iptAuthors.val().trim().split(",").map((it=>it.trim())).filter(Boolean),convertedBy:$iptConverters.val().trim().split(",").map((it=>it.trim())).filter(Boolean)};options.cbConfirm(source,options.mode!=="edit")}));const $btnCancel=options.isRequired&&!isEditMode?null:$(`<button class="btn btn-default ml-2">Cancel</button>`).click((()=>options.cbCancel()));const $btnUseExisting=$(`<button class="btn btn-default">Use an Existing Source</button>`).click((()=>{$stageInitial.hideVe();$stageExisting.showVe();[$iptName,$iptAbv,$iptJson].forEach(($ipt=>$ipt.removeClass("form-control--error")))}));const $stageInitial=$$`<div class="h-100 w-100 flex-vh-center"><div class="flex-col">
			<h3 class="text-center">${isEditMode?"Edit Homebrew Source":"Add a Homebrew Source"}</h3>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="The name or title for the homebrew you wish to create. This could be the name of a book or PDF; for example, 'Monster Manual'">Title</span>
				${$iptName}
			</div></div>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="An abbreviated form of the title. This will be shown in lists on the site, and in the top-right corner of statblocks or data entries; for example, 'MM'">Abbreviation</span>
				${$iptAbv}
			</div></div>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="This will be used to identify your homebrew universally, so should be unique to you and you alone">JSON Identifier</span>
				${$iptJson}
			</div></div>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A link to the original homebrew, e.g. a GM Binder page">Source URL</span>
				${$iptUrl}
			</div></div>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A comma-separated list of authors, e.g. 'John Doe, Joe Bloggs'">Author(s)</span>
				${$iptAuthors}
			</div></div>
			<div class="ui-source__row mb-2"><div class="col-12 flex-v-center">
				<span class="mr-2 ui-source__name help" title="A comma-separated list of people who converted the homebrew to 5etools' format, e.g. 'John Doe, Joe Bloggs'">Converted By</span>
				${$iptConverters}
			</div></div>
			<div class="text-center mb-2">${$btnOk}${$btnCancel}</div>

			${!isEditMode&&BrewUtil.homebrewMeta.sources&&BrewUtil.homebrewMeta.sources.length?$$`<div class="flex-vh-center mb-3 mt-3"><span class="ui-source__divider"></span>or<span class="ui-source__divider"></span></div>
			<div class="flex-vh-center">${$btnUseExisting}</div>`:""}
		</div></div>`.appendTo(options.$parent);const $selExisting=$$`<select class="form-control input-sm">
			<option disabled>Select</option>
			${(BrewUtil.homebrewMeta.sources||[]).sort(((a,b)=>SortUtil.ascSortLower(a.full,b.full))).map((s=>`<option value="${s.json.escapeQuotes()}">${s.full.escapeQuotes()}</option>`))}
		</select>`.change((()=>$selExisting.removeClass("form-control--error")));$selExisting[0].selectedIndex=0;const $btnConfirmExisting=$(`<button class="btn btn-default btn-sm">Confirm</button>`).click((()=>{if($selExisting[0].selectedIndex!==0){const sourceJson=$selExisting.val();const source=BrewUtil.sourceJsonToSource(sourceJson);options.cbConfirmExisting(source);$selExisting[0].selectedIndex=0;$stageExisting.hideVe();$stageInitial.showVe()}else $selExisting.addClass("form-control--error")}));const $btnBackExisting=$(`<button class="btn btn-default btn-sm mr-2">Back</button>`).click((()=>{$selExisting[0].selectedIndex=0;$stageExisting.hideVe();$stageInitial.showVe()}));const $stageExisting=$$`<div class="h-100 w-100 flex-vh-center ve-hidden"><div>
			<h3 class="text-center">Select a Homebrew Source</h3>
			<div class="mb-2"><div class="col-12 flex-vh-center">${$selExisting}</div></div>
			<div class="col-12 flex-vh-center">${$btnBackExisting}${$btnConfirmExisting}</div>
		</div></div>`.appendTo(options.$parent)}}class BaseComponent extends ProxyBase{constructor(){super();this.__locks={};this.__rendered={};this.__state={...this._getDefaultState()};this._state=this._getProxy("state",this.__state)}_addHookBase(prop,hook){return this._addHook("state",prop,hook)}_removeHookBase(prop,hook){return this._removeHook("state",prop,hook)}_removeHooksBase(prop){return this._removeHooks("state",prop)}_setState(toState){this._proxyAssign("state","_state","__state",toState,true)}_getState(){return MiscUtil.copy(this.__state)}getPod(){this.__pod=this.__pod||{get:prop=>this._state[prop],set:(prop,val)=>this._state[prop]=val,delete:prop=>delete this._state[prop],addHook:(prop,hook)=>this._addHookBase(prop,hook),addHookAll:hook=>this._addHookAll("state",hook),removeHook:(prop,hook)=>this._removeHookBase(prop,hook),triggerCollectionUpdate:prop=>this._triggerCollectionUpdate(prop),setState:state=>this._setState(state),getState:()=>this._getState(),assign:(toObj,isOverwrite)=>this._proxyAssign("state","_state","__state",toObj,isOverwrite),pLock:lockName=>this._pLock(lockName),unlock:lockName=>this._unlock(lockName),component:this};return this.__pod}_getDefaultState(){return{}}getBaseSaveableState(){return{state:MiscUtil.copy(this.__state)}}setBaseSaveableStateFrom(toLoad,isOverwrite=false){toLoad.state&&this._proxyAssignSimple("state",toLoad.state,isOverwrite)}_getRenderedCollection(opts){opts=opts||{};const renderedLookupProp=opts.namespace?`${opts.namespace}.${opts.prop}`:opts.prop;return this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{}}_renderCollection(opts){opts=opts||{};const rendered=this._getRenderedCollection(opts);const toDelete=new Set(Object.keys(rendered));(this._state[opts.prop]||[]).forEach(((it,i)=>{if(it.id==null)throw new Error(`Collection item did not have an ID!`);const meta=rendered[it.id];toDelete.delete(it.id);if(meta){if(opts.isDiffMode){const nxtHash=CryptUtil.md5(JSON.stringify(it));if(nxtHash!==meta.__hash){meta.__hash=nxtHash}else return}meta.data=it;opts.fnUpdateExisting(meta,it,i)}else{const meta=opts.fnGetNew(it,i);if(meta==null)return;meta.data=it;if(!meta.$wrpRow)throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(opts.isDiffMode)meta.hash=CryptUtil.md5(JSON.stringify(it));rendered[it.id]=meta}}));toDelete.forEach((id=>{const meta=rendered[id];meta.$wrpRow.remove();delete rendered[id];if(opts.fnDeleteExisting)opts.fnDeleteExisting(meta)}));if(opts.fnReorderExisting){(this._state[opts.prop]||[]).forEach(((it,i)=>{const meta=rendered[it.id];opts.fnReorderExisting(meta,it,i)}))}}async _pRenderCollection(opts){opts=opts||{};const rendered=this._getRenderedCollection(opts);const entities=this._state[opts.prop];return this._pRenderCollection_doRender(rendered,entities,opts)}async _pRenderCollection_doRender(rendered,entities,opts){opts=opts||{};const toDelete=new Set(Object.keys(rendered));for(let i=0;i<entities.length;++i){const it=entities[i];if(!it.id)throw new Error(`Collection item did not have an ID!`);const meta=rendered[it.id];toDelete.delete(it.id);if(meta){if(opts.isDiffMode){const nxtHash=CryptUtil.md5(JSON.stringify(it));if(nxtHash!==meta.__hash)meta.__hash=nxtHash;else continue}const nxtMeta=await opts.pFnUpdateExisting(meta,it);if(opts.isMultiRender)rendered[it.id]=nxtMeta}else{const meta=await opts.pFnGetNew(it);if(meta==null)continue;if(opts.isMultiRender&&meta.some((it=>!it.$wrpRow)))throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(!opts.isMultiRender&&!meta.$wrpRow)throw new Error(`A "$wrpRow" property is required in order for deletes!`);if(opts.isDiffMode)meta.__hash=CryptUtil.md5(JSON.stringify(it));rendered[it.id]=meta}}for(const id of toDelete){const meta=rendered[id];if(opts.isMultiRender)meta.forEach((it=>it.$wrpRow.remove()));else meta.$wrpRow.remove();if(opts.additionalCaches)opts.additionalCaches.forEach((it=>delete it[id]));delete rendered[id];if(opts.pFnDeleteExisting)await opts.pFnDeleteExisting(meta)}}_detachCollection(prop,namespace=null){const renderedLookupProp=namespace?`${namespace}.${prop}`:prop;const rendered=this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{};Object.values(rendered).forEach((it=>it.$wrpRow.detach()))}_resetCollectionRenders(prop,namespace=null){const renderedLookupProp=namespace?`${namespace}.${prop}`:prop;const rendered=this.__rendered[renderedLookupProp]=this.__rendered[renderedLookupProp]||{};Object.values(rendered).forEach((it=>it.$wrpRow.remove()));delete this.__rendered[renderedLookupProp]}render(){throw new Error("Unimplemented!")}getSaveableState(){return{...this.getBaseSaveableState()}}setStateFrom(toLoad,isOverwrite=false){this.setBaseSaveableStateFrom(toLoad,isOverwrite)}async _pLock(lockName){while(this.__locks[lockName])await this.__locks[lockName].lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));this.__locks[lockName]={lock:lock,unlock:unlock}}async _pGate(lockName){while(this.__locks[lockName])await this.__locks[lockName].lock}_unlock(lockName){const lockMeta=this.__locks[lockName];if(lockMeta){delete this.__locks[lockName];lockMeta.unlock()}}async _pDoProxySetBase(prop,value){return this._pDoProxySet("state",this.__state,prop,value)}_triggerCollectionUpdate(prop){if(!this._state[prop])return;this._state[prop]=[...this._state[prop]]}static _toCollection(array){if(array)return array.map((it=>({id:CryptUtil.uid(),entity:it})))}static _fromCollection(array){if(array)return array.map((it=>it.entity))}static fromObject(obj,...noModCollections){const comp=new this;Object.entries(MiscUtil.copy(obj)).forEach((([k,v])=>{if(v==null)comp.__state[k]=v;else if(noModCollections.includes(k)||noModCollections.includes("*"))comp.__state[k]=v;else if(typeof v==="object"&&v instanceof Array)comp.__state[k]=BaseComponent._toCollection(v);else comp.__state[k]=v}));return comp}static fromObjectNoMod(obj){return this.fromObject(obj,"*")}toObject(...noModCollections){const cpy=MiscUtil.copy(this.__state);Object.entries(cpy).forEach((([k,v])=>{if(v==null)return;if(noModCollections.includes(k)||noModCollections.includes("*"))cpy[k]=v;else if(v instanceof Array&&v.every((it=>it&&it.id)))cpy[k]=BaseComponent._fromCollection(v)}));return cpy}toObjectNoMod(){return this.toObject("*")}}class RenderableCollectionBase{constructor(comp,prop,opts){opts=opts||{};this._comp=comp;this._prop=prop;this._namespace=opts.namespace;this._isDiffMode=opts.isDiffMode}getNewRender(entity,i){throw new Error(`Unimplemented!`)}doUpdateExistingRender(renderedMeta,entity,i){throw new Error(`Unimplemented!`)}doDeleteExistingRender(renderedMeta){}doReorderExistingComponent(renderedMeta,entity,i){}render(opts){opts=opts||{};this._comp._renderCollection({prop:this._prop,fnUpdateExisting:(rendered,ent,i)=>this.doUpdateExistingRender(rendered,ent,i),fnGetNew:(entity,i)=>this.getNewRender(entity,i),fnDeleteExisting:rendered=>this.doDeleteExistingRender(rendered),fnReorderExisting:(rendered,ent,i)=>this.doReorderExistingComponent(rendered,ent,i),namespace:this._namespace,isDiffMode:opts.isDiffMode!=null?opts.isDiffMode:this._isDiffMode})}}class RenderableCollectionAsyncBase{constructor(comp,prop,opts){opts=opts||{};this._comp=comp;this._prop=prop;this._namespace=opts.namespace;this._isDiffMode=opts.isDiffMode;this._isMultiRender=opts.isMultiRender;this._additionalCaches=opts.additionalCaches}pGetNewRender(entity,i){throw new Error(`Unimplemented!`)}pDoUpdateExistingRender(renderedMeta,entity,i){throw new Error(`Unimplemented!`)}render(opts){opts=opts||{};this._comp._pRenderCollection({prop:this._prop,fnUpdateExisting:(rendered,source,i)=>this.pGetNewRender(rendered,source,i),fnGetNew:(entity,i)=>this.pDoUpdateExistingRender(entity,i),namespace:this._namespace,isDiffMode:opts.isDiffMode!=null?opts.isDiffMode:this._isDiffMode,isMultiRender:this._isMultiRender,additionalCaches:this._additionalCaches})}}class BaseLayeredComponent extends BaseComponent{constructor(){super();this._layers=[];this.__layerMeta={};this._layerMeta=this._getProxy("layerMeta",this.__layerMeta)}_addHookDeep(prop,hook){this._addHookBase(prop,hook);this._addHook("layerMeta",prop,hook)}_removeHookDeep(prop,hook){this._removeHookBase(prop,hook);this._removeHook("layerMeta",prop,hook)}_getBase(prop){return this._state[prop]}_get(prop){if(this._layerMeta[prop]){for(let i=this._layers.length-1;i>=0;--i){const val=this._layers[i].data[prop];if(val!=null)return val}}return this._state[prop]}_addLayer(layer){this._layers.push(layer);this._addLayer_addLayerMeta(layer)}_addLayer_addLayerMeta(layer){Object.entries(layer.data).forEach((([k,v])=>this._layerMeta[k]=v!=null))}_removeLayer(layer){const ix=this._layers.indexOf(layer);if(~ix){this._layers.splice(ix,1);Object.keys(this._layerMeta).forEach((k=>delete this._layerMeta[k]));this._layers.forEach((l=>this._addLayer_addLayerMeta(l)))}}updateLayersActive(prop){this._layerMeta[prop]=this._layers.some((l=>l.data[prop]!=null))}getBaseSaveableState(){return{state:MiscUtil.copy(this.__state),layers:MiscUtil.copy(this._layers.map((l=>l.getSaveableState())))}}setBaseSaveableStateFrom(toLoad){toLoad.state&&Object.assign(this._state,toLoad.state);if(toLoad.layers)toLoad.layers.forEach((l=>this._addLayer(CompLayer.fromSavedState(this,l))))}getPod(){this.__pod=this.__pod||{...super.getPod(),addHookDeep:(prop,hook)=>this._addHookDeep(prop,hook),removeHookDeep:(prop,hook)=>this._removeHookDeep(prop,hook),addHookAll:hook=>this._addHookAll("state",hook),getBase:prop=>this._getBase(prop),get:prop=>this._get(prop),addLayer:(name,data)=>{const l=new CompLayer(this,name,data);this._addLayer(l);return l},removeLayer:layer=>this._removeLayer(layer),layers:this._layers};return this.__pod}}class CompLayer extends ProxyBase{constructor(component,layerName,data){super();this._name=layerName;this.__data=data;this.data=this._getProxy("data",this.__data);this._addHookAll("data",(prop=>component.updateLayersActive(prop)))}getSaveableState(){return{name:this._name,data:MiscUtil.copy(this.__data)}}static fromSavedState(component,savedState){return new CompLayer(component,savedState.name,savedState.data)}}const MixinComponentHistory=compClass=>class extends compClass{constructor(){super(...arguments);this._histStackUndo=[];this._histStackRedo=[];this._isHistDisabled=true;this._histPropBlacklist=new Set;this._histPropWhitelist=null;this._histInitialState=null}set isHistDisabled(val){this._isHistDisabled=val}addBlacklistProps(...props){props.forEach((p=>this._histPropBlacklist.add(p)))}addWhitelistProps(...props){this._histPropWhitelist=this._histPropWhitelist||new Set;props.forEach((p=>this._histPropWhitelist.add(p)))}initHistory(){this._histInitialState=MiscUtil.copy(this._state);this._isHistDisabled=false;this._addHookAll("state",(prop=>{if(this._isHistDisabled)return;if(this._histPropBlacklist.has(prop))return;if(this._histPropWhitelist&&!this._histPropWhitelist.has(prop))return;this.recordHistory()}))}recordHistory(){const stateCopy=MiscUtil.copy(this._state);this._histPropBlacklist.forEach((prop=>delete stateCopy[prop]));if(this._histPropWhitelist)Object.keys(stateCopy).filter((k=>!this._histPropWhitelist.has(k))).forEach((k=>delete stateCopy[k]));this._histStackUndo.push(stateCopy);this._histStackRedo=[]}_histAddExcludedProperties(stateCopy){Object.entries(this._state).forEach((([k,v])=>{if(this._histPropBlacklist.has(k))return stateCopy[k]=v;if(this._histPropWhitelist&&!this._histPropWhitelist.has(k))stateCopy[k]=v}))}undo(){if(this._histStackUndo.length){const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const curState=this._histStackUndo.pop();this._histStackRedo.push(curState);const toApply=MiscUtil.copy(this._histStackUndo.last()||this._histInitialState);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}else{const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const toApply=MiscUtil.copy(this._histInitialState);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}}redo(){if(!this._histStackRedo.length)return;const lastHistDisabled=this._isHistDisabled;this._isHistDisabled=true;const toApplyRaw=this._histStackRedo.pop();this._histStackUndo.push(toApplyRaw);const toApply=MiscUtil.copy(toApplyRaw);this._histAddExcludedProperties(toApply);this._setState(toApply);this._isHistDisabled=lastHistDisabled}};class ComponentUiUtil{static trackHook(hooks,prop,hook){hooks[prop]=hooks[prop]||[];hooks[prop].push(hook)}static $getIptInt(component,prop,fallbackEmpty=0,opts){return ComponentUiUtil._$getIptNumeric(component,prop,UiUtil.strToInt,fallbackEmpty,opts)}static $getIptNumber(component,prop,fallbackEmpty=0,opts){return ComponentUiUtil._$getIptNumeric(component,prop,UiUtil.strToNumber,fallbackEmpty,opts)}static _$getIptNumeric(component,prop,fnConvert,fallbackEmpty=0,opts){opts=opts||{};opts.offset=opts.offset||0;const setIptVal=()=>{if(opts.isAllowNull&&component._state[prop]==null){return $ipt.val(null)}const num=(component._state[prop]||0)+opts.offset;const val=opts.padLength?`${num}`.padStart(opts.padLength,"0"):num;$ipt.val(val)};const $ipt=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal text-right">`)).disableSpellcheck().keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).change((()=>{const raw=$ipt.val().trim();const cur=component._state[prop];if(opts.isAllowNull&&!raw)return component._state[prop]=null;if(raw.startsWith("=")){component._state[prop]=fnConvert(raw.slice(1),fallbackEmpty,opts)-opts.offset}else{const mUnary=prevValue!=null&&prevValue<0?/^[+/*^]/.exec(raw):/^[-+/*^]/.exec(raw);if(mUnary){let proc=raw;proc=proc.slice(1).trim();const mod=fnConvert(proc,fallbackEmpty,opts);const full=`${cur}${mUnary[0]}${mod}`;component._state[prop]=fnConvert(full,fallbackEmpty,opts)-opts.offset}else{component._state[prop]=fnConvert(raw,fallbackEmpty,opts)-opts.offset}}if(cur===component._state[prop])setIptVal()}));let prevValue;const hook=()=>{prevValue=component._state[prop];setIptVal()};if(opts.hookTracker)ComponentUiUtil.trackHook(opts.hookTracker,prop,hook);component._addHookBase(prop,hook);hook();if(opts.asMeta)return this._getIptDecoratedMeta(component,prop,$ipt,hook,opts);else return $ipt}static $getIptStr(component,prop,opts){opts=opts||{};if((opts.decorationLeft||opts.decorationRight)&&!opts.asMeta)throw new Error(`Input must be created with "asMeta" option`);const $ipt=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).disableSpellcheck();UiUtil.bindTypingEnd({$ipt:$ipt,fnKeyup:()=>{const nxtVal=opts.isNoTrim?$ipt.val():$ipt.val().trim();component._state[prop]=opts.isAllowNull&&!nxtVal?null:nxtVal}});if(opts.autocomplete&&opts.autocomplete.length)$ipt.typeahead({source:opts.autocomplete});const hook=()=>{if(component._state[prop]==null)$ipt.val(null);else{if($ipt.val().trim()!==component._state[prop])$ipt.val(component._state[prop])}};component._addHookBase(prop,hook);hook();if(opts.asMeta)return this._getIptDecoratedMeta(component,prop,$ipt,hook,opts);else return $ipt}static _getIptDecoratedMeta(component,prop,$ipt,hook,opts){const out={$ipt:$ipt,unhook:()=>component._removeHookBase(prop,hook)};if(opts.decorationLeft||opts.decorationRight){let $decorLeft;let $decorRight;if(opts.decorationLeft){$ipt.addClass(`ui-ideco__ipt ui-ideco__ipt--left`);$decorLeft=ComponentUiUtil._$getDecor(component,prop,$ipt,opts.decorationLeft,"left",opts)}if(opts.decorationRight){$ipt.addClass(`ui-ideco__ipt ui-ideco__ipt--right`);$decorRight=ComponentUiUtil._$getDecor(component,prop,$ipt,opts.decorationRight,"right",opts)}out.$wrp=$$`<div class="relative w-100">${$ipt}${$decorLeft}${$decorRight}</div>`}return out}static _$getDecor(component,prop,$ipt,decorType,side,opts){switch(decorType){case"search":{return $(`<div class="ui-ideco__wrp ui-ideco__wrp--${side} no-events flex-vh-center"><span class="glyphicon glyphicon-search"></span></div>`)}case"clear":{return $(`<div class="ui-ideco__wrp ui-ideco__wrp--${side} flex-vh-center clickable" title="Clear"><span class="glyphicon glyphicon-remove"></span></div>`).click((()=>$ipt.val("").change().keydown().keyup()))}case"ticker":{const isValidValue=val=>{if(opts.max!=null&&val>opts.max)return false;if(opts.min!=null&&val<opts.min)return false;return true};const handleClick=delta=>{const nxt=component._state[prop]+delta;if(!isValidValue(nxt))return;component._state[prop]=nxt;$ipt.focus()};const $btnUp=$(`<button class="btn btn-default ui-ideco__btn-ticker bold no-select">+</button>`).click((()=>handleClick(1)));const $btnDown=$(`<button class="btn btn-default ui-ideco__btn-ticker bold no-select">‒</button>`).click((()=>handleClick(-1)));return $$`<div class="ui-ideco__wrp ui-ideco__wrp--${side} flex-vh-center flex-col">
					${$btnUp}
					${$btnDown}
				</div>`}case"spacer":{return""}default:throw new Error(`Unimplemented!`)}}static $getIptEntries(component,prop,opts){opts=opts||{};const $ipt=(opts.$ele||$(`<textarea class="form-control input-xs form-control--minimal resize-vertical"></textarea>`)).keydown((evt=>{if(evt.key==="Escape")$ipt.blur()})).change((()=>component._state[prop]=UiUtil.getTextAsEntries($ipt.val().trim())));const hook=()=>$ipt.val(UiUtil.getEntriesAsText(component._state[prop]));component._addHookBase(prop,hook);hook();return $ipt}static $getIptColor(component,prop,opts){opts=opts||{};const $ipt=(opts.$ele||$(`<input class="form-control input-xs form-control--minimal ui__ipt-color" type="color">`)).change((()=>component._state[prop]=$ipt.val()));const hook=()=>$ipt.val(component._state[prop]);component._addHookBase(prop,hook);hook();return $ipt}static getBtnBool(component,prop,opts){opts=opts||{};let ele=opts.ele;if(opts.html)ele=e_({outer:opts.html});const activeClass=opts.activeClass||"active";const stateName=opts.stateName||"state";const stateProp=opts.stateProp||"_state";const btn=(ele?e_({ele:ele}):e_({ele:ele,tag:"button",clazz:"btn btn-xs btn-default",text:opts.text||"Toggle"})).onClick((()=>component[stateProp][prop]=!component[stateProp][prop])).onContextmenu((evt=>{evt.preventDefault();component[stateProp][prop]=!component[stateProp][prop]}));const hk=()=>{btn.toggleClass(activeClass,opts.isInverted?!component[stateProp][prop]:!!component[stateProp][prop]);if(opts.activeTitle||opts.inactiveTitle)btn.title(component[stateProp][prop]?opts.activeTitle||opts.title||"":opts.inactiveTitle||opts.title||"");if(opts.fnHookPost)opts.fnHookPost(component[stateProp][prop])};component._addHook(stateName,prop,hk);hk();return btn}static $getBtnBool(component,prop,opts){const nxtOpts={...opts};if(nxtOpts.$ele){nxtOpts.ele=nxtOpts.$ele[0];delete nxtOpts.$ele}return $(this.getBtnBool(component,prop,nxtOpts))}static $getCbBool(component,prop,opts){opts=opts||{};const $cb=(opts.$ele||$(`<input type="checkbox">`)).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).change((()=>component._state[prop]=$cb.prop("checked")));const hook=()=>$cb.prop("checked",!!component._state[prop]);component._addHookBase(prop,hook);hook();return opts.asMeta?{$cb:$cb,unhook:()=>component._removeHookBase(prop,hook)}:$cb}static $getSelSearchable(comp,prop,opts){opts=opts||{};const $iptDisplay=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).addClass("ui-sel2__ipt-display").attr("tabindex","-1").click((()=>{if(opts.isDisabled)return;$iptSearch.focus().select()})).prop("disabled",!!opts.isDisabled).disableSpellcheck();const handleSearchChange=()=>{const cleanTerm=this._$getSelSearchable_getSearchString($iptSearch.val());metaOptions.forEach((it=>{it.isVisible=it.searchTerm.includes(cleanTerm);it.$ele.toggleVe(it.isVisible&&!it.isForceHidden)}))};const handleSearchChangeDebounced=MiscUtil.debounce(handleSearchChange,30);const $iptSearch=(opts.$ele||$(opts.html||`<input class="form-control input-xs form-control--minimal">`)).addClass("absolute ui-sel2__ipt-search").keydown((evt=>{if(opts.isDisabled)return;switch(evt.key){case"Escape":evt.stopPropagation();return $iptSearch.blur();case"ArrowDown":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible&&!it.isForceHidden));if(!visibleMetaOptions.length)return;visibleMetaOptions[0].$ele.focus();break}case"Enter":{const visibleMetaOptions=metaOptions.filter((it=>it.isVisible&&!it.isForceHidden));if(!visibleMetaOptions.length)return;comp._state[prop]=visibleMetaOptions[0].value;$iptSearch.blur();break}default:handleSearchChangeDebounced()}})).change((()=>handleSearchChangeDebounced())).click((()=>{if(opts.isDisabled)return;$iptSearch.focus().select()})).prop("disabled",!!opts.isDisabled).disableSpellcheck();const $wrpChoices=$(`<div class="absolute ui-sel2__wrp-options overflow-y-scroll"></div>`);const $wrp=$$`<div class="flex relative ui-sel2__wrp w-100">
			${$iptDisplay}
			${$iptSearch}
			${$wrpChoices}
			<div class="ui-sel2__disp-arrow absolute no-events bold"><span class="glyphicon glyphicon-menu-down"></span></div>
		</div>`;const procValues=opts.isAllowNull?[null,...opts.values]:opts.values;const metaOptions=procValues.map(((v,i)=>{const display=v==null?opts.displayNullAs||"—":opts.fnDisplay?opts.fnDisplay(v):v;const $ele=$(`<div class="flex-v-center py-1 px-1 clickable ui-sel2__disp-option ${v==null?`italic`:""}" tabindex="${i}">${display}</div>`).click((()=>{if(opts.isDisabled)return;comp._state[prop]=v;$(document.activeElement).blur();$wrp.addClass("no-events");setTimeout((()=>$wrp.removeClass("no-events")),50)})).keydown((evt=>{if(opts.isDisabled)return;switch(evt.key){case"Escape":evt.stopPropagation();return $ele.blur();case"ArrowDown":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible&&!it.isForceHidden));if(!visibleMetaOptions.length)return;const ixCur=visibleMetaOptions.indexOf(out);const nxt=visibleMetaOptions[ixCur+1];if(nxt)nxt.$ele.focus();break}case"ArrowUp":{evt.preventDefault();const visibleMetaOptions=metaOptions.filter((it=>it.isVisible&&!it.isForceHidden));if(!visibleMetaOptions.length)return;const ixCur=visibleMetaOptions.indexOf(out);const prev=visibleMetaOptions[ixCur-1];if(prev)return prev.$ele.focus();$iptSearch.focus();break}case"Enter":{comp._state[prop]=v;$ele.blur();break}}})).appendTo($wrpChoices);const isForceHidden=opts.isHiddenPerValue&&!!(opts.isAllowNull?opts.isHiddenPerValue[i-1]:opts.isHiddenPerValue[i]);if(isForceHidden)$ele.hideVe();const out={value:v,isVisible:true,isForceHidden:isForceHidden,searchTerm:this._$getSelSearchable_getSearchString(display),$ele:$ele};return out}));const fnUpdateHidden=(isHiddenPerValue,isHideNull=false)=>{let metaOptions_=metaOptions;if(opts.isAllowNull){metaOptions_[0].isForceHidden=isHideNull;metaOptions_=metaOptions_.slice(1)}metaOptions_.forEach(((it,i)=>it.isForceHidden=!!isHiddenPerValue[i]));handleSearchChange()};const hk=()=>{if(comp._state[prop]==null)$iptDisplay.addClass("italic").addClass("ve-muted").val(opts.displayNullAs||"—");else $iptDisplay.removeClass("italic").removeClass("ve-muted").val(opts.fnDisplay?opts.fnDisplay(comp._state[prop]):comp._state[prop]);metaOptions.forEach((it=>it.$ele.removeClass("active")));const metaActive=metaOptions.find((it=>it.value==null?comp._state[prop]==null:it.value===comp._state[prop]));if(metaActive)metaActive.$ele.addClass("active")};comp._addHookBase(prop,hk);hk();return opts.asMeta?{$wrp:$wrp,unhook:()=>comp._removeHookBase(prop,hk),$iptDisplay:$iptDisplay,$iptSearch:$iptSearch,fnUpdateHidden:fnUpdateHidden}:$wrp}static _$getSelSearchable_getSearchString(str){if(str==null)return"";return str.trim().toLowerCase().replace(/\s+/g," ")}static $getSelEnum(component,prop,opts){opts=opts||{};let values;let $sel=opts.$ele?opts.$ele:opts.html?$(opts.html):null;if(!$sel){const sel=document.createElement("select");sel.className="form-control input-xs";$sel=$(sel)}$sel.change((()=>{const ix=Number($sel.val());if(~ix)component._state[prop]=values[ix];else{if(opts.isAllowNull)component._state[prop]=null;else component._state[prop]=values[0]}}));const setValues=(nxtValues,{isResetOnMissing:isResetOnMissing=false}={})=>{if(CollectionUtil.deepEquals(values,nxtValues))return;values=nxtValues;$sel.empty();if(opts.isAllowNull){const opt=document.createElement("option");opt.value="-1";opt.text=opts.displayNullAs||"—";$sel.append(opt)}values.forEach(((it,i)=>{const opt=document.createElement("option");opt.value=`${i}`;opt.text=opts.fnDisplay?opts.fnDisplay(it):it;$sel.append(opt)}));if(isResetOnMissing){if(component._state[prop]!=null&&!nxtValues.includes(component._state[prop])){if(opts.isAllowNull)return component._state[prop]=null;else return component._state[prop]=nxtValues[0]}}hook()};const hook=()=>{const searchFor=component._state[prop]===undefined?null:component._state[prop];const ix=values.indexOf(searchFor);$sel.val(`${ix}`)};component._addHookBase(prop,hook);setValues(opts.values);if(!opts.asMeta)return $sel;return{$sel:$sel,unhook:()=>component._removeHookBase(prop,hook),setValues:setValues}}static $getPickEnum(component,prop,opts){return this._$getPickEnumOrString(component,prop,opts)}static $getPickString(component,prop,opts){return this._$getPickEnumOrString(component,prop,{...opts,isFreeText:true})}static _$getPickEnumOrString(component,prop,opts){opts=opts||{};const getSubcompValues=()=>{const initialValuesArray=(opts.values||[]).concat(opts.isFreeText?MiscUtil.copy(component._state[prop]||[]):[]);const initialValsCompWith=opts.isCaseInsensitive?component._state[prop].map((it=>it.toLowerCase())):component._state[prop];return initialValuesArray.map((v=>opts.isCaseInsensitive?v.toLowerCase():v)).mergeMap((v=>({[v]:component._state[prop]&&initialValsCompWith.includes(v)})))};const initialVals=getSubcompValues();let $btnAdd;if(opts.isFreeText){$btnAdd=$(`<button class="btn btn-xxs btn-default ui-pick__btn-add">+</button>`).click((async()=>{const input=await InputUiUtil.pGetUserString();if(input==null||input===VeCt.SYM_UI_SKIP)return;const inputClean=opts.isCaseInsensitive?input.trim().toLowerCase():input.trim();pickComp.getPod().set(inputClean,true)}))}else{const menu=ContextUtil.getMenu(opts.values.map((it=>new ContextUtil.Action(opts.fnDisplay?opts.fnDisplay(it):it,(()=>pickComp.getPod().set(it,true))))));$btnAdd=$(`<button class="btn btn-xxs btn-default ui-pick__btn-add">+</button>`).click((evt=>ContextUtil.pOpenMenu(evt,menu)))}const pickComp=BaseComponent.fromObject(initialVals);pickComp.render=function($parent){$parent.empty();Object.entries(this._state).forEach((([k,v])=>{if(v===false)return;const $btnRemove=$(`<button class="btn btn-danger ui-pick__btn-remove text-center">×</button>`).click((()=>this._state[k]=false));$$`<div class="flex mx-1 mb-1 ui-pick__disp-pill"><div class="px-1 ui-pick__disp-text flex-v-center">${opts.fnDisplay?opts.fnDisplay(k):k}</div>${$btnRemove}</div>`.appendTo($parent)}))};const $wrpPills=$(`<div class="flex flex-wrap w-100"></div>`);const $wrp=$$`<div class="flex-v-center">${$btnAdd}${$wrpPills}</div>`;pickComp._addHookAll("state",(()=>{component._state[prop]=Object.keys(pickComp._state).filter((k=>pickComp._state[k]));pickComp.render($wrpPills)}));pickComp.render($wrpPills);const hkParent=()=>pickComp._proxyAssignSimple("state",getSubcompValues(),true);component._addHookBase(prop,hkParent);return $wrp}static $getCbsEnum(component,prop,opts){opts=opts||{};const $wrp=$(`<div class="flex-col w-100"></div>`);const metas=opts.values.map((it=>{const $cb=$(`<input type="checkbox">`).keydown((evt=>{if(evt.key==="Escape")$cb.blur()})).change((()=>{let didUpdate=false;const ix=(component._state[prop]||[]).indexOf(it);if(~ix)component._state[prop].splice(ix,1);else{if(component._state[prop])component._state[prop].push(it);else{didUpdate=true;component._state[prop]=[it]}}if(!didUpdate)component._state[prop]=[...component._state[prop]]}));$$`<label class="split-v-center my-1 stripe-odd ${opts.isIndent?"ml-4":""}"><div class="no-wrap flex-v-center">${opts.fnDisplay?opts.fnDisplay(it):it}</div>${$cb}</label>`.appendTo($wrp);return{$cb:$cb,value:it}}));const hook=()=>metas.forEach((meta=>meta.$cb.prop("checked",component._state[prop]&&component._state[prop].includes(meta.value))));component._addHookBase(prop,hook);hook();return opts.asMeta?{$wrp:$wrp,unhook:()=>component._removeHookBase(prop,hook)}:$wrp}static getMetaWrpMultipleChoice(comp,prop,opts){opts=opts||{};this._getMetaWrpMultipleChoice_doValidateOptions(opts);const rowMetas=[];const $eles=[];const ixsSelectionOrder=[];const propIsAcceptable=this.getMetaWrpMultipleChoice_getPropIsAcceptable(prop);const propPulse=this.getMetaWrpMultipleChoice_getPropPulse(prop);const propIxMax=this._getMetaWrpMultipleChoice_getPropValuesLength(prop);const cntRequired=(opts.required||[]).length+(opts.ixsRequired||[]).length;const count=opts.count!=null?opts.count-cntRequired:null;const min=opts.min!=null?opts.min-cntRequired:null;const max=opts.max!=null?opts.max-cntRequired:null;const valueGroups=opts.valueGroups||[{values:opts.values}];let ixValue=0;valueGroups.forEach(((group,i)=>{if(i!==0)$eles.push($(`<hr class="w-100 hr-2 hr--dotted">`));if(group.name){const $wrpName=$$`<div class="split-v-center py-1">
					<div class="flex-v-center"><span class="mr-2">‒</span><span>${group.name}</span></div>
					${opts.valueGroupSplitControlsLookup?.[group.name]}
				</div>`;$eles.push($wrpName)}if(group.text)$eles.push($(`<div class="flex-v-center py-1"><div class="ml-1 mr-3"></div><i>${group.text}</i></div>`));group.values.forEach((v=>{const ixValueFrozen=ixValue;const propIsActive=this.getMetaWrpMultipleChoice_getPropIsActive(prop,ixValueFrozen);const propIsRequired=this.getMetaWrpMultipleChoice_getPropIsRequired(prop,ixValueFrozen);const isHardRequired=opts.required&&opts.required.includes(v)||opts.ixsRequired&&opts.ixsRequired.includes(ixValueFrozen);const isRequired=isHardRequired||comp._state[propIsRequired];if(comp._state[propIsActive]&&!comp._state[propIsRequired])ixsSelectionOrder.push(ixValueFrozen);let hk;const $cb=isRequired?$(`<input type="checkbox" disabled checked title="This option is required.">`):ComponentUiUtil.$getCbBool(comp,propIsActive);if(!isRequired){hk=()=>{const ixIx=ixsSelectionOrder.findIndex((it=>it===ixValueFrozen));if(~ixIx)ixsSelectionOrder.splice(ixIx,1);if(comp._state[propIsActive])ixsSelectionOrder.push(ixValueFrozen);const activeRows=rowMetas.filter((it=>comp._state[it.propIsActive]));if(count!=null){if(activeRows.length>count){const ixFirstSelected=ixsSelectionOrder.splice(ixsSelectionOrder.length-2,1)[0];if(ixFirstSelected!=null){const propIsActiveOther=this.getMetaWrpMultipleChoice_getPropIsActive(prop,ixFirstSelected);comp._state[propIsActiveOther]=false;comp._state[propPulse]=!comp._state[propPulse]}return}}let isAcceptable=false;if(count!=null){if(activeRows.length===count)isAcceptable=true}else{if(activeRows.length>=(min||0)&&activeRows.length<=(max||Number.MAX_SAFE_INTEGER))isAcceptable=true}comp._state[propIsAcceptable]=isAcceptable;comp._state[propPulse]=!comp._state[propPulse]};comp._addHookBase(propIsActive,hk);hk()}const displayValue=opts.fnDisplay?opts.fnDisplay(v,ixValueFrozen):v;rowMetas.push({$cb:$cb,displayValue:displayValue,value:v,propIsActive:propIsActive,unhook:()=>{if(hk)comp._removeHookBase(propIsActive,hk)}});$eles.push($$`<label class="flex-v-center py-1 stripe-even">
					<div class="col-1 flex-vh-center">${$cb}</div>
					<div class="col-11 flex-v-center">${displayValue}</div>
				</label>`);ixValue++}))}));ixsSelectionOrder.sort(((a,b)=>SortUtil.ascSort(a,b)));comp.__state[propIxMax]=ixValue;const unhook=()=>rowMetas.forEach((it=>it.unhook()));return{$ele:$$`<div class="flex-col w-100 overflow-y-auto">${$eles}</div>`,rowMetas:rowMetas,propIsAcceptable:propIsAcceptable,propPulse:propPulse,unhook:unhook,cleanup:()=>{unhook();Object.keys(comp._state).filter((it=>it.startsWith(`${prop}__`))).forEach((it=>delete comp._state[it]))}}}static getMetaWrpMultipleChoice_getPropIsAcceptable(prop){return`${prop}__isAcceptable`}static getMetaWrpMultipleChoice_getPropPulse(prop){return`${prop}__pulse`}static _getMetaWrpMultipleChoice_getPropValuesLength(prop){return`${prop}__length`}static getMetaWrpMultipleChoice_getPropIsActive(prop,ixValue){return`${prop}__isActive_${ixValue}`}static getMetaWrpMultipleChoice_getPropIsRequired(prop,ixValue){return`${prop}__isRequired_${ixValue}`}static getMetaWrpMultipleChoice_getSelectedIxs(comp,prop){const out=[];const len=comp._state[this._getMetaWrpMultipleChoice_getPropValuesLength(prop)]||0;for(let i=0;i<len;++i){if(comp._state[this.getMetaWrpMultipleChoice_getPropIsActive(prop,i)])out.push(i)}return out}static getMetaWrpMultipleChoice_getSelectedValues(comp,prop,{values:values,valueGroups:valueGroups}){const selectedIxs=this.getMetaWrpMultipleChoice_getSelectedIxs(comp,prop);if(values)return selectedIxs.map((ix=>values[ix]));const selectedIxsSet=new Set(selectedIxs);const out=[];let ixValue=0;valueGroups.forEach((group=>{group.values.forEach((v=>{if(selectedIxsSet.has(ixValue))out.push(v);ixValue++}))}));return out}static _getMetaWrpMultipleChoice_doValidateOptions(opts){if(Number(!!opts.values)+Number(!!opts.valueGroups)!==1)throw new Error(`Exactly one of "values" and "valueGroups" must be specified!`);if(opts.count!=null&&(opts.min!=null||opts.max!=null))throw new Error(`Chooser must be either in "count" mode or "min/max" mode!`);if(opts.count==null&&opts.min==null&&opts.max==null)opts.count=1}static $getSliderRange(comp,opts){opts=opts||{};const slider=new ComponentUiUtil.RangeSlider({comp:comp,...opts});return slider.$get()}}ComponentUiUtil.RangeSlider=class{constructor({comp:comp,propMin:propMin,propMax:propMax,propCurMin:propCurMin,propCurMax:propCurMax,fnDisplay:fnDisplay}){this._comp=comp;this._propMin=propMin;this._propMax=propMax;this._propCurMin=propCurMin;this._propCurMax=propCurMax;this._fnDisplay=fnDisplay;this._isSingle=!this._propCurMax;const compCpyState={[this._propMin]:this._comp._state[this._propMin],[this._propCurMin]:this._comp._state[this._propCurMin],[this._propMax]:this._comp._state[this._propMax]};if(!this._isSingle)compCpyState[this._propCurMax]=this._comp._state[this._propCurMax];this._compCpy=BaseComponent.fromObject(compCpyState);this._comp._addHook("state",this._propMin,(()=>this._compCpy._state[this._propMin]=this._comp._state[this._propMin]));this._comp._addHook("state",this._propCurMin,(()=>this._compCpy._state[this._propCurMin]=this._comp._state[this._propCurMin]));this._comp._addHook("state",this._propMax,(()=>this._compCpy._state[this._propMax]=this._comp._state[this._propMax]));if(!this._isSingle)this._comp._addHook("state",this._propCurMax,(()=>this._compCpy._state[this._propCurMax]=this._comp._state[this._propCurMax]));this._cacheRendered=null;this._dispTrackOuter=null;this._dispTrackInner=null;this._thumbLow=null;this._thumbHigh=null;this._dragMeta=null}$get(){const out=this.get();return $(out)}get(){this.constructor._init();this.constructor._ALL_SLIDERS.add(this);if(this._cacheRendered)return this._cacheRendered;const dispValueLeft=this._isSingle?this._getSpcSingleValue():this._getDispValue({isVisible:true,side:"left"});const dispValueRight=this._getDispValue({isVisible:true,side:"right"});this._dispTrackInner=this._isSingle?null:e_({tag:"div",clazz:"ui-slidr__track-inner h-100 absolute"});this._thumbLow=this._getThumb();this._thumbHigh=this._isSingle?null:this._getThumb();this._dispTrackOuter=e_({tag:"div",clazz:`relative w-100 ui-slidr__track-outer`,children:[this._dispTrackInner,this._thumbLow,this._thumbHigh].filter(Boolean)});const wrpTrack=e_({tag:"div",clazz:`flex-v-center w-100 h-100 ui-slidr__wrp-track clickable`,mousedown:evt=>{const thumb=this._getClosestThumb(evt);this._handleMouseDown(evt,thumb)},children:[this._dispTrackOuter]});const wrpTop=e_({tag:"div",clazz:"flex-v-center w-100 ui-slidr__wrp-top",children:[dispValueLeft,wrpTrack,dispValueRight].filter(Boolean)});const wrpPips=e_({tag:"div",clazz:`w-100 flex relative clickable h-100 ui-slidr__wrp-pips`,mousedown:evt=>{const thumb=this._getClosestThumb(evt);this._handleMouseDown(evt,thumb)}});const wrpBottom=e_({tag:"div",clazz:"w-100 flex-vh-center ui-slidr__wrp-bottom",children:[this._isSingle?this._getSpcSingleValue():this._getDispValue({side:"left"}),wrpPips,this._getDispValue({side:"right"})].filter(Boolean)});const hkChangeValue=()=>{const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const curMin=this._compCpy._state[this._propCurMin];const pctMin=(curMin-min)/(max-min)*100;this._thumbLow.style.left=`calc(${pctMin}% - ${this.constructor._W_THUMB_PX/2}px)`;const toDisplayLeft=this._fnDisplay?`${this._fnDisplay(curMin)}`.qq():curMin;if(!this._isSingle)dispValueLeft.html(toDisplayLeft);if(!this._isSingle){this._dispTrackInner.style.left=`${pctMin}%`;const curMax=this._compCpy._state[this._propCurMax];const pctMax=(curMax-min)/(max-min)*100;this._dispTrackInner.style.right=`${100-pctMax}%`;this._thumbHigh.style.left=`calc(${pctMax}% - ${this.constructor._W_THUMB_PX/2}px)`;dispValueRight.html(this._fnDisplay?`${this._fnDisplay(curMax)}`.qq():curMax)}else{dispValueRight.html(toDisplayLeft)}};const hkChangeLimit=()=>{const pips=[];const numPips=this._compCpy._state[this._propMax]-this._compCpy._state[this._propMin];let pipIncrement=1;if(numPips>ComponentUiUtil.RangeSlider._MAX_PIPS)pipIncrement=Math.ceil(numPips/ComponentUiUtil.RangeSlider._MAX_PIPS);let i,len;for(i=this._compCpy._state[this._propMin],len=this._compCpy._state[this._propMax]+1;i<len;i+=pipIncrement){pips.push(this._getWrpPip({isMajor:i===this._compCpy._state[this._propMin]||i===len-1,value:i}))}if(i!==this._compCpy._state[this._propMax])pips.push(this._getWrpPip({isMajor:true,value:this._compCpy._state[this._propMax]}));wrpPips.empty();e_({ele:wrpPips,children:pips});hkChangeValue()};this._compCpy._addHook("state",this._propMin,hkChangeLimit);this._compCpy._addHook("state",this._propMax,hkChangeLimit);this._compCpy._addHook("state",this._propCurMin,hkChangeValue);if(!this._isSingle)this._compCpy._addHook("state",this._propCurMax,hkChangeValue);hkChangeLimit();const wrp=e_({tag:"div",clazz:"flex-col w-100 ui-slidr__wrp",children:[wrpTop,wrpBottom]});return this._cacheRendered=wrp}destroy(){this.constructor._ALL_SLIDERS.delete(this);if(this._cacheRendered)this._cacheRendered.remove()}_getDispValue({isVisible:isVisible,side:side}){return e_({tag:"div",clazz:`overflow-hidden ui-slidr__disp-value no-shrink no-grow flex-vh-center bold no-select ${isVisible?`ui-slidr__disp-value--visible`:""} ui-slidr__disp-value--${side}`})}_getSpcSingleValue(){return e_({tag:"div",clazz:`px-2`})}_getThumb(){const thumb=e_({tag:"div",clazz:"ui-slidr__thumb absolute clickable",mousedown:evt=>this._handleMouseDown(evt,thumb)}).attr("draggable",true);return thumb}_getWrpPip({isMajor:isMajor,value:value}={}){const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const pctValue=(value-min)/(max-min)*100;const posLeft=`${pctValue}%`;const styleLeft=`left: ${posLeft};`;const pip=e_({tag:"div",clazz:`ui-slidr__pip ${isMajor?`ui-slidr__pip--major`:`absolute`}`});const dispLabel=e_({tag:"div",clazz:"absolute ui-slidr__pip-label flex-vh-center ve-small no-wrap",html:isMajor?this._fnDisplay?`${this._fnDisplay(value)}`.qq():value:""});return e_({tag:"div",clazz:"flex-col flex-vh-center absolute no-select",children:[pip,dispLabel],style:styleLeft})}_getRelativeValue(evt,{trackOriginX:trackOriginX,trackWidth:trackWidth}){const min=this._compCpy._state[this._propMin];const max=this._compCpy._state[this._propMax];const xEvt=EventUtil.getClientX(evt)-trackOriginX;const rawVal=min+Math.round(xEvt/trackWidth*(max-min));return Math.min(max,Math.max(min,rawVal))}_getClosestThumb(evt){if(this._isSingle)return this._thumbLow;const{x:trackOriginX,width:trackWidth}=this._dispTrackOuter.getBoundingClientRect();const value=this._getRelativeValue(evt,{trackOriginX:trackOriginX,trackWidth:trackWidth});if(value<this._compCpy._state[this._propCurMin])return this._thumbLow;if(value>this._compCpy._state[this._propCurMax])return this._thumbHigh;const{distToMin:distToMin,distToMax:distToMax}=this._getDistsToCurrentMinAndMax(value);if(distToMax<distToMin)return this._thumbHigh;return this._thumbLow}_getDistsToCurrentMinAndMax(value){if(this._isSingle)throw new Error(`Can not get distance to max value for singleton slider!`);const distToMin=Math.abs(this._compCpy._state[this._propCurMin]-value);const distToMax=Math.abs(this._compCpy._state[this._propCurMax]-value);return{distToMin:distToMin,distToMax:distToMax}}_handleClick(evt,value){evt.stopPropagation();evt.preventDefault();if(value<this._compCpy._state[this._propCurMin])this._compCpy._state[this._propCurMin]=value;if(value>this._compCpy._state[this._propCurMax])this._compCpy._state[this._propCurMax]=value;const{distToMin:distToMin,distToMax:distToMax}=this._getDistsToCurrentMinAndMax(value);if(distToMax<distToMin)this._compCpy._state[this._propCurMax]=value;else this._compCpy._state[this._propCurMin]=value}_handleMouseDown(evt,thumb){evt.preventDefault();evt.stopPropagation();const{x:trackOriginX,width:trackWidth}=this._dispTrackOuter.getBoundingClientRect();thumb.addClass(`ui-slidr__thumb--hover`);this._dragMeta={trackOriginX:trackOriginX,trackWidth:trackWidth,thumb:thumb};this._handleMouseMove(evt)}_handleMouseUp(){const wasActive=this._doDragCleanup();if(wasActive){const nxtState={[this._propMin]:this._compCpy._state[this._propMin],[this._propMax]:this._compCpy._state[this._propMax],[this._propCurMin]:this._compCpy._state[this._propCurMin]};if(!this._isSingle)nxtState[this._propCurMax]=this._compCpy._state[this._propCurMax];this._comp._proxyAssignSimple("state",nxtState)}}_handleMouseMove(evt){if(!this._dragMeta)return;const val=this._getRelativeValue(evt,this._dragMeta);if(this._dragMeta.thumb===this._thumbLow){if(val>this._compCpy._state[this._propCurMax])return;this._compCpy._state[this._propCurMin]=val}else if(this._dragMeta.thumb===this._thumbHigh){if(val<this._compCpy._state[this._propCurMin])return;this._compCpy._state[this._propCurMax]=val}}_doDragCleanup(){const isActive=this._dragMeta!=null;if(this._dragMeta?.thumb)this._dragMeta.thumb.removeClass(`ui-slidr__thumb--hover`);this._dragMeta=null;return isActive}static _init(){if(this._isInit)return;document.addEventListener("mousemove",(evt=>{for(const slider of this._ALL_SLIDERS){slider._handleMouseMove(evt)}}));document.addEventListener("mouseup",(evt=>{for(const slider of this._ALL_SLIDERS){slider._handleMouseUp(evt)}}))}};ComponentUiUtil.RangeSlider._isInit=false;ComponentUiUtil.RangeSlider._ALL_SLIDERS=new Set;ComponentUiUtil.RangeSlider._W_THUMB_PX=16;ComponentUiUtil.RangeSlider._W_LABEL_PX=24;ComponentUiUtil.RangeSlider._MAX_PIPS=40;const utilsUiExports={ProxyBase:ProxyBase,UiUtil:UiUtil,ListUiUtil:ListUiUtil,ProfUiUtil:ProfUiUtil,TabUiUtil:TabUiUtil,SearchUiUtil:SearchUiUtil,SearchWidget:SearchWidget,InputUiUtil:InputUiUtil,DragReorderUiUtil:DragReorderUiUtil,SourceUiUtil:SourceUiUtil,BaseComponent:BaseComponent,ComponentUiUtil:ComponentUiUtil,RenderableCollectionBase:RenderableCollectionBase};if(typeof module!=="undefined")module.exports=utilsUiExports;else Object.assign(window,utilsUiExports);;
"use strict";if(typeof require!=="undefined"){require("../js/utils.js");require("../js/render.js");require("../js/render-dice.js")}class Omnidexer{constructor(id=0){this._index=[];this.id=id;this._metaMap={};this._metaIndices={}}getIndex(){return{x:this._index,m:this._metaMap}}static decompressIndex(indexGroup){const{x:x,m:m}=indexGroup;const props=new Set;const lookup={};Object.keys(m).forEach((k=>{props.add(k);Object.entries(m[k]).forEach((([kk,vv])=>(lookup[k]=lookup[k]||{})[vv]=kk))}));x.forEach((it=>Object.keys(it).filter((k=>props.has(k))).forEach((k=>it[k]=lookup[k][it[k]]||it[k]))));return x}static getProperty(obj,withDots){return withDots.split(".").reduce(((o,i)=>o[i]),obj)}async pAddToIndex(arbiter,json,options){options=options||{};const index=this._index;let id=this.id;const getToAdd=(it,toMerge,i)=>{const src=Omnidexer.getProperty(it,arbiter.source||"source");const hash=arbiter.hashBuilder?arbiter.hashBuilder(it,i):UrlUtil.URL_TO_HASH_BUILDER[arbiter.baseUrl](it);const toAdd={c:arbiter.category,s:this.getMetaId("s",src),id:id++,u:hash,p:Omnidexer.getProperty(it,arbiter.page||"page")};if(arbiter.isHover)toAdd.h=1;if(options.alt){if(options.alt.additionalProperties)Object.entries(options.alt.additionalProperties).forEach((([k,getV])=>toAdd[k]=getV(it)))}Object.assign(toAdd,toMerge);return toAdd};const pHandleItem=async(it,i,name)=>{if(it.noDisplay)return;if(name)name=name.toAscii();const toAdd=getToAdd(it,{n:name},i);if((options.isNoFilter||!arbiter.include&&!(arbiter.filter&&arbiter.filter(it))||!arbiter.filter&&(!arbiter.include||arbiter.include(it)))&&!arbiter.isOnlyDeep)index.push(toAdd);const primary={it:it,ix:i,parentName:name};const deepItems=await arbiter.pGetDeepIndex(this,primary,it);deepItems.forEach((item=>{const toAdd=getToAdd(it,item);if(!arbiter.filter||!arbiter.filter(it))index.push(toAdd)}))};const dataArr=Omnidexer.getProperty(json,arbiter.listProp);if(dataArr){for(let i=0;i<dataArr.length;++i){const it=dataArr[i];const name=Omnidexer.getProperty(it,arbiter.primary||"name");await pHandleItem(it,i,name);if(it.alias)it.alias.forEach((a=>pHandleItem(it,i,a)))}}this.id=id}pushToIndex(item){item.id=this.id++;this._index.push(item)}getMetaId(k,v){this._metaMap[k]=this._metaMap[k]||{};if(this._metaMap[k][v]!=null)return this._metaMap[k][v];else{this._metaIndices[k]=this._metaIndices[k]||0;this._metaMap[k][v]=this._metaIndices[k];const out=this._metaIndices[k];this._metaIndices[k]++;return out}}}class IndexableDirectory{constructor(opts){this.category=opts.category;this.dir=opts.dir;this.primary=opts.primary;this.source=opts.source;this.listProp=opts.listProp;this.brewProp=opts.brewProp;this.baseUrl=opts.baseUrl;this.isHover=opts.isHover;this.alternateIndexes=opts.alternateIndexes;this.isOnlyDeep=opts.isOnlyDeep;this.pFnPreProcBrew=opts.pFnPreProcBrew}pGetDeepIndex(){return[]}}class IndexableDirectoryBestiary extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CREATURE,dir:"bestiary",primary:"name",source:"source",listProp:"monster",baseUrl:"bestiary.html",isHover:true})}}class IndexableDirectorySpells extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SPELL,dir:"spells",primary:"name",source:"source",listProp:"spell",baseUrl:"spells.html",isHover:true,alternateIndexes:{spell:{additionalProperties:{lvl:spell=>spell.level}}}})}}class IndexableDirectoryClass extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CLASS,dir:"class",primary:"name",source:"source",listProp:"class",baseUrl:"classes.html",isHover:true})}}class IndexableDirectorySubclass extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SUBCLASS,dir:"class",primary:"name",source:"source",listProp:"subclass",brewProp:"subclass",baseUrl:"classes.html",isHover:true,isOnlyDeep:true})}pGetDeepIndex(indexer,primary,sc){return[{b:sc.name,n:`${sc.name} (${sc.className})`,s:indexer.getMetaId("s",sc.source),u:`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:sc.className,source:sc.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc})}`,p:sc.page}]}}class IndexableDirectoryClassFeature extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_CLASS_FEATURE,dir:"class",primary:"name",source:"source",listProp:"classFeature",baseUrl:"classes.html",isOnlyDeep:true,isHover:true})}async pGetDeepIndex(indexer,primary,it){const ixFeature=0;const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:it.level-1,ixFeature:ixFeature}})}`;return[{n:`${it.className} ${it.level}; ${it.name}`,s:it.source,u:UrlUtil.URL_TO_HASH_BUILDER["classFeature"](it),uh:classPageHash,p:it.page}]}}class IndexableDirectorySubclassFeature extends IndexableDirectory{constructor(){super({category:Parser.CAT_ID_SUBCLASS_FEATURE,dir:"class",primary:"name",source:"source",listProp:"subclassFeature",baseUrl:"classes.html",isOnlyDeep:true,isHover:true})}async pGetDeepIndex(indexer,primary,it){const ixFeature=0;const pageStateOpts={subclass:{shortName:it.subclassShortName,source:it.source},feature:{ixLevel:it.level-1,ixFeature:ixFeature}};const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:it.className,source:it.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart(pageStateOpts)}`;return[{n:`${it.subclassShortName} ${it.className} ${it.level}; ${it.name}`,s:it.source,u:UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"](it),uh:classPageHash,p:it.page}]}}Omnidexer.TO_INDEX__FROM_INDEX_JSON=[new IndexableDirectoryBestiary,new IndexableDirectorySpells,new IndexableDirectoryClass,new IndexableDirectorySubclass,new IndexableDirectoryClassFeature,new IndexableDirectorySubclassFeature];class IndexableFile{constructor(opts){this.category=opts.category;this.file=opts.file;this.primary=opts.primary;this.source=opts.source;this.page=opts.page;this.listProp=opts.listProp;this.baseUrl=opts.baseUrl;this.hashBuilder=opts.hashBuilder;this.test_extraIndex=opts.test_extraIndex;this.isHover=opts.isHover;this.filter=opts.filter;this.include=opts.include;this.postLoad=opts.postLoad;this.isOnlyDeep=opts.isOnlyDeep;this.additionalIndexes=opts.additionalIndexes;this.isSkipBrew=opts.isSkipBrew}pGetDeepIndex(){return[]}}class IndexableFileBackgrounds extends IndexableFile{constructor(){super({category:Parser.CAT_ID_BACKGROUND,file:"backgrounds.json",listProp:"background",baseUrl:"backgrounds.html",isHover:true})}}class IndexableFileItemsBase extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ITEM,file:"items-base.json",listProp:"baseitem",baseUrl:"items.html",isHover:true})}}class IndexableFileItems extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ITEM,file:"items.json",listProp:"item",baseUrl:"items.html",isHover:true})}}class IndexableFileItemGroups extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ITEM,file:"items.json",listProp:"itemGroup",baseUrl:"items.html",isHover:true})}}class IndexableFileMagicVariants extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ITEM,file:"magicvariants.json",source:"inherits.source",page:"inherits.page",listProp:"variant",baseUrl:"items.html",hashBuilder:it=>UrlUtil.encodeForHash([it.name,it.inherits.source]),additionalIndexes:{item:async(indexer,rawVariants)=>{const specVars=await(async()=>{if(typeof module!=="undefined")return Renderer.item.getAllIndexableItems(rawVariants,require(`../data/items-base.json`));else{const baseItemJson=await DataUtil.loadJSON(`data/items-base.json`);const rawBaseItems={...baseItemJson,baseitem:[...baseItemJson.baseitem]};const brew=await BrewUtil.pAddBrewData();if(brew.baseitem)rawBaseItems.baseitem.push(...brew.baseitem);return Renderer.item.getAllIndexableItems(rawVariants,rawBaseItems)}})();return specVars.map((sv=>{const out={c:Parser.CAT_ID_ITEM,u:UrlUtil.encodeForHash([sv.name,sv.source]),s:indexer.getMetaId("s",sv.source),n:sv.name,h:1,p:sv.page};if(sv.genericVariant){out.zg={n:indexer.getMetaId("n",sv.genericVariant.name),s:indexer.getMetaId("s",sv.genericVariant.source)}}return out}))}},isHover:true})}pGetDeepIndex(indexer,primary,it){const revName=Renderer.item.modifierPostToPre(it);if(revName){return[{d:1,u:UrlUtil.encodeForHash([revName.name,it.inherits.source])}]}return[]}}class IndexableFileConditions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_CONDITION,file:"conditionsdiseases.json",listProp:"condition",baseUrl:"conditionsdiseases.html",isHover:true})}}class IndexableFileDiseases extends IndexableFile{constructor(){super({category:Parser.CAT_ID_DISEASE,file:"conditionsdiseases.json",listProp:"disease",baseUrl:"conditionsdiseases.html",isHover:true})}}class IndexableFileFeats extends IndexableFile{constructor(){super({category:Parser.CAT_ID_FEAT,file:"feats.json",listProp:"feat",baseUrl:"feats.html",isHover:true})}}class IndexableFileOptFeatures_EldritchInvocations extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ELDRITCH_INVOCATION,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("EI")})}}class IndexableFileOptFeatures_Metamagic extends IndexableFile{constructor(){super({category:Parser.CAT_ID_METAMAGIC,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("MM")})}}class IndexableFileOptFeatures_ManeuverBattlemaster extends IndexableFile{constructor(){super({category:Parser.CAT_ID_MANEUVER_BATTLEMASTER,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("MV:B")})}}class IndexableFileOptFeatures_ManeuverCavalier extends IndexableFile{constructor(){super({category:Parser.CAT_ID_MANEUVER_CAVALIER,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("MV:C2-UA")})}}class IndexableFileOptFeatures_ArcaneShot extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ARCANE_SHOT,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("AS:V1-UA")||it.featureType.includes("AS:V2-UA")||it.featureType.includes("AS")})}}class IndexableFileOptFeatures_Other extends IndexableFile{constructor(){super({category:Parser.CAT_ID_OPTIONAL_FEATURE_OTHER,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("OTH")||it.featureType.some((it=>!Parser.OPT_FEATURE_TYPE_TO_FULL[it]))})}}class IndexableFileOptFeatures_FightingStyle extends IndexableFile{constructor(){super({category:Parser.CAT_ID_FIGHTING_STYLE,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("FS:F")||it.featureType.includes("FS:B")||it.featureType.includes("FS:R")||it.featureType.includes("FS:P")})}}class IndexableFileOptFeatures_PactBoon extends IndexableFile{constructor(){super({category:Parser.CAT_ID_PACT_BOON,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("PB")})}}class IndexableFileOptFeatures_ElementalDiscipline extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ELEMENTAL_DISCIPLINE,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("ED")})}}class IndexableFileOptFeatures_ArtificerInfusion extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ARTIFICER_INFUSION,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("AI")})}}class IndexableFileOptFeatures_OnomancyResonant extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ONOMANCY_RESONANT,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("OR")})}}class IndexableFileOptFeatures_RuneKnightRune extends IndexableFile{constructor(){super({category:Parser.CAT_ID_RUNE_KNIGHT_RUNE,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("RN")})}}class IndexableFileOptFeatures_AlchemicalFormula extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ALCHEMICAL_FORMULA,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("AF")})}}class IndexableFileOptFeatures_Maneuver extends IndexableFile{constructor(){super({category:Parser.CAT_ID_MANEUVER,file:"optionalfeatures.json",listProp:"optionalfeature",baseUrl:"optionalfeatures.html",isHover:true,include:it=>it.featureType.includes("MV")})}}class IndexableFilePsionics extends IndexableFile{constructor(){super({category:Parser.CAT_ID_PSIONIC,file:"psionics.json",listProp:"psionic",baseUrl:"psionics.html",isHover:true})}pGetDeepIndex(indexer,primary,it){if(!it.modes)return[];return it.modes.map((m=>({d:1,n:`${primary.parentName}; ${m.name}`})))}}class IndexableFileRaces extends IndexableFile{constructor(){super({category:Parser.CAT_ID_RACE,file:"races.json",listProp:"race",baseUrl:"races.html",isOnlyDeep:true,isHover:true})}pGetDeepIndex(indexer,primary,it){const out=[];if(it.subraces){const r=MiscUtil.copy(it);const isAnyNoName=it.subraces.some((it=>!it.name));if(isAnyNoName)r.name=`${r.name} (Base)`;out.push({n:r.name,s:indexer.getMetaId("s",r.source),u:UrlUtil.URL_TO_HASH_BUILDER["races.html"](r)})}const subs=Renderer.race._mergeSubraces(it);out.push(...subs.map((r=>({n:r.name,s:indexer.getMetaId("s",r.source),u:UrlUtil.URL_TO_HASH_BUILDER["races.html"](r)}))));return out}}class IndexableFileRewards extends IndexableFile{constructor(){super({category:Parser.CAT_ID_OTHER_REWARD,file:"rewards.json",listProp:"reward",baseUrl:"rewards.html",isHover:true})}}class IndexableFileVariantRules extends IndexableFile{constructor(){super({category:Parser.CAT_ID_VARIANT_OPTIONAL_RULE,file:"variantrules.json",listProp:"variantrule",baseUrl:"variantrules.html",isHover:true})}}class IndexableFileVariantRulesGenerated extends IndexableFile{constructor(){super({category:Parser.CAT_ID_VARIANT_OPTIONAL_RULE,file:"generated/gendata-variantrules.json",listProp:"variantrule",baseUrl:"variantrules.html",isHover:true,isSkipBrew:true})}}class IndexableFileAdventures extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ADVENTURE,file:"adventures.json",source:"id",listProp:"adventure",baseUrl:"adventure.html"})}}class IndexableFileBooks extends IndexableFile{constructor(){super({category:Parser.CAT_ID_BOOK,file:"books.json",source:"id",listProp:"book",baseUrl:"book.html"})}}class IndexableFileQuickReference extends IndexableFile{constructor(){super({category:Parser.CAT_ID_QUICKREF,file:"generated/bookref-quick.json",listProp:"data.bookref-quick",baseUrl:"quickreference.html",hashBuilder:(it,ix)=>`bookref-quick,${ix}`,isOnlyDeep:true,isHover:true});this._walker=MiscUtil.getWalker()}static getChapterNameMetas(it){const trackedNames=[];const renderer=Renderer.get().setDepthTracker(trackedNames);renderer.render(it);const nameCounts={};trackedNames.forEach((meta=>{const lowName=meta.name.toLowerCase();nameCounts[lowName]=nameCounts[lowName]||0;nameCounts[lowName]++;meta.ixBook=nameCounts[lowName]-1}));return trackedNames.filter((it=>{if(!it.data)return false;return it.data.quickref!=null||it.data.quickrefIndex}))}pGetDeepIndex(indexer,primary,it){const out=it.entries.map((it=>IndexableFileQuickReference.getChapterNameMetas(it).map((nameMeta=>[IndexableFileQuickReference._getDeepDoc(indexer,primary,nameMeta),...(nameMeta.alias||[]).map((alias=>IndexableFileQuickReference._getDeepDoc(indexer,primary,nameMeta,alias)))])).flat())).flat();const seen=new Set;return out.filter((it=>{if(!seen.has(it.u)){seen.add(it.u);return true}return false}))}static _getDeepDoc(indexer,primary,nameMeta,alias){const hashParts=["bookref-quick",primary.ix,UrlUtil.encodeForHash(nameMeta.name.toLowerCase())];if(nameMeta.ixBook)hashParts.push(nameMeta.ixBook);return{n:alias||nameMeta.name,u:hashParts.join(HASH_PART_SEP),s:indexer.getMetaId("s",nameMeta.source),p:nameMeta.page}}}class IndexableFileDeities extends IndexableFile{constructor(){super({category:Parser.CAT_ID_DEITY,file:"deities.json",postLoad:DataUtil.deity.doPostLoad,listProp:"deity",baseUrl:"deities.html",isHover:true,filter:it=>it.reprinted})}}class IndexableFileObjects extends IndexableFile{constructor(){super({category:Parser.CAT_ID_OBJECT,file:"objects.json",listProp:"object",baseUrl:"objects.html",isHover:true})}}class IndexableFileTraps extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TRAP,file:"trapshazards.json",listProp:"trap",baseUrl:"trapshazards.html",isHover:true})}}class IndexableFileHazards extends IndexableFile{constructor(){super({category:Parser.CAT_ID_HAZARD,file:"trapshazards.json",listProp:"hazard",baseUrl:"trapshazards.html",isHover:true})}}class IndexableFileCults extends IndexableFile{constructor(){super({category:Parser.CAT_ID_CULT,file:"cultsboons.json",listProp:"cult",baseUrl:"cultsboons.html",isHover:true})}}class IndexableFileBoons extends IndexableFile{constructor(){super({category:Parser.CAT_ID_BOON,file:"cultsboons.json",listProp:"boon",baseUrl:"cultsboons.html",isHover:true})}}class IndexableFileTables extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TABLE,file:"tables.json",listProp:"table",baseUrl:"tables.html",isHover:true})}}class IndexableFileTablesGenerated extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TABLE,file:"generated/gendata-tables.json",listProp:"table",baseUrl:"tables.html",isHover:true,isSkipBrew:true})}}class IndexableFileTableGroups extends IndexableFile{constructor(){super({category:Parser.CAT_ID_TABLE_GROUP,file:"generated/gendata-tables.json",listProp:"tableGroup",baseUrl:"tables.html",isHover:true})}}class IndexableFileVehicles extends IndexableFile{constructor(){super({category:Parser.CAT_ID_VEHICLE,file:"vehicles.json",listProp:"vehicle",baseUrl:"vehicles.html",isHover:true})}}class IndexableFileVehicles_ShipUpgrade extends IndexableFile{constructor(){super({category:Parser.CAT_ID_SHIP_UPGRADE,file:"vehicles.json",listProp:"vehicleUpgrade",baseUrl:"vehicles.html",isHover:true,include:it=>it.upgradeType.includes("SHP:H")||it.upgradeType.includes("SHP:M")||it.upgradeType.includes("SHP:W")||it.upgradeType.includes("SHP:F")})}}class IndexableFileVehicles_InfernalWarMachineUpgrade extends IndexableFile{constructor(){super({category:Parser.CAT_ID_INFERNAL_WAR_MACHINE_UPGRADE,file:"vehicles.json",listProp:"vehicleUpgrade",baseUrl:"vehicles.html",isHover:true,include:it=>it.upgradeType.includes("IWM:W")||it.upgradeType.includes("IWM:A")||it.upgradeType.includes("IWM:G")})}}class IndexableFileActions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_ACTION,file:"actions.json",listProp:"action",baseUrl:"actions.html",isHover:true})}}class IndexableFileLanguages extends IndexableFile{constructor(){super({category:Parser.CAT_ID_LANGUAGE,file:"languages.json",listProp:"language",baseUrl:"languages.html",isHover:true})}pGetDeepIndex(indexer,primary,it){return(it.dialects||[]).map((d=>({n:d})))}}class IndexableFileCharCreationOptions extends IndexableFile{constructor(){super({category:Parser.CAT_ID_CHAR_CREATION_OPTIONS,file:"charcreationoptions.json",listProp:"charoption",baseUrl:"charcreationoptions.html",isHover:true})}}class IndexableFileRecipes extends IndexableFile{constructor(){super({category:Parser.CAT_ID_RECIPES,file:"recipes.json",listProp:"recipe",baseUrl:"recipes.html",isHover:true})}}Omnidexer.TO_INDEX=[new IndexableFileBackgrounds,new IndexableFileConditions,new IndexableFileDiseases,new IndexableFileFeats,new IndexableFileOptFeatures_EldritchInvocations,new IndexableFileOptFeatures_Metamagic,new IndexableFileOptFeatures_ManeuverBattlemaster,new IndexableFileOptFeatures_ManeuverCavalier,new IndexableFileOptFeatures_ArcaneShot,new IndexableFileOptFeatures_Other,new IndexableFileOptFeatures_FightingStyle,new IndexableFileOptFeatures_PactBoon,new IndexableFileOptFeatures_ElementalDiscipline,new IndexableFileOptFeatures_ArtificerInfusion,new IndexableFileOptFeatures_OnomancyResonant,new IndexableFileOptFeatures_RuneKnightRune,new IndexableFileOptFeatures_AlchemicalFormula,new IndexableFileOptFeatures_Maneuver,new IndexableFileItemsBase,new IndexableFileItems,new IndexableFileItemGroups,new IndexableFileMagicVariants,new IndexableFilePsionics,new IndexableFileRaces,new IndexableFileRewards,new IndexableFileVariantRules,new IndexableFileVariantRulesGenerated,new IndexableFileAdventures,new IndexableFileBooks,new IndexableFileQuickReference,new IndexableFileDeities,new IndexableFileObjects,new IndexableFileTraps,new IndexableFileHazards,new IndexableFileCults,new IndexableFileBoons,new IndexableFileTables,new IndexableFileTablesGenerated,new IndexableFileTableGroups,new IndexableFileVehicles,new IndexableFileVehicles_ShipUpgrade,new IndexableFileVehicles_InfernalWarMachineUpgrade,new IndexableFileActions,new IndexableFileLanguages,new IndexableFileCharCreationOptions,new IndexableFileRecipes];class IndexableSpecial{pGetIndex(){throw new Error(`Unimplemented!`)}}class IndexableSpecialPages extends IndexableSpecial{pGetIndex(){return Object.entries(UrlUtil.PG_TO_NAME).map((([page,name])=>({n:name,c:Parser.CAT_ID_PAGE,u:page})))}}Omnidexer.TO_INDEX__SPECIAL=[new IndexableSpecialPages];if(typeof module!=="undefined"){module.exports.Omnidexer=Omnidexer};
"use strict";class Omnisearch{static init(){if(IS_VTT)return;const $nav=$(`#navbar`);this._$iptSearch=$(`<input class="form-control search omni__input" placeholder="${this._PLACEHOLDER_TEXT}" title="Hotkey: F. Disclaimer: unlikely to search everywhere. Use with caution.">`).disableSpellcheck();const $searchSubmit=$(`<button class="btn btn-default omni__submit" tabindex="-1"><span class="glyphicon glyphicon-search"></span></button>`);this._$searchInputWrapper=$$`
			<div class="input-group omni__wrp-input">
				${this._$iptSearch}
				<div class="input-group-btn">
					${$searchSubmit}
				</div>
			</div>
		`.appendTo($nav);this._$searchOutWrapper=$(`<div class="omni__wrp-output"/>`).insertAfter($nav);this._$searchOut=$(`<div class="omni__output"/>`).appendTo(this._$searchOutWrapper);$(window).on("click",(()=>this._$searchOutWrapper.hide()));this._$searchOut.on("click",(e=>{e.stopPropagation();Renderer.hover.cleanTempWindows()}));this._$iptSearch.on("keydown",(e=>{e.stopPropagation();Renderer.hover.cleanTempWindows();switch(e.which){case 13:this._clickFirst=true;$searchSubmit.click();break;case 38:e.preventDefault();break;case 40:e.preventDefault();this._$searchOut.find(`a.omni__lnk-name`).first().focus();break;case 27:this._$iptSearch.val("");this._$iptSearch.blur()}}));const TYPE_TIMEOUT_MS=100;const handleSubmitClick=evt=>{if(evt)evt.stopPropagation();Renderer.hover.cleanTempWindows();this._pDoSearch()};let typeTimer;this._$iptSearch.on("keyup",(e=>{this._clickFirst=false;if(e.which>=37&&e.which<=40)return;clearTimeout(typeTimer);typeTimer=setTimeout((()=>handleSubmitClick()),TYPE_TIMEOUT_MS)}));this._$iptSearch.on("keydown",(()=>clearTimeout(typeTimer)));this._$iptSearch.on("click",(e=>{e.stopPropagation();Renderer.hover.cleanTempWindows();if(this._$iptSearch.val()&&this._$iptSearch.val().trim().length)handleSubmitClick()}));$searchSubmit.on("click",(evt=>handleSubmitClick(evt)));this._init_initScrollHandler();$(document.body).on("keypress",(e=>{if(!EventUtil.noModifierKeys(e)||EventUtil.isInInput(e))return;if(e.key!=="F")return;e.preventDefault();this._$iptSearch.select().focus()}))}static _init_initScrollHandler(){const $window=$(window);$window.on("scroll",(evt=>{if(Renderer.hover.isSmallScreen(evt)){this._$iptSearch.attr("placeholder",this._PLACEHOLDER_TEXT);this._$searchInputWrapper.removeClass("omni__wrp-input--scrolled");this._$searchOut.removeClass("omni__output--scrolled")}else{if($window.scrollTop()>50){this._$iptSearch.attr("placeholder","");this._$searchInputWrapper.addClass("omni__wrp-input--scrolled");this._$searchOut.addClass("omni__output--scrolled")}else{this._$iptSearch.attr("placeholder",this._PLACEHOLDER_TEXT);this._$searchInputWrapper.removeClass("omni__wrp-input--scrolled");this._$searchOut.removeClass("omni__output--scrolled")}}}))}static async pGetResults(searchTerm){searchTerm=(searchTerm||"").toAscii();await this.pInit();const basicTokens=searchTerm.split(/\s+/g);const tokenMetas=[];const filteredBasicTokens=basicTokens.filter((t=>{t=t.toLowerCase().trim();let category=Object.keys(this._CATEGORY_COUNTS).map((k=>k.toLowerCase())).find((k=>`in:${k}`===t||`in:${k}s`===t));if(!category){if(t==="in:creature"||t==="in:creatures"||t==="in:monster"||t==="in:monsters")category="bestiary"}const mSource=/^source:(.*)$/.exec(t);const mPage=/^page:\s*(\d+)\s*(-\s*(\d+)\s*)?$/.exec(t);if(category||mSource||mPage){tokenMetas.push({token:t,hasCategory:!!category,hasSource:!!mSource,hasPageRange:!!mPage,category:category,source:mSource?mSource[1].trim():null,pageRange:mPage?[Number(mPage[1]),mPage[3]?Number(mPage[3]):Number(mPage[1])]:null});return false}return true}));let results;const specialTokenMetasCategory=tokenMetas.filter((it=>it.hasCategory));const specialTokenMetasSource=tokenMetas.filter((it=>it.hasSource));const specialTokenMetasPageRange=tokenMetas.filter((it=>it.hasPageRange));if((specialTokenMetasCategory.length===1||specialTokenMetasSource.length>=1||specialTokenMetasPageRange.length>=1)&&specialTokenMetasCategory.length<=1){const categoryTerm=specialTokenMetasCategory.length?specialTokenMetasCategory[0].category.toLowerCase():null;const sourceTerms=specialTokenMetasSource.map((it=>it.source));const pageRanges=specialTokenMetasPageRange.map((it=>it.pageRange));const searchTerm=filteredBasicTokens.join(" ");results=searchTerm?this._searchIndex.search(searchTerm,{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true}):Object.values(this._searchIndex.documentStore.docs).map((it=>({doc:it})));results=results.filter((r=>!categoryTerm||r.doc.cf.toLowerCase()===categoryTerm)).filter((r=>!sourceTerms.length||r.doc.s&&sourceTerms.includes(r.doc.s.toLowerCase()))).filter((r=>!pageRanges.length||r.doc.p&&pageRanges.some((range=>r.doc.p>=range[0]&&r.doc.p<=range[1]))))}else{results=this._searchIndex.search(searchTerm,{fields:{n:{boost:5,expand:true},s:{expand:true}},bool:"AND",expand:true})}if(!this._state.isShowUa){results=results.filter((r=>!r.doc.s||!SourceUtil._isNonstandardSourceWiz(r.doc.s)))}if(!this._state.isShowBlacklisted&&ExcludeUtil.getList().length){results=results.filter((r=>{if(r.doc.c===Parser.CAT_ID_QUICKREF||r.doc.c===Parser.CAT_ID_PAGE)return true;const bCat=Parser.pageCategoryToProp(r.doc.c);return!ExcludeUtil.isExcluded(r.doc.u,bCat,r.doc.s,{isNoCount:true})}))}return results}static async _pDoSearch(){const results=await this.pGetResults(this._$iptSearch.val());if(results.length){this._pDoSearch_renderLinks(results)}else{if(this._$btnToggleUa)this._$btnToggleUa.detach();if(this._$btnToggleBlacklisted)this._$btnToggleBlacklisted.detach();this._$searchOut.empty();this._$searchOutWrapper.hide()}}static _renderLink_getHoverString(category,url,src){return`onmouseover="Renderer.hover.pHandleLinkMouseOver(event, this)" onmouseleave="Renderer.hover.handleLinkMouseLeave(event, this)" onmousemove="Renderer.hover.handleLinkMouseMove(event, this)" data-vet-page="${UrlUtil.categoryToHoverPage(category).qq()}" data-vet-source="${src.qq()}" data-vet-hash="${url.qq()}" ${Renderer.hover.getPreventTouchString()}`}static $getResultLink(r){const href=r.c===Parser.CAT_ID_PAGE?r.u:`${Renderer.get().baseUrl}${UrlUtil.categoryToPage(r.c)}#${r.uh||r.u}`;return $(`<a href="${href}" ${r.h?this._renderLink_getHoverString(r.c,r.u,r.s):""} class="omni__lnk-name">${r.cf}: ${r.n}</a>`)}static _pDoSearch_renderLinks(results,page=0){let isInitialHooks=true;if(this._$btnToggleUa)this._$btnToggleUa.detach();else{this._$btnToggleUa=$(`<button class="btn btn-default btn-xs mr-2" title="Include Unearthed Arcana and other unofficial source results" tabindex="-1">Include UA/etc.</button>`).on("click",(()=>this._state.isShowUa=!this._state.isShowUa));const hkIsUa=()=>{this._$btnToggleUa.toggleClass("active",this._state.isShowUa);this._pDoSearch()};this._state._addHookBase("isShowUa",hkIsUa);hkIsUa()}if(this._$btnToggleBlacklisted)this._$btnToggleBlacklisted.detach();else{this._$btnToggleBlacklisted=$(`<button class="btn btn-default btn-xs mr-2" title="Include blacklisted content results" tabindex="-1">Include Blacklisted</button>`).on("click",(async()=>this._state.isShowBlacklisted=!this._state.isShowBlacklisted));const hkIsBlacklisted=()=>{this._$btnToggleBlacklisted.toggleClass("active",this._state.isShowBlacklisted);if(!isInitialHooks)this._pDoSearch()};this._state._addHookBase("isShowBlacklisted",hkIsBlacklisted);hkIsBlacklisted()}isInitialHooks=false;this._$searchOut.empty();const $btnHelp=$(`<button class="btn btn-default btn-xs" title="Help"><span class="glyphicon glyphicon-info-sign"></span></button>`).click((()=>this.doShowHelp()));this._$searchOut.append($(`<div class="text-right"/>`).append([this._$btnToggleUa,this._$btnToggleBlacklisted,$btnHelp]));const base=page*this._MAX_RESULTS;for(let i=base;i<Math.max(Math.min(results.length,this._MAX_RESULTS+base),base);++i){const r=results[i].doc;const $link=this.$getResultLink(r).keydown((evt=>this.handleLinkKeyDown(evt,$link)));const{s:source,p:page}=r;const ptPageInner=page?`p${page}`:"";const adventureBookSourceHref=SourceUtil.getAdventureBookSourceHref(source,page);const ptPage=ptPageInner&&adventureBookSourceHref?`<a href="${adventureBookSourceHref}">${ptPageInner}</a>`:ptPageInner;const ptSourceInner=source?`<span class="${Parser.sourceJsonToColor(source)}" ${BrewUtil.sourceJsonToStyle(source)} title="${Parser.sourceJsonToFull(source)}">${Parser.sourceJsonToAbv(source)}</span>`:`<span></span>`;const ptSource=ptPage||!adventureBookSourceHref?ptSourceInner:`<a href="${adventureBookSourceHref}">${ptSourceInner}</a>`;$$`<div class="omni__row-result split-v-center stripe-odd">
				${$link}
				<div class="inline-block">
					${ptSource}
					${ptPage}
				</div>
			</div>`.appendTo(this._$searchOut)}this._$searchOutWrapper.css("display","flex");if(results.length>this._MAX_RESULTS){const $pgControls=$(`<div class="omni__wrp-paginate">`);if(page>0){const $prv=$(`<span class="omni__paginate-left has-results-left omni__paginate-ctrl"><span class="glyphicon glyphicon-chevron-left"></span></span>`).on("click",(()=>{page--;this._pDoSearch_renderLinks(results,page)}));$pgControls.append($prv)}else $pgControls.append(`<span class="omni__paginate-left">`);$pgControls.append(`<span class="paginate-count">Page ${page+1}/${Math.ceil(results.length/this._MAX_RESULTS)} (${results.length} results)</span>`);if(results.length-page*this._MAX_RESULTS>this._MAX_RESULTS){const $nxt=$(`<span class="omni__paginate-right has-results-right omni__paginate-ctrl"><span class="glyphicon glyphicon-chevron-right"></span></span>`).on("click",(()=>{page++;this._pDoSearch_renderLinks(results,page)}));$pgControls.append($nxt)}else $pgControls.append(`<span class="omni__paginate-right omni__paginate-ctrl">`);this._$searchOut.append($pgControls)}if(this._clickFirst){this._$searchOut.find(`a.omni__lnk-name`).first()[0].click()}}static async pInit(){this.initState();if(!this._searchIndex){if(this._pLoadSearch)await this._pLoadSearch;else{this._pLoadSearch=this._pDoSearchLoad();await this._pLoadSearch;this._pLoadSearch=null}}}static initState(){if(this._state)return;const saved=StorageUtil.syncGet(this._STORAGE_NAME)||{isShowUa:true,isShowBlacklisted:false};class SearchState extends BaseComponent{get isShowUa(){return this._state.isShowUa}get isShowBlacklisted(){return this._state.isShowBlacklisted}set isShowUa(val){this._state.isShowUa=val}set isShowBlacklisted(val){this._state.isShowBlacklisted=val}}this._state=SearchState.fromObject(saved);this._state._addHookAll("state",(()=>{StorageUtil.syncSet(this._STORAGE_NAME,this._state.toObject())}))}static addHookUa(hk){this._state._addHookBase("isShowUa",hk)}static addHookBlacklisted(hk){this._state._addHookBase("isShowBlacklisted",hk)}static doToggleUa(){this._state.isShowUa=!this._state.isShowUa}static doToggleBlacklisted(){this._state.isShowBlacklisted=!this._state.isShowBlacklisted}static get isShowUa(){return this._state.isShowUa}static get isShowBlacklisted(){return this._state.isShowBlacklisted}static async _pDoSearchLoad(){const data=Omnidexer.decompressIndex(await DataUtil.loadJSON(`${Renderer.get().baseUrl}search/index.json`));elasticlunr.clearStopWords();this._searchIndex=elasticlunr((function(){this.addField("n");this.addField("cf");this.addField("s");this.setRef("id")}));SearchUtil.removeStemmer(this._searchIndex);data.forEach((it=>this._addToIndex(it)));this.highestId=data.last().id;const brewIndex=await BrewUtil.pGetSearchIndex();brewIndex.forEach((it=>this._addToIndex(it)));if(brewIndex.length)this.highestId=brewIndex.last().id;this._adventureBookLookup={};[brewIndex,data].forEach((index=>{index.forEach((it=>{if(it.c===Parser.CAT_ID_ADVENTURE||it.c===Parser.CAT_ID_BOOK)this._adventureBookLookup[it.s.toLowerCase()]=it.c}))}))}static async pAddToIndex(prop,...entries){if(!entries.length)return;await this.pInit();const indexer=new Omnidexer(this.highestId+1);const toIndex={[prop]:entries};const toIndexMultiPart=Omnidexer.TO_INDEX__FROM_INDEX_JSON.filter((it=>it.listProp===prop));for(const it of toIndexMultiPart){await indexer.pAddToIndex(it,toIndex)}const toIndexSingle=Omnidexer.TO_INDEX.filter((it=>it.listProp===prop));for(const it of toIndexSingle){await indexer.pAddToIndex(it,toIndex)}const toAdd=Omnidexer.decompressIndex(indexer.getIndex());toAdd.forEach((it=>this._addToIndex(it)));if(toAdd.length)this.highestId=toAdd.last().id}static _addToIndex(d){d.cf=Parser.pageCategoryToFull(d.c);if(!this._CATEGORY_COUNTS[d.cf])this._CATEGORY_COUNTS[d.cf]=1;else this._CATEGORY_COUNTS[d.cf]++;this._searchIndex.addDoc(d)}static handleLinkKeyDown(e,$ele){Renderer.hover.cleanTempWindows();switch(e.which){case 37:{e.preventDefault();if($(`.has-results-left`).length){const ix=$ele.parent().index()-1;$(`.omni__paginate-left`).click();const $psNext=this._$searchOut.find(`.omni__row-result`);$($psNext[ix]||$psNext[$psNext.length-1]).find(`a.omni__lnk-name`).focus()}break}case 38:{e.preventDefault();if($ele.parent().prev().find(`a.omni__lnk-name`).length){$ele.parent().prev().find(`a.omni__lnk-name`).focus()}else if($(`.has-results-left`).length){$(`.omni__paginate-left`).click();this._$searchOut.find(`a.omni__lnk-name`).last().focus()}else{this._$iptSearch.focus()}break}case 39:{e.preventDefault();if($(`.has-results-right`).length){const ix=$ele.parent().index()-1;$(`.omni__paginate-right`).click();const $psNext=this._$searchOut.find(`.omni__row-result`);$($psNext[ix]||$psNext[$psNext.length-1]).find(`a.omni__lnk-name`).focus()}break}case 40:{e.preventDefault();if($ele.parent().next().find(`a.omni__lnk-name`).length){$ele.parent().next().find(`a.omni__lnk-name`).focus()}else if($(`.has-results-right`).length){$(`.omni__paginate-right`).click();this._$searchOut.find(`a.omni__lnk-name`).first().focus()}break}}}static addScrollTopFloat(){const $btnToTop=$(`<button class="btn btn-sm btn-default" title="To Top"><span class="glyphicon glyphicon-arrow-up"/></button>`).click((()=>MiscUtil.scrollPageTop()));const $wrpTop=$$`<div class="bk__to-top">
			${$btnToTop}
		</div>`.appendTo(document.body);$(window).on("scroll",(()=>{if($(window).scrollTop()>50)$wrpTop.addClass("bk__to-top--scrolled");else $wrpTop.removeClass("bk__to-top--scrolled")}));return $wrpTop}static doShowHelp(){const{$modalInner:$modalInner}=UiUtil.getShowModal({title:"Help",isMinHeight0:true});$modalInner.append(`\n\t\t\t<p>The following search syntax is available:</p>\n\t\t\t<ul>\n\t\t\t\t<li><code>in:&lt;category&gt;</code> where <code>&lt;category&gt;</code> can be &quot;spell&quot;, &quot;item&quot;, &quot;bestiary&quot;, etc.</li>\n\t\t\t\t<li><code>source:&lt;abbreviation&gt;</code> where <code>&lt;abbreviation&gt;</code> is an abbreviated source/book name (&quot;PHB&quot;, &quot;MM&quot;, etc.)</li>\n\t\t\t\t<li><code>page:&lt;number&gt;</code> or <code>page:&lt;rangeStart&gt;-&lt;rangeEnd&gt;</code></li>\n\t\t\t</ul>\n\t\t`)}}Omnisearch._PLACEHOLDER_TEXT="Search everywhere...";Omnisearch._searchIndex=null;Omnisearch._adventureBookLookup=null;Omnisearch._pLoadSearch=null;Omnisearch._CATEGORY_COUNTS={};Omnisearch.highestId=-1;Omnisearch._$btnToggleUa=null;Omnisearch._$btnToggleBlacklisted=null;Omnisearch._$searchOut=null;Omnisearch._$searchOutWrapper=null;Omnisearch._$searchInputWrapper=null;Omnisearch._clickFirst=false;Omnisearch._MAX_RESULTS=15;Omnisearch._showUaEtc=false;Omnisearch._hideBlacklisted=false;Omnisearch._STORAGE_NAME="search";window.addEventListener("load",(()=>Omnisearch.init()));;
function Renderer(){this.wrapperTag="div";this.baseUrl="";this.baseMediaUrls={};this._lazyImages=false;this._subVariant=false;this._firstSection=true;this._isAddHandlers=true;this._headerIndex=1;this._tagExportDict=null;this._roll20Ids=null;this._trackTitles={enabled:false,titles:{}};this._enumerateTitlesRel={enabled:false,titles:{}};this._plugins={};this._fnPostProcess=null;this._extraSourceClasses=null;this._depthTracker=null;this._depthTrackerAdditionalProps=[];this._depthTrackerAdditionalPropsInherited=[];this._lastDepthTrackerInheritedProps={};this._isInternalLinksDisabled=false;this._fnsGetStyleClasses={};this.setLazyImages=function(bool){if(typeof IntersectionObserver==="undefined")this._lazyImages=false;else this._lazyImages=!!bool;return this};this.setWrapperTag=function(tag){this.wrapperTag=tag;return this};this.setBaseUrl=function(url){this.baseUrl=url;return this};this.setBaseMediaUrl=function(mediaDir,url){this.baseMediaUrls[mediaDir]=url;return this};this.setFirstSection=function(bool){this._firstSection=bool;return this};this.setAddHandlers=function(bool){this._isAddHandlers=bool;return this};this.setFnPostProcess=function(fn){this._fnPostProcess=fn;return this};this.setExtraSourceClasses=function(arr){this._extraSourceClasses=arr;return this};this.resetHeaderIndex=function(){this._headerIndex=1;this._trackTitles.titles={};this._enumerateTitlesRel.titles={};return this};this.getHeaderIndex=function(){return this._headerIndex};this.doExportTags=function(toObj){this._tagExportDict=toObj;return this};this.resetExportTags=function(){this._tagExportDict=null;return this};this.setRoll20Ids=function(roll20Ids){this._roll20Ids=roll20Ids;return this};this.resetRoll20Ids=function(){this._roll20Ids=null;return this};this.setInternalLinksDisabled=function(bool){this._isInternalLinksDisabled=bool;return this};this.isInternalLinksDisabled=function(){return!!this._isInternalLinksDisabled};this.setFnGetStyleClasses=function(identifier,fn){if(fn==null){delete this._fnsGetStyleClasses[identifier];return this}this._fnsGetStyleClasses[identifier]=fn;return this};this.setEnumerateTitlesRel=function(bool){this._enumerateTitlesRel.enabled=bool;return this};this._getEnumeratedTitleRel=function(name){if(this._enumerateTitlesRel.enabled&&name){const clean=name.toLowerCase();this._enumerateTitlesRel.titles[clean]=this._enumerateTitlesRel.titles[clean]||0;return`data-title-relative-index="${this._enumerateTitlesRel.titles[clean]++}"`}else return""};this.setTrackTitles=function(bool){this._trackTitles.enabled=bool;return this};this.getTrackedTitles=function(){return MiscUtil.copy(this._trackTitles.titles)};this.getTrackedTitlesInverted=function(){const trackedTitlesInverse={};Object.entries(this._trackTitles.titles||{}).forEach((([titleIx,titleName])=>{titleName=titleName.toLowerCase().trim();(trackedTitlesInverse[titleName]=trackedTitlesInverse[titleName]||[]).push(titleIx)}));return trackedTitlesInverse};this._handleTrackTitles=function(name){if(!this._trackTitles.enabled)return;this._trackTitles.titles[this._headerIndex]=name};this._handleTrackDepth=function(entry,depth){if(entry.name&&this._depthTracker){this._lastDepthTrackerInheritedProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);if(entry.source)this._lastDepthTrackerInheritedProps.source=entry.source;if(this._depthTrackerAdditionalPropsInherited?.length){this._depthTrackerAdditionalPropsInherited.forEach((prop=>this._lastDepthTrackerInheritedProps[prop]=entry[prop]||this._lastDepthTrackerInheritedProps[prop]))}const additionalData=this._depthTrackerAdditionalProps.length?this._depthTrackerAdditionalProps.mergeMap((it=>({[it]:entry[it]}))):{};this._depthTracker.push({...this._lastDepthTrackerInheritedProps,...additionalData,depth:depth,name:entry.name,type:entry.type,ixHeader:this._headerIndex,source:this._lastDepthTrackerInheritedProps.source,data:entry.data,page:entry.page,alias:entry.alias,entry:entry})}};this.addPlugin=function(entryType,pluginType,fnPlugin){MiscUtil.getOrSet(this._plugins,entryType,pluginType,[]).push(fnPlugin)};this.removePlugin=function(entryType,pluginType,fnPlugin){if(!fnPlugin)return;const ix=(MiscUtil.get(this._plugins,entryType,pluginType)||[]).indexOf(fnPlugin);if(~ix)this._plugins[entryType][pluginType].splice(ix,1)};this.removePlugins=function(entryType,pluginType){MiscUtil.delete(this._plugins,entryType,pluginType)};this._getPlugins=function(entryType,pluginType){return(this._plugins[entryType]||{})[pluginType]||[]};this.withPlugin=function({entryType:entryType,pluginType:pluginType,fnPlugin:fnPlugin,fn:fn}){this.addPlugin(entryType,pluginType,fnPlugin);try{return fn(this)}finally{this.removePlugin(entryType,pluginType,fnPlugin)}};this.pWithPlugin=async function({entryType:entryType,pluginType:pluginType,fnPlugin:fnPlugin,pFn:pFn}){try{const out=await pFn(this);return out}finally{this.removePlugin(entryType,pluginType,fnPlugin)}};this.setDepthTracker=function(arr,{additionalProps:additionalProps,additionalPropsInherited:additionalPropsInherited}={}){this._depthTracker=arr;this._depthTrackerAdditionalProps=additionalProps||[];this._depthTrackerAdditionalPropsInherited=additionalPropsInherited||[];return this};this.recursiveRender=function(entry,textStack,meta,options){if(entry instanceof Array){entry.forEach((nxt=>this.recursiveRender(nxt,textStack,meta,options)));setTimeout((()=>{throw new Error(`Array passed to renderer! The renderer only guarantees support for primitives and basic objects.`)}));return}if(textStack.length===0)textStack[0]="";else textStack.reverse();meta=meta||{};meta._typeStack=[];meta.depth=meta.depth==null?0:meta.depth;this._recursiveRender(entry,textStack,meta,options);if(this._fnPostProcess)textStack[0]=this._fnPostProcess(textStack[0]);textStack.reverse()};this._recursiveRender=function(entry,textStack,meta,options){if(entry==null)return;if(!textStack)throw new Error("Missing stack!");if(!meta)throw new Error("Missing metadata!");if(entry.type==="section")meta.depth=-1;options=options||{};meta._didRenderPrefix=false;meta._didRenderSuffix=false;if(typeof entry==="object"){const type=entry.type==null||entry.type==="section"?"entries":entry.type;if(type==="wrapper")return this._recursiveRender(entry.wrapped,textStack,meta,options);meta._typeStack.push(type);switch(type){case"entries":this._renderEntries(entry,textStack,meta,options);break;case"options":this._renderOptions(entry,textStack,meta,options);break;case"list":this._renderList(entry,textStack,meta,options);break;case"table":this._renderTable(entry,textStack,meta,options);break;case"tableGroup":this._renderTableGroup(entry,textStack,meta,options);break;case"inset":this._renderInset(entry,textStack,meta,options);break;case"insetReadaloud":this._renderInsetReadaloud(entry,textStack,meta,options);break;case"variant":this._renderVariant(entry,textStack,meta,options);break;case"variantInner":this._renderVariantInner(entry,textStack,meta,options);break;case"variantSub":this._renderVariantSub(entry,textStack,meta,options);break;case"spellcasting":this._renderSpellcasting(entry,textStack,meta,options);break;case"quote":this._renderQuote(entry,textStack,meta,options);break;case"optfeature":this._renderOptfeature(entry,textStack,meta,options);break;case"patron":this._renderPatron(entry,textStack,meta,options);break;case"abilityDc":this._renderAbilityDc(entry,textStack,meta,options);break;case"abilityAttackMod":this._renderAbilityAttackMod(entry,textStack,meta,options);break;case"abilityGeneric":this._renderAbilityGeneric(entry,textStack,meta,options);break;case"inline":this._renderInline(entry,textStack,meta,options);break;case"inlineBlock":this._renderInlineBlock(entry,textStack,meta,options);break;case"bonus":this._renderBonus(entry,textStack,meta,options);break;case"bonusSpeed":this._renderBonusSpeed(entry,textStack,meta,options);break;case"dice":this._renderDice(entry,textStack,meta,options);break;case"link":this._renderLink(entry,textStack,meta,options);break;case"actions":this._renderActions(entry,textStack,meta,options);break;case"attack":this._renderAttack(entry,textStack,meta,options);break;case"ingredient":this._renderIngredient(entry,textStack,meta,options);break;case"item":this._renderItem(entry,textStack,meta,options);break;case"itemSub":this._renderItemSub(entry,textStack,meta,options);break;case"itemSpell":this._renderItemSpell(entry,textStack,meta,options);break;case"dataCreature":this._renderDataCreature(entry,textStack,meta,options);break;case"dataSpell":this._renderDataSpell(entry,textStack,meta,options);break;case"dataTrapHazard":this._renderDataTrapHazard(entry,textStack,meta,options);break;case"dataObject":this._renderDataObject(entry,textStack,meta,options);break;case"dataItem":this._renderDataItem(entry,textStack,meta,options);break;case"dataLegendaryGroup":this._renderDataLegendaryGroup(entry,textStack,meta,options);break;case"image":this._renderImage(entry,textStack,meta,options);break;case"gallery":this._renderGallery(entry,textStack,meta,options);break;case"flowchart":this._renderFlowchart(entry,textStack,meta,options);break;case"flowBlock":this._renderFlowBlock(entry,textStack,meta,options);break;case"homebrew":this._renderHomebrew(entry,textStack,meta,options);break;case"code":this._renderCode(entry,textStack,meta,options);break;case"hr":this._renderHr(entry,textStack,meta,options);break}meta._typeStack.pop()}else if(typeof entry==="string"){this._renderPrefix(entry,textStack,meta,options);this._renderString(entry,textStack,meta,options);this._renderSuffix(entry,textStack,meta,options)}else{this._renderPrefix(entry,textStack,meta,options);this._renderPrimitive(entry,textStack,meta,options);this._renderSuffix(entry,textStack,meta,options)}};this._adjustDepth=function(meta,dDepth){const cachedDepth=meta.depth;meta.depth+=dDepth;meta.depth=Math.min(Math.max(-1,meta.depth),2);return cachedDepth};this._renderPrefix=function(entry,textStack,meta,options){if(meta._didRenderPrefix)return;if(options.prefix!=null){textStack[0]+=options.prefix;meta._didRenderPrefix=true}};this._renderSuffix=function(entry,textStack,meta,options){if(meta._didRenderSuffix)return;if(options.suffix!=null){textStack[0]+=options.suffix;meta._didRenderSuffix=true}};this._renderImage=function(entry,textStack,meta,options){function getStylePart(){const styles=[entry.maxWidth?`max-width: min(100%, ${entry.maxWidth}${entry.maxWidthUnits||"px"})`:"",entry.maxHeight?`max-height: min(60vh, ${entry.maxHeight}${entry.maxHeightUnits||"px"})`:""].filter(Boolean).join("; ");return styles?`style="${styles}"`:""}if(entry.imageType==="map")textStack[0]+=`<div class="rd__wrp-map">`;this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`<div class="${meta._typeStack.includes("gallery")?"rd__wrp-gallery-image":""}">`;const href=this._renderImage_getUrl(entry);const svg=this._lazyImages&&entry.width!=null&&entry.height!=null?`data:image/svg+xml,${encodeURIComponent(`<svg xmlns="http://www.w3.org/2000/svg" width="${entry.width}" height="${entry.height}"><rect width="100%" height="100%" fill="#ccc3"></rect></svg>`)}`:null;textStack[0]+=`<div class="${this._renderImage_getWrapperClasses(entry,meta)}">\n\t\t\t<a href="${href}" target="_blank" rel="noopener noreferrer" ${entry.title?`title="${Renderer.stripTags(entry.title)}"`:""}>\n\t\t\t\t<img class="${this._renderImage_getImageClasses(entry,meta)}" src="${svg||href}" ${entry.altText||entry.title?`alt="${(entry.altText||entry.title).qq()}"`:""} ${svg?`data-src="${href}"`:`loading="lazy"`} ${getStylePart()}>\n\t\t\t</a>\n\t\t</div>`;if(entry.title||entry.mapRegions){textStack[0]+=`<div class="rd__image-title">\n\t\t\t\t${entry.title&&!entry.mapRegions?`<div class="rd__image-title-inner ${entry.title&&entry.mapRegions?"mr-2":""}">${this.render(entry.title)}</div>`:""}\n\t\t\t\t${entry.mapRegions?`<button class="btn btn-xs btn-default rd__image-btn-viewer" onclick="RenderMap.pShowViewer(event, this)" data-rd-packed-map="${this._renderImage_getMapRegionData(entry)}" ${entry.title?`title="Open Dynamic Viewer"`:""}><span class="glyphicon glyphicon-picture"></span> ${entry.title||"Dynamic Viewer"}</button>`:""}\n\t\t\t</div>`}else if(entry._galleryTitlePad)textStack[0]+=`<div class="rd__image-title">&nbsp;</div>`;textStack[0]+=`</div>`;this._renderSuffix(entry,textStack,meta,options);if(entry.imageType==="map")textStack[0]+=`</div>`};this._renderImage_getMapRegionData=function(entry){return JSON.stringify(this.getMapRegionData(entry)).escapeQuotes()};this.getMapRegionData=function(entry){return{regions:entry.mapRegions,width:entry.width,height:entry.height,href:this._renderImage_getUrl(entry),hrefThumbnail:this._renderImage_getUrlThumbnail(entry)}};this._renderImage_getWrapperClasses=function(entry){const out=["rd__wrp-image","relative"];if(entry.style){switch(entry.style){case"comic-speaker-left":out.push("rd__comic-img-speaker","rd__comic-img-speaker--left");break;case"comic-speaker-right":out.push("rd__comic-img-speaker","rd__comic-img-speaker--right");break}}return out.join(" ")};this._renderImage_getImageClasses=function(entry){const out=["rd__image"];if(entry.style){switch(entry.style){case"deity-symbol":out.push("rd__img-small");break}}return out.join(" ")};this._renderImage_getUrl=function(entry){return Renderer.utils.getMediaUrl(entry,"href","img")};this._renderImage_getUrlThumbnail=function(entry){return Renderer.utils.getMediaUrl(entry,"hrefThumbnail","img")};this._renderList_getListCssClasses=function(entry,textStack,meta,options){const out=[`rd__list`];if(entry.style||entry.columns){if(entry.style)out.push(...entry.style.split(" ").map((it=>`rd__${it}`)));if(entry.columns)out.push(`columns-${entry.columns}`)}return out.join(" ")};this._renderTableGroup=function(entry,textStack,meta,options){const len=entry.tables.length;for(let i=0;i<len;++i)this._recursiveRender(entry.tables[i],textStack,meta)};this._renderTable=function(entry,textStack,meta,options){if(entry.intro){const len=entry.intro.length;for(let i=0;i<len;++i){this._recursiveRender(entry.intro[i],textStack,meta,{prefix:"<p>",suffix:"</p>"})}}textStack[0]+=`<table class="rd__table ${entry.style||""} ${entry.isStriped===false?"":"stripe-odd-table"}">`;const autoRollMode=Renderer.getAutoConvertedTableRollMode(entry);const toRenderLabel=autoRollMode?RollerUtil.getFullRollCol(entry.colLabels[0]):null;const isInfiniteResults=autoRollMode===RollerUtil.ROLL_COL_VARIABLE;if(entry.caption!=null)textStack[0]+=`<caption>${entry.caption}</caption>`;const rollCols=[];let bodyStack=[""];bodyStack[0]+="<tbody>";const lenRows=entry.rows.length;for(let ixRow=0;ixRow<lenRows;++ixRow){bodyStack[0]+="<tr>";const r=entry.rows[ixRow];let roRender=r.type==="row"?r.row:r;const len=roRender.length;for(let ixCell=0;ixCell<len;++ixCell){rollCols[ixCell]=rollCols[ixCell]||false;if(autoRollMode&&ixCell===0){roRender=Renderer.getRollableRow(roRender,{isForceInfiniteResults:isInfiniteResults,isFirstRow:ixRow===0,isLastRow:ixRow===lenRows-1});rollCols[ixCell]=true}let toRenderCell;if(roRender[ixCell].type==="cell"){if(roRender[ixCell].roll){rollCols[ixCell]=true;if(roRender[ixCell].entry){toRenderCell=roRender[ixCell].entry}else if(roRender[ixCell].roll.exact!=null){toRenderCell=roRender[ixCell].roll.pad?StrUtil.padNumber(roRender[ixCell].roll.exact,2,"0"):roRender[ixCell].roll.exact}else{const dispMin=roRender[ixCell].roll.displayMin!=null?roRender[ixCell].roll.displayMin:roRender[ixCell].roll.min;const dispMax=roRender[ixCell].roll.displayMax!=null?roRender[ixCell].roll.displayMax:roRender[ixCell].roll.max;if(dispMax===Renderer.dice.POS_INFINITE){toRenderCell=roRender[ixCell].roll.pad?`${StrUtil.padNumber(dispMin,2,"0")}+`:`${dispMin}+`}else{toRenderCell=roRender[ixCell].roll.pad?`${StrUtil.padNumber(dispMin,2,"0")}-${StrUtil.padNumber(dispMax,2,"0")}`:`${dispMin}-${dispMax}`}}}else if(roRender[ixCell].entry){toRenderCell=roRender[ixCell].entry}}else{toRenderCell=roRender[ixCell]}bodyStack[0]+=`<td ${this._renderTable_makeTableTdClassText(entry,ixCell)} ${this._renderTable_getCellDataStr(roRender[ixCell])} ${roRender[ixCell].width?`colspan="${roRender[ixCell].width}"`:""}>`;if(r.style==="row-indent-first"&&ixCell===0)bodyStack[0]+=`<div class="rd__tab-indent"></div>`;const cacheDepth=this._adjustDepth(meta,1);this._recursiveRender(toRenderCell,bodyStack,meta);meta.depth=cacheDepth;bodyStack[0]+="</td>"}bodyStack[0]+="</tr>"}bodyStack[0]+="</tbody>";textStack[0]+="<thead>";textStack[0]+="<tr>";if(entry.colLabels){const len=entry.colLabels.length;for(let i=0;i<len;++i){const lbl=entry.colLabels[i];textStack[0]+=`<th ${this._renderTable_getTableThClassText(entry,i)} data-rd-isroller="${rollCols[i]}" ${entry.isNameGenerator?`data-rd-namegeneratorrolls="${(entry.colLabels||[]).length-1}"`:""}>`;this._recursiveRender(autoRollMode&&i===0?RollerUtil.getFullRollCol(lbl):lbl,textStack,meta);textStack[0]+=`</th>`}}textStack[0]+="</tr>";textStack[0]+="</thead>";textStack[0]+=bodyStack[0];if(entry.footnotes!=null){textStack[0]+="<tfoot>";const len=entry.footnotes.length;for(let i=0;i<len;++i){textStack[0]+=`<tr><td colspan="99">`;const cacheDepth=this._adjustDepth(meta,1);this._recursiveRender(entry.footnotes[i],textStack,meta);meta.depth=cacheDepth;textStack[0]+="</td></tr>"}textStack[0]+="</tfoot>"}textStack[0]+="</table>";if(entry.outro){const len=entry.outro.length;for(let i=0;i<len;++i){this._recursiveRender(entry.outro[i],textStack,meta,{prefix:"<p>",suffix:"</p>"})}}};this._renderTable_getCellDataStr=function(ent){function convertZeros(num){if(num===0)return 100;return num}if(ent.roll){return`data-roll-min="${convertZeros(ent.roll.exact!=null?ent.roll.exact:ent.roll.min)}" data-roll-max="${convertZeros(ent.roll.exact!=null?ent.roll.exact:ent.roll.max)}"`}return""};this._renderTable_getTableThClassText=function(entry,i){return entry.colStyles==null||i>=entry.colStyles.length?"":`class="${entry.colStyles[i]}"`};this._renderTable_makeTableTdClassText=function(entry,i){if(entry.rowStyles!=null)return i>=entry.rowStyles.length?"":`class="${entry.rowStyles[i]}"`;else return this._renderTable_getTableThClassText(entry,i)};this._renderEntries=function(entry,textStack,meta,options){this._renderEntriesSubtypes(entry,textStack,meta,options,true)};this._getPagePart=function(entry,isInset){if(!Renderer.utils.isDisplayPage(entry.page))return"";return` <span class="rd__title-link ${isInset?`rd__title-link--inset`:""}">${entry.source?`<span class="help-subtle" title="${Parser.sourceJsonToFull(entry.source)}">${Parser.sourceJsonToAbv(entry.source)}</span> `:""}p${entry.page}</span>`};this._inlineHeaderTerminators=new Set([".",",","!","?",";",":"]);this._renderEntriesSubtypes=function(entry,textStack,meta,options,incDepth){const type=entry.type||"entries";const isInlineTitle=meta.depth>=2;const isAddPeriod=isInlineTitle&&entry.name&&!this._inlineHeaderTerminators.has(entry.name[entry.name.length-1]);const pagePart=!isInlineTitle?this._getPagePart(entry):"";const nextDepth=incDepth&&meta.depth<2?meta.depth+1:meta.depth;const styleString=this._renderEntriesSubtypes_getStyleString(entry,meta,isInlineTitle);const dataString=this._renderEntriesSubtypes_getDataString(entry);if(entry.name!=null&&Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);const headerEle="span"||`h${Math.min(Math.max(meta.depth+1,1),6)}`;const headerClass=`rd__h--${meta.depth+1}`;const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,meta.depth);const pluginDataNamePrefix=this._getPlugins(type,"namePrefix").map((plugin=>plugin(entry,textStack,meta,options))).filter(Boolean);const headerSpan=entry.name?`<${headerEle} class="rd__h ${headerClass}" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}> <span class="entry-title-inner${isInlineTitle?` help-subtle`:""}"${!pagePart&&entry.source?` title="Source: ${Parser.sourceJsonToFull(entry.source)}${entry.page?`, p${entry.page}`:""}"`:""}>${pluginDataNamePrefix.join("")}${this.render({type:"inline",entries:[entry.name]})}${isAddPeriod?".":""}</span>${pagePart}</${headerEle}> `:"";if(meta.depth===-1){if(!this._firstSection)textStack[0]+=`<hr class="rd__hr rd__hr--section">`;this._firstSection=false}if(entry.entries||entry.name){textStack[0]+=`<${this.wrapperTag} ${dataString} ${styleString}>${headerSpan}`;this._renderEntriesSubtypes_renderPreReqText(entry,textStack,meta);if(entry.entries){const cacheDepth=meta.depth;const len=entry.entries.length;for(let i=0;i<len;++i){meta.depth=nextDepth;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});if(i===0&&cacheDepth>=2)textStack[0]+=`<div class="rd__spc-inline-post"></div>`}meta.depth=cacheDepth}textStack[0]+=`</${this.wrapperTag}>`}this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderEntriesSubtypes_getDataString=function(entry){let dataString="";if(entry.source)dataString+=`data-source="${entry.source}"`;if(entry.data){for(const k in entry.data){if(!k.startsWith("rd-"))continue;dataString+=` data-${k}="${`${entry.data[k]}`.escapeQuotes()}"`}}return dataString};this._renderEntriesSubtypes_renderPreReqText=function(entry,textStack,meta){if(entry.prerequisite){textStack[0]+=`<span class="rd__prerequisite">Prerequisite: `;this._recursiveRender({type:"inline",entries:[entry.prerequisite]},textStack,meta);textStack[0]+=`</span>`}};this._renderEntriesSubtypes_getStyleString=function(entry,meta,isInlineTitle){const styleClasses=["rd__b"];styleClasses.push(this._getStyleClass(entry));if(isInlineTitle){if(this._subVariant)styleClasses.push(Renderer.HEAD_2_SUB_VARIANT);else styleClasses.push(Renderer.HEAD_2)}else styleClasses.push(meta.depth===-1?Renderer.HEAD_NEG_1:meta.depth===0?Renderer.HEAD_0:Renderer.HEAD_1);return styleClasses.length>0?`class="${styleClasses.join(" ")}"`:""};this._renderOptions=function(entry,textStack,meta,options){if(!entry.entries)return;entry.entries=entry.entries.sort(((a,b)=>a.name&&b.name?SortUtil.ascSort(a.name,b.name):a.name?-1:b.name?1:0));if(entry.style&&entry.style==="list-hang-notitle"){const fauxEntry={type:"list",style:"list-hang-notitle",items:entry.entries.map((ent=>{if(typeof ent==="string")return ent;const out={...ent,type:"item"};if(ent.name)out.name=this._inlineHeaderTerminators.has(ent.name[ent.name.length-1])?out.name:`${out.name}.`;return out}))};this._renderList(fauxEntry,textStack,meta,options)}else this._renderEntriesSubtypes(entry,textStack,meta,options,false)};this._renderList=function(entry,textStack,meta,options){if(entry.items){if(entry.name)textStack[0]+=`<div class="rd__list-name">${entry.name}</div>`;const cssClasses=this._renderList_getListCssClasses(entry,textStack,meta,options);textStack[0]+=`<ul ${cssClasses?`class="${cssClasses}"`:""}>`;const isListHang=entry.style&&entry.style.split(" ").includes("list-hang");const len=entry.items.length;for(let i=0;i<len;++i){const item=entry.items[i];if(item.type!=="list"){const className=`${this._getStyleClass(item)}${item.type==="itemSpell"?" rd__li-spell":""}`;textStack[0]+=`<li class="rd__li ${className}">`}if(isListHang&&typeof item==="string")textStack[0]+="<div>";const cacheDepth=this._adjustDepth(meta,1);this._recursiveRender(item,textStack,meta);meta.depth=cacheDepth;if(isListHang&&typeof item==="string")textStack[0]+="</div>";if(item.type!=="list")textStack[0]+="</li>"}textStack[0]+="</ul>"}};this._renderInset=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="rd__b-inset ${entry.style||""}" ${dataString}>`;const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,1);if(entry.name!=null){if(Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);textStack[0]+=`<span class="rd__h rd__h--2-inset" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${entry.name}</span>${this._getPagePart(entry,true)}</span>`}if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i){const cacheDepth=meta.depth;meta.depth=2;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth}}textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderInsetReadaloud=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="rd__b-inset rd__b-inset--readaloud ${entry.style||""}" ${dataString}>`;const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,1);if(entry.name!=null){if(Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);textStack[0]+=`<span class="rd__h rd__h--2-inset" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${entry.name}</span>${this._getPagePart(entry,true)}</span>`}const len=entry.entries.length;for(let i=0;i<len;++i){const cacheDepth=meta.depth;meta.depth=2;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth}textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderVariant=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);if(entry.name!=null&&Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,1);textStack[0]+=`<${this.wrapperTag} class="rd__b-inset" ${dataString}>`;textStack[0]+=`<span class="rd__h rd__h--2-inset" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">Variant: ${entry.name}</span></span>`;const len=entry.entries.length;for(let i=0;i<len;++i){const cacheDepth=meta.depth;meta.depth=2;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth}if(entry.variantSource)textStack[0]+=Renderer.utils.getSourceAndPageTrHtml(entry.variantSource);textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderVariantInner=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);if(entry.name!=null&&Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,1);textStack[0]+=`<${this.wrapperTag} class="rd__b-inset-inner" ${dataString}>`;textStack[0]+=`<span class="rd__h rd__h--2-inset" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${entry.name}</span></span>`;const len=entry.entries.length;for(let i=0;i<len;++i){const cacheDepth=meta.depth;meta.depth=2;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth}if(entry.variantSource)textStack[0]+=Renderer.utils.getSourceAndPageTrHtml(entry.variantSource);textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderVariantSub=function(entry,textStack,meta,options){this._subVariant=true;const fauxEntry=entry;fauxEntry.type="entries";const cacheDepth=meta.depth;meta.depth=3;this._recursiveRender(fauxEntry,textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth;this._subVariant=false};this._renderSpellcasting_getEntries=function(entry){const hidden=new Set(entry.hidden||[]);const toRender=[{type:"entries",name:entry.name,entries:entry.headerEntries?MiscUtil.copy(entry.headerEntries):[]}];if(entry.constant||entry.will||entry.rest||entry.daily||entry.weekly||entry.ritual){const tempList={type:"list",style:"list-hang-notitle",items:[],data:{isSpellList:true}};if(entry.constant&&!hidden.has("constant"))tempList.items.push({type:"itemSpell",name:`Constant:`,entry:this._renderSpellcasting_getRenderableList(entry.constant).join(", ")});if(entry.will&&!hidden.has("will"))tempList.items.push({type:"itemSpell",name:`At will:`,entry:this._renderSpellcasting_getRenderableList(entry.will).join(", ")});if(entry.rest&&!hidden.has("rest")){for(let lvl=9;lvl>0;lvl--){const rest=entry.rest;if(rest[lvl])tempList.items.push({type:"itemSpell",name:`${lvl}/rest:`,entry:this._renderSpellcasting_getRenderableList(rest[lvl]).join(", ")});const lvlEach=`${lvl}e`;if(rest[lvlEach])tempList.items.push({type:"itemSpell",name:`${lvl}/rest each:`,entry:this._renderSpellcasting_getRenderableList(rest[lvlEach]).join(", ")})}}if(entry.daily&&!hidden.has("daily")){for(let lvl=9;lvl>0;lvl--){const daily=entry.daily;if(daily[lvl])tempList.items.push({type:"itemSpell",name:`${lvl}/day:`,entry:this._renderSpellcasting_getRenderableList(daily[lvl]).join(", ")});const lvlEach=`${lvl}e`;if(daily[lvlEach])tempList.items.push({type:"itemSpell",name:`${lvl}/day each:`,entry:this._renderSpellcasting_getRenderableList(daily[lvlEach]).join(", ")})}}if(entry.weekly&&!hidden.has("weekly")){for(let lvl=9;lvl>0;lvl--){const weekly=entry.weekly;if(weekly[lvl])tempList.items.push({type:"itemSpell",name:`${lvl}/week:`,entry:this._renderSpellcasting_getRenderableList(weekly[lvl]).join(", ")});const lvlEach=`${lvl}e`;if(weekly[lvlEach])tempList.items.push({type:"itemSpell",name:`${lvl}/week each:`,entry:this._renderSpellcasting_getRenderableList(weekly[lvlEach]).join(", ")})}}if(entry.ritual&&!hidden.has("ritual"))tempList.items.push({type:"itemSpell",name:`Rituals:`,entry:this._renderSpellcasting_getRenderableList(entry.ritual).join(", ")});tempList.items=tempList.items.filter((it=>it.entry!==""));if(tempList.items.length)toRender[0].entries.push(tempList)}if(entry.spells&&!hidden.has("spells")){const tempList={type:"list",style:"list-hang-notitle",items:[],data:{isSpellList:true}};for(let lvl=0;lvl<10;++lvl){const spells=entry.spells[lvl];if(spells){let levelCantrip=`${Parser.spLevelToFull(lvl)}${lvl===0?"s":" level"}`;let slotsAtWill=` (at will)`;const slots=spells.slots;if(slots>=0)slotsAtWill=slots>0?` (${slots} slot${slots>1?"s":""})`:``;if(spells.lower&&spells.lower!==lvl){levelCantrip=`${Parser.spLevelToFull(spells.lower)}-${levelCantrip}`;if(slots>=0)slotsAtWill=slots>0?` (${slots} ${Parser.spLevelToFull(lvl)}-level slot${slots>1?"s":""})`:``}tempList.items.push({type:"itemSpell",name:`${levelCantrip}${slotsAtWill}:`,entry:this._renderSpellcasting_getRenderableList(spells.spells).join(", ")||"—"})}}toRender[0].entries.push(tempList)}if(entry.footerEntries)toRender.push({type:"entries",entries:entry.footerEntries});return toRender};this._renderSpellcasting_getRenderableList=function(spellList){return spellList.filter((it=>!it.hidden)).map((it=>it.entry||it))};this._renderSpellcasting=function(entry,textStack,meta,options){const toRender=this._renderSpellcasting_getEntries(entry);this._recursiveRender({type:"entries",entries:toRender},textStack,meta)};this._renderQuote=function(entry,textStack,meta,options){const len=entry.entries.length;for(let i=0;i<len;++i){textStack[0]+=`<p class="rd__quote-line ${i===len-1&&entry.by?`rd__quote-line--last`:""}">${i===0&&!entry.skipMarks?"&ldquo;":""}`;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:entry.skipItalics?"":"<i>",suffix:entry.skipItalics?"":"</i>"});textStack[0]+=`${i===len-1&&!entry.skipMarks?"&rdquo;":""}</p>`}if(entry.by||entry.from){textStack[0]+=`<p>`;const tempStack=[""];if(entry.by)this._recursiveRender(entry.by,tempStack,meta);textStack[0]+=`<span class="rd__quote-by">— ${entry.by?tempStack.join(""):""}${entry.by&&entry.from?`, `:""}${entry.from?`<i>${entry.from}</i>`:""}</span>`;textStack[0]+=`</p>`}};this._renderOptfeature=function(entry,textStack,meta,options){this._renderEntriesSubtypes(entry,textStack,meta,options,true)};this._renderPatron=function(entry,textStack,meta,options){this._renderEntriesSubtypes(entry,textStack,meta,options,false)};this._renderAbilityDc=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="text-center"><b>`;this._recursiveRender(entry.name,textStack,meta);textStack[0]+=` save DC</b> = 8 + your proficiency bonus + your ${Parser.attrChooseToFull(entry.attributes)}</div>`;this._renderSuffix(entry,textStack,meta,options)};this._renderAbilityAttackMod=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="text-center"><b>`;this._recursiveRender(entry.name,textStack,meta);textStack[0]+=` attack modifier</b> = your proficiency bonus + your ${Parser.attrChooseToFull(entry.attributes)}</div>`;this._renderSuffix(entry,textStack,meta,options)};this._renderAbilityGeneric=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="text-center">`;if(entry.name)this._recursiveRender(entry.name,textStack,meta,{prefix:"<b>",suffix:"</b> = "});textStack[0]+=`${entry.text}${entry.attributes?` ${Parser.attrChooseToFull(entry.attributes)}`:""}</div>`;this._renderSuffix(entry,textStack,meta,options)};this._renderInline=function(entry,textStack,meta,options){if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta)}};this._renderInlineBlock=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta)}this._renderSuffix(entry,textStack,meta,options)};this._renderBonus=function(entry,textStack,meta,options){textStack[0]+=(entry.value<0?"":"+")+entry.value};this._renderBonusSpeed=function(entry,textStack,meta,options){textStack[0]+=entry.value===0?"—":`${entry.value<0?"":"+"}${entry.value} ft.`};this._renderDice=function(entry,textStack,meta,options){const pluginResults=this._getPlugins("dice","*").map((plugin=>plugin(entry,textStack,meta,options))).filter(Boolean);textStack[0]+=Renderer.getEntryDice(entry,entry.name,{isAddHandlers:this._isAddHandlers,pluginResults:pluginResults})};this._renderActions=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);if(entry.name!=null&&Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,2);textStack[0]+=`<${this.wrapperTag} class="${Renderer.HEAD_2}" ${dataString}><span class="rd__h rd__h--3" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${entry.name}.</span></span> `;const len=entry.entries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderAttack=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<i>${Parser.attackTypeToFull(entry.attackType)}:</i> `;const len=entry.attackEntries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.attackEntries[i],textStack,meta);textStack[0]+=` <i>Hit:</i> `;const len2=entry.hitEntries.length;for(let i=0;i<len2;++i)this._recursiveRender(entry.hitEntries[i],textStack,meta);this._renderSuffix(entry,textStack,meta,options)};this._renderIngredient=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._recursiveRender(entry.entry,textStack,meta);this._renderSuffix(entry,textStack,meta,options)};this._renderItem=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<p class="rd__p-list-item"><span class="${entry.style||"bold"} rd__list-item-name">${this.render(entry.name)}</span> `;if(entry.entry)this._recursiveRender(entry.entry,textStack,meta);else if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta,{prefix:i>0?`<span class="rd__p-cont-indent">`:"",suffix:i>0?"</span>":""})}textStack[0]+="</p>";this._renderSuffix(entry,textStack,meta,options)};this._renderItemSub=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._recursiveRender(entry.entry,textStack,meta,{prefix:`<p class="rd__p-list-item"><span class="italic rd__list-item-name">${entry.name}</span> `,suffix:"</p>"});this._renderSuffix(entry,textStack,meta,options)};this._renderItemSpell=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._recursiveRender(entry.entry,textStack,meta,{prefix:`<p>${entry.name} `,suffix:"</p>"});this._renderSuffix(entry,textStack,meta,options)};this._renderDataCreature=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataCreature.name);textStack[0]+=Renderer.monster.getCompactRenderedString(entry.dataCreature,this,{isEmbeddedEntity:true});this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataSpell=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataSpell.name);textStack[0]+=Renderer.spell.getCompactRenderedString(entry.dataSpell,{isEmbeddedEntity:true});this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataTrapHazard=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataTrapHazard.name);textStack[0]+=Renderer.traphazard.getCompactRenderedString(entry.dataTrapHazard,{isEmbeddedEntity:true});this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataObject=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataObject.name);textStack[0]+=Renderer.object.getCompactRenderedString(entry.dataObject,{isEmbeddedEntity:true});this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataItem=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataItem.name);const id=CryptUtil.uid();const asString=JSON.stringify(entry.dataItem);textStack[0]+=`<script id="dataItem-${id}">Renderer.item.populatePropertyAndTypeReference().then(() => {const dataItem = ${asString}; Renderer.item.enhanceItem(dataItem); $("#dataItem-${id}").replaceWith(Renderer.item.getCompactRenderedString(dataItem,  {isEmbeddedEntity: true}))})<\/script>`;this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataLegendaryGroup=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);this._renderDataHeader(textStack,entry.dataLegendaryGroup.name);textStack[0]+=Renderer.monster.getCompactRenderedStringLegendaryGroup(entry.dataLegendaryGroup,{isEmbeddedEntity:true});this._renderDataFooter(textStack);this._renderSuffix(entry,textStack,meta,options)};this._renderDataHeader=function(textStack,name){textStack[0]+=`<table class="rd__b-data">`;textStack[0]+=`<thead><tr><th class="rd__data-embed-header" colspan="6" data-rd-data-embed-header="true"><span style="display: none;" class="rd__data-embed-name">${name}</span><span class="rd__data-embed-toggle">[–]</span></th></tr></thead><tbody>`};this._renderDataFooter=function(textStack){textStack[0]+=`</tbody></table>`};this._renderGallery=function(entry,textStack,meta,options){textStack[0]+=`<div class="rd__wrp-gallery">`;const len=entry.images.length;const anyNamed=entry.images.find((it=>it.title));for(let i=0;i<len;++i){const img=MiscUtil.copy(entry.images[i]);if(anyNamed&&!img.title)img._galleryTitlePad=true;delete img.imageType;this._recursiveRender(img,textStack,meta,options)}textStack[0]+=`</div>`};this._renderFlowchart=function(entry,textStack,meta,options){textStack[0]+=`<div class="rd__wrp-flowchart">`;const len=entry.blocks.length;for(let i=0;i<len;++i){this._recursiveRender(entry.blocks[i],textStack,meta,options);if(i!==len-1){textStack[0]+=`<div class="rd__s-v-flow"></div>`}}textStack[0]+=`</div>`};this._renderFlowBlock=function(entry,textStack,meta,options){const dataString=this._renderEntriesSubtypes_getDataString(entry);textStack[0]+=`<${this.wrapperTag} class="rd__b-flow" ${dataString}>`;const cachedLastDepthTrackerProps=MiscUtil.copy(this._lastDepthTrackerInheritedProps);this._handleTrackDepth(entry,1);if(entry.name!=null){if(Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[entry.type])this._handleTrackTitles(entry.name);textStack[0]+=`<span class="rd__h rd__h--2-flow-block" data-title-index="${this._headerIndex++}" ${this._getEnumeratedTitleRel(entry.name)}><span class="entry-title-inner">${entry.name}</span></span>`}if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i){const cacheDepth=meta.depth;meta.depth=2;this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"});meta.depth=cacheDepth}}textStack[0]+=`<div class="float-clear"></div>`;textStack[0]+=`</${this.wrapperTag}>`;this._lastDepthTrackerInheritedProps=cachedLastDepthTrackerProps};this._renderHomebrew=function(entry,textStack,meta,options){this._renderPrefix(entry,textStack,meta,options);textStack[0]+=`<div class="homebrew-section"><div class="homebrew-float"><span class="homebrew-notice"></span>`;if(entry.oldEntries){const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:"Homebrew",entries:entry.oldEntries});let markerText;if(entry.movedTo){markerText="(See moved content)"}else if(entry.entries){markerText="(See replaced content)"}else{markerText="(See removed content)"}textStack[0]+=`<span class="homebrew-old-content" href="#${window.location.hash}" ${hoverMeta.html}>${markerText}</span>`}textStack[0]+=`</div>`;if(entry.entries){const len=entry.entries.length;for(let i=0;i<len;++i)this._recursiveRender(entry.entries[i],textStack,meta,{prefix:"<p>",suffix:"</p>"})}else if(entry.movedTo){textStack[0]+=`<i>This content has been moved to ${entry.movedTo}.</i>`}else{textStack[0]+="<i>This content has been deleted.</i>"}textStack[0]+=`</div>`;this._renderSuffix(entry,textStack,meta,options)};this._renderCode=function(entry,textStack,meta,options){const isWrapped=!!StorageUtil.syncGet("rendererCodeWrap");textStack[0]+=`\n\t\t\t<div class="flex-col h-100">\n\t\t\t\t<div class="flex no-shrink pt-1">\n\t\t\t\t\t<button class="btn btn-default btn-xs mb-1 mr-2" onclick="Renderer.events.handleClick_copyCode(event, this)">Copy Code</button>\n\t\t\t\t\t<button class="btn btn-default btn-xs mb-1 ${isWrapped?"active":""}" onclick="Renderer.events.handleClick_toggleCodeWrap(event, this)">Word Wrap</button>\n\t\t\t\t</div>\n\t\t\t\t<pre class="h-100 w-100 mb-1 ${isWrapped?"rd__pre-wrap":""}">${entry.preformatted}</pre>\n\t\t\t</div>\n\t\t`};this._renderHr=function(entry,textStack,meta,options){textStack[0]+=`<hr class="rd__hr">`};this._getStyleClass=function(entry){const outList=[];if(SourceUtil.isNonstandardSource(entry.source))outList.push("spicy-sauce");if(BrewUtil.hasSourceJson(entry.source))outList.push("refreshing-brew");if(this._extraSourceClasses)outList.push(...this._extraSourceClasses);for(const k in this._fnsGetStyleClasses){const fromFn=this._fnsGetStyleClasses[k](entry);if(fromFn)outList.push(...fromFn)}if(entry.style)outList.push(entry.style);return outList.join(" ")};this._renderString=function(entry,textStack,meta,options){const tagSplit=Renderer.splitByTags(entry);const len=tagSplit.length;for(let i=0;i<len;++i){const s=tagSplit[i];if(!s)continue;if(s.startsWith("{@")){const[tag,text]=Renderer.splitFirstSpace(s.slice(1,-1));this._renderString_renderTag(textStack,meta,options,tag,text)}else textStack[0]+=s}};this._renderString_renderTag=function(textStack,meta,options,tag,text){for(const plugin of this._getPlugins("string","tag")){const out=plugin(tag,text,textStack,meta,options);if(out)return void(textStack[0]+=out)}for(const plugin of this._getPlugins("string",tag)){const out=plugin(tag,text,textStack,meta,options);if(out)return void(textStack[0]+=out)}switch(tag){case"@b":case"@bold":textStack[0]+=`<b>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</b>`;break;case"@i":case"@italic":textStack[0]+=`<i>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</i>`;break;case"@s":case"@strike":textStack[0]+=`<s>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</s>`;break;case"@u":case"@underline":textStack[0]+=`<u>`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</u>`;break;case"@note":textStack[0]+=`<i class="ve-muted">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</i>`;break;case"@atk":textStack[0]+=`<i>${Renderer.attackTagToFull(text)}</i>`;break;case"@h":textStack[0]+=`<i>Hit:</i> `;break;case"@color":{const[toDisplay,color]=Renderer.splitTagByPipe(text);const scrubbedColor=BrewUtil.getValidColor(color);textStack[0]+=`<span style="color: #${scrubbedColor}">`;this._recursiveRender(toDisplay,textStack,meta);textStack[0]+=`</span>`;break}case"@highlight":{const[toDisplay,color]=Renderer.splitTagByPipe(text);const scrubbedColor=color?BrewUtil.getValidColor(color):null;textStack[0]+=scrubbedColor?`<span style="background-color: #${scrubbedColor}">`:`<span class="rd__highlight">`;textStack[0]+=toDisplay;textStack[0]+=`</span>`;break}case"@help":{const[toDisplay,title=""]=Renderer.splitTagByPipe(text);textStack[0]+=`<span class="help" title="${title.qq()}">`;this._recursiveRender(toDisplay,textStack,meta);textStack[0]+=`</span>`;break}case"@comic":textStack[0]+=`<span class="rd__comic">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@comicH1":textStack[0]+=`<span class="rd__comic rd__comic--h1">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@comicH2":textStack[0]+=`<span class="rd__comic rd__comic--h2">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@comicH3":textStack[0]+=`<span class="rd__comic rd__comic--h3">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@comicH4":textStack[0]+=`<span class="rd__comic rd__comic--h4">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@comicNote":textStack[0]+=`<span class="rd__comic rd__comic--note">`;this._recursiveRender(text,textStack,meta);textStack[0]+=`</span>`;break;case"@dc":{textStack[0]+=`DC <span class="rd__dc">${text}</span>`;break}case"@dice":case"@damage":case"@hit":case"@d20":case"@chance":case"@recharge":case"@ability":case"@savingThrow":case"@skillCheck":{const fauxEntry=Renderer.utils.getTagEntry(tag,text);if(tag==="@recharge"){const[,flagsRaw]=Renderer.splitTagByPipe(text);const flags=flagsRaw?flagsRaw.split(""):null;textStack[0]+=`${flags&&flags.includes("m")?"":"("}Recharge `;this._recursiveRender(fauxEntry,textStack,meta);textStack[0]+=`${flags&&flags.includes("m")?"":")"}`}else{this._recursiveRender(fauxEntry,textStack,meta)}break}case"@hitYourSpellAttack":this._renderString_renderTag_hitYourSpellAttack(textStack,meta,options,tag,text);break;case"@scaledice":case"@scaledamage":{const fauxEntry=Renderer.parseScaleDice(tag,text);this._recursiveRender(fauxEntry,textStack,meta);break}case"@filter":{const[displayText,page,...filters]=Renderer.splitTagByPipe(text);const filterSubhashMeta=Renderer.getFilterSubhashes(filters);const fauxEntry={type:"link",text:displayText,href:{type:"internal",path:`${page}.html`,hash:HASH_BLANK,hashPreEncoded:true,subhashes:filterSubhashMeta.subhashes}};if(filterSubhashMeta.customHash)fauxEntry.href.hash=filterSubhashMeta.customHash;this._recursiveRender(fauxEntry,textStack,meta);break}case"@link":{const[displayText,url]=Renderer.splitTagByPipe(text);let outUrl=url==null?displayText:url;if(!outUrl.startsWith("http"))outUrl=`http://${outUrl}`;const fauxEntry={type:"link",href:{type:"external",url:outUrl},text:displayText};this._recursiveRender(fauxEntry,textStack,meta);break}case"@5etools":{const[displayText,page,hash]=Renderer.splitTagByPipe(text);const fauxEntry={type:"link",href:{type:"internal",path:page},text:displayText};if(hash){fauxEntry.hash=hash;fauxEntry.hashPreEncoded=true}this._recursiveRender(fauxEntry,textStack,meta);break}case"@footnote":{const[displayText,footnoteText,optTitle]=Renderer.splitTagByPipe(text);const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:optTitle?optTitle.toTitleCase():"Footnote",entries:[footnoteText,optTitle?`{@note ${optTitle}}`:""].filter(Boolean)});textStack[0]+=`<span class="help" ${hoverMeta.html}>`;this._recursiveRender(displayText,textStack,meta);textStack[0]+=`</span>`;break}case"@homebrew":{const[newText,oldText]=Renderer.splitTagByPipe(text);const tooltipEntries=[];if(newText&&oldText){tooltipEntries.push("{@b This is a homebrew addition, replacing the following:}")}else if(newText){tooltipEntries.push("{@b This is a homebrew addition.}")}else if(oldText){tooltipEntries.push("{@b The following text has been removed with this homebrew:}")}if(oldText){tooltipEntries.push(oldText)}const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:"Homebrew Modifications",entries:tooltipEntries});textStack[0]+=`<span class="homebrew-inline" ${hoverMeta.html}>`;this._recursiveRender(newText||"[...]",textStack,meta);textStack[0]+=`</span>`;break}case"@skill":case"@sense":{const expander=tag==="@skill"?Parser.skillToExplanation:tag==="@sense"?Parser.senseToExplanation:null;const[name,displayText]=Renderer.splitTagByPipe(text);const hoverMeta=Renderer.hover.getMakePredefinedHover({type:"entries",name:name.toTitleCase(),entries:expander(name)});textStack[0]+=`<span class="help help--hover" ${hoverMeta.html}>${displayText||name}</span>`;break}case"@area":{const[compactText,areaId,flags,...others]=Renderer.splitTagByPipe(text);const renderText=flags&&flags.includes("x")?compactText:`${flags&&flags.includes("u")?"A":"a"}rea ${compactText}`;if(typeof BookUtil==="undefined"){textStack[0]+=renderText}else{const area=BookUtil.curRender.headerMap[areaId]||{entry:{name:""}};const hoverMeta=Renderer.hover.getMakePredefinedHover(area.entry,{isLargeBookContent:true,depth:area.depth});textStack[0]+=`<a href="#${BookUtil.curRender.curBookId},${area.chapter},${UrlUtil.encodeForHash(area.entry.name)},0" ${hoverMeta.html}>${renderText}</a>`}break}case"@loader":{const{name:name,path:path}=this._renderString_getLoaderTagMeta(text);textStack[0]+=`<span onclick="BrewUtil.handleLoadbrewClick(this)" data-rd-loader-path="${path.escapeQuotes()}" data-rd-loader-name="${name.escapeQuotes()}" class="rd__wrp-loadbrew--ready" title="Click to install homebrew">${name}<span class="glyphicon glyphicon-download-alt rd__loadbrew-icon rd__loadbrew-icon"></span></span>`;break}case"@book":case"@adventure":{const page=tag==="@book"?"book.html":"adventure.html";const[displayText,book,chapter,section,rawNumber]=Renderer.splitTagByPipe(text);const number=rawNumber||0;const hash=`${book}${chapter?`${HASH_PART_SEP}${chapter}${section?`${HASH_PART_SEP}${UrlUtil.encodeForHash(section)}${number!=null?`${HASH_PART_SEP}${UrlUtil.encodeForHash(number)}`:""}`:""}`:""}`;const fauxEntry={type:"link",href:{type:"internal",path:page,hash:hash,hashPreEncoded:true},text:displayText};this._recursiveRender(fauxEntry,textStack,meta);break}default:{const{name:name,source:source,displayText:displayText,others:others,page:page,hash:hash,hashPreEncoded:hashPreEncoded,pageHover:pageHover,hashHover:hashHover,hashPreEncodedHover:hashPreEncodedHover,preloadId:preloadId,linkText:linkText}=Renderer.utils.getTagMeta(tag,text);const fauxEntry={type:"link",href:{type:"internal",path:page,hash:hash,hover:{page:page,source:source}},text:displayText||name};if(hashPreEncoded!=null)fauxEntry.href.hashPreEncoded=hashPreEncoded;if(pageHover!=null)fauxEntry.href.hover.page=pageHover;if(hashHover!=null)fauxEntry.href.hover.hash=hashHover;if(hashPreEncodedHover!=null)fauxEntry.href.hover.hashPreEncoded=hashPreEncodedHover;if(preloadId!=null)fauxEntry.href.hover.preloadId=preloadId;if(linkText)fauxEntry.text=linkText;this._recursiveRender(fauxEntry,textStack,meta);break}}};this._renderString_renderTag_hitYourSpellAttack=function(textStack,meta,options,tag,text){const fauxEntry={type:"dice",rollable:true,subType:"d20",displayText:"your spell attack modifier",toRoll:`1d20 + #$prompt_number:title=Enter your Spell Attack Modifier$#`};return this._recursiveRender(fauxEntry,textStack,meta)};this._renderString_getLoaderTagMeta=function(text){const[name,file]=Renderer.splitTagByPipe(text);const path=/^.*?:\/\//.test(file)?file:`https://raw.githubusercontent.com/TheGiddyLimit/homebrew/master/${file}`;return{name:name,path:path}};this._renderPrimitive=function(entry,textStack,meta,options){textStack[0]+=entry};this._renderLink=function(entry,textStack,meta,options){let href=this._renderLink_getHref(entry);if(entry.href.hover&&this._roll20Ids){const procHash=UrlUtil.encodeForHash(entry.href.hash);const id=this._roll20Ids[procHash];if(id){href=`http://journal.roll20.net/${id.type}/${id.roll20Id}`}}const pluginData=this._getPlugins("link","*").map((plugin=>plugin(entry,textStack,meta,options))).filter(Boolean);const isDisableEvents=pluginData.some((it=>it.isDisableEvents));const additionalAttributes=pluginData.map((it=>it.attributes)).filter(Boolean);if(this._isInternalLinksDisabled&&entry.href.type==="internal"){textStack[0]+=`<span class="bold" ${isDisableEvents?"":this._renderLink_getHoverString(entry)} ${additionalAttributes.join(" ")}>${this.render(entry.text)}</span>`}else{textStack[0]+=`<a href="${href.qq()}" ${entry.href.type==="internal"?"":`target="_blank" rel="noopener noreferrer"`} ${isDisableEvents?"":this._renderLink_getHoverString(entry)} ${additionalAttributes.join(" ")}>${this.render(entry.text)}</a>`}};this._renderLink_getHref=function(entry){let href;if(entry.href.type==="internal"){href=`${this.baseUrl}${entry.href.path}#`;if(entry.href.hash!=null){href+=entry.href.hashPreEncoded?entry.href.hash:UrlUtil.encodeForHash(entry.href.hash)}if(entry.href.subhashes!=null){for(let i=0;i<entry.href.subhashes.length;++i){href+=this._renderLink_getSubhashPart(entry.href.subhashes[i])}}}else if(entry.href.type==="external"){href=entry.href.url}return href};this._renderLink_getSubhashPart=function(subHash){let out="";if(subHash.preEncoded)out+=`${HASH_PART_SEP}${subHash.key}${HASH_SUB_KV_SEP}`;else out+=`${HASH_PART_SEP}${UrlUtil.encodeForHash(subHash.key)}${HASH_SUB_KV_SEP}`;if(subHash.value!=null){if(subHash.preEncoded)out+=subHash.value;else out+=UrlUtil.encodeForHash(subHash.value)}else{out+=subHash.values.map((v=>UrlUtil.encodeForHash(v))).join(HASH_SUB_LIST_SEP)}return out};this._renderLink_getHoverString=function(entry){if(!entry.href.hover||!this._isAddHandlers)return"";let procHash=entry.href.hover.hash?entry.href.hover.hashPreEncoded?entry.href.hover.hash:UrlUtil.encodeForHash(entry.href.hover.hash):entry.href.hashPreEncoded?entry.href.hash:UrlUtil.encodeForHash(entry.href.hash);if(this._tagExportDict){this._tagExportDict[procHash]={page:entry.href.hover.page,source:entry.href.hover.source,hash:procHash}}if(entry.href.hover.subhashes){for(let i=0;i<entry.href.hover.subhashes.length;++i){procHash+=this._renderLink_getSubhashPart(entry.href.hover.subhashes[i])}}const pluginData=this._getPlugins("link","attributesHover").map((plugin=>plugin(entry,procHash))).filter(Boolean);const replacementAttributes=pluginData.map((it=>it.attributesHoverReplace)).filter(Boolean);if(replacementAttributes.length)return replacementAttributes.join(" ");return`onmouseover="Renderer.hover.pHandleLinkMouseOver(event, this)" onmouseleave="Renderer.hover.handleLinkMouseLeave(event, this)" onmousemove="Renderer.hover.handleLinkMouseMove(event, this)" data-vet-page="${entry.href.hover.page.qq()}" data-vet-source="${entry.href.hover.source.qq()}" data-vet-hash="${procHash.qq()}" ${entry.href.hover.preloadId!=null?`data-vet-preload-id="${`${entry.href.hover.preloadId}`.qq()}"`:""} ${Renderer.hover.getPreventTouchString()}`};this.render=function(entry,depth=0){const tempStack=[];this.recursiveRender(entry,tempStack,{depth:depth});return tempStack.join("")}}Renderer.ENTRIES_WITH_ENUMERATED_TITLES=[{type:"section",key:"entries",depth:-1},{type:"entries",key:"entries",depthIncrement:1},{type:"options",key:"entries"},{type:"inset",key:"entries",depth:2},{type:"insetReadaloud",key:"entries",depth:2},{type:"variant",key:"entries",depth:2},{type:"variantInner",key:"entries",depth:2},{type:"actions",key:"entries",depth:2},{type:"flowBlock",key:"entries",depth:2},{type:"optfeature",key:"entries",depthIncrement:1},{type:"patron",key:"entries"}];Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP=Renderer.ENTRIES_WITH_ENUMERATED_TITLES.mergeMap((it=>({[it.type]:it})));Renderer.ENTRIES_WITH_CHILDREN=[...Renderer.ENTRIES_WITH_ENUMERATED_TITLES,{type:"list",key:"items"},{type:"table",key:"rows"}];Renderer.events={handleClick_copyCode(evt,ele){const $e=$(ele).parent().next("pre");MiscUtil.pCopyTextToClipboard($e.text());JqueryUtil.showCopiedEffect($e)},handleClick_toggleCodeWrap(evt,ele){const nxt=!StorageUtil.syncGet("rendererCodeWrap");StorageUtil.syncSet("rendererCodeWrap",nxt);const $btn=$(ele).toggleClass("active",nxt);const $e=$btn.parent().next("pre");$e.toggleClass("rd__pre-wrap",nxt)},handleClick_dataEmbedHeader(evt,ele){const $ele=$(ele);$ele.find(".rd__data-embed-name").toggle();$ele.find(".rd__data-embed-toggle").text($ele.text().includes("+")?"[–]":"[+]");$ele.closest("table").find("tbody").toggle()}};Renderer.applyProperties=function(entry,object){const propSplit=Renderer.splitByPropertyInjectors(entry);const len=propSplit.length;if(len===1)return entry;let textStack="";for(let i=0;i<len;++i){const s=propSplit[i];if(!s)continue;if(s.startsWith("{=")){const[path,modifiers]=s.slice(2,-1).split("/");let fromProp=object[path];if(modifiers){for(const modifier of modifiers){switch(modifier){case"a":fromProp=Renderer.applyProperties._leadingAn.has(fromProp[0].toLowerCase())?"an":"a";break;case"l":fromProp=fromProp.toLowerCase();break;case"t":fromProp=fromProp.toTitleCase();break;case"u":fromProp=fromProp.toUpperCase();break;case"v":fromProp=Parser.numberToVulgar(fromProp);break}}}textStack+=fromProp}else textStack+=s}return textStack};Renderer.applyProperties._leadingAn=new Set(["a","e","i","o","u"]);Renderer.applyAllProperties=function(entries,object=null){let lastObj=null;const handlers={object:obj=>{lastObj=obj;return obj},string:str=>Renderer.applyProperties(str,object||lastObj)};return MiscUtil.getWalker().walk(entries,handlers)};Renderer.attackTagToFull=function(tagStr){function renderTag(tags){return`${tags.includes("m")?"Melee ":tags.includes("r")?"Ranged ":tags.includes("g")?"Magical ":tags.includes("a")?"Area ":""}${tags.includes("w")?"Weapon ":tags.includes("s")?"Spell ":""}`}const tagGroups=tagStr.toLowerCase().split(",").map((it=>it.trim())).filter((it=>it)).map((it=>it.split("")));if(tagGroups.length>1){const seen=new Set(tagGroups.last());for(let i=tagGroups.length-2;i>=0;--i){tagGroups[i]=tagGroups[i].filter((it=>{const out=!seen.has(it);seen.add(it);return out}))}}return`${tagGroups.map((it=>renderTag(it))).join(" or ")}Attack:`};Renderer.splitFirstSpace=function(string){const firstIndex=string.indexOf(" ");return firstIndex===-1?[string,""]:[string.substr(0,firstIndex),string.substr(firstIndex+1)]};Renderer._splitByTagsBase=function(leadingCharacter){return function(string){let tagDepth=0;let char,char2;const out=[];let curStr="";let isLastOpen=false;const len=string.length;for(let i=0;i<len;++i){char=string[i];char2=string[i+1];switch(char){case"{":isLastOpen=true;if(char2===leadingCharacter){if(tagDepth++>0){curStr+="{"}else{out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));curStr=`{${leadingCharacter}`;++i}}else curStr+="{";break;case"}":isLastOpen=false;curStr+="}";if(tagDepth!==0&&--tagDepth===0){out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));curStr=""}break;case leadingCharacter:{if(!isLastOpen)curStr+="<VE_LEAD>";else curStr+=leadingCharacter;break}default:isLastOpen=false;curStr+=char;break}}if(curStr)out.push(curStr.replace(/<VE_LEAD>/g,leadingCharacter));return out}};Renderer.splitByTags=Renderer._splitByTagsBase("@");Renderer.splitByPropertyInjectors=Renderer._splitByTagsBase("=");Renderer._splitByPipeBase=function(leadingCharacter){return function(string){let tagDepth=0;let char,char2;const out=[];let curStr="";const len=string.length;for(let i=0;i<len;++i){char=string[i];char2=string[i+1];switch(char){case"{":if(char2===leadingCharacter)tagDepth++;curStr+="{";break;case"}":if(tagDepth)tagDepth--;curStr+="}";break;case"|":{if(tagDepth)curStr+="|";else{out.push(curStr);curStr=""}break}default:{curStr+=char;break}}}if(curStr)out.push(curStr);return out}};Renderer.splitTagByPipe=Renderer._splitByPipeBase("@");Renderer.getEntryDice=function(entry,name,opts={}){const toDisplay=Renderer.getEntryDiceDisplayText(entry);if(entry.rollable===true)return Renderer.getRollableEntryDice(entry,name,toDisplay,opts);else return toDisplay};Renderer.getRollableEntryDice=function(entry,name,toDisplay,{isAddHandlers:isAddHandlers=true,pluginResults:pluginResults=null}={}){const toPack=MiscUtil.copy(entry);if(typeof toPack.toRoll!=="string"){toPack.toRoll=Renderer.legacyDiceToString(toPack.toRoll)}const handlerPart=isAddHandlers?`onmousedown="event.preventDefault()" data-packed-dice='${JSON.stringify(toPack).qq()}'`:"";const rollableTitlePart=isAddHandlers?Renderer.getEntryDiceTitle(toPack.subType):null;const titlePart=isAddHandlers?`title="${[name,rollableTitlePart].filter(Boolean).join(". ").qq()}" ${name?`data-roll-name="${name}"`:""}`:name?`title="${name.qq()}" data-roll-name="${name.qq()}"`:"";const additionalDataPart=(pluginResults||[]).filter((it=>it.additionalData)).map((it=>Object.entries(it.additionalData).map((([dataKey,val])=>`${dataKey}='${typeof val==="object"?JSON.stringify(val).qq():`${val}`.qq()}'`)).join(" "))).join(" ");toDisplay=(pluginResults||[]).filter((it=>it.toDisplay))[0]?.toDisplay??toDisplay;return`<span class="roller render-roller" ${titlePart} ${handlerPart} ${additionalDataPart}>${toDisplay}</span>`};Renderer.getEntryDiceTitle=function(subType){return`Click to roll. ${subType==="damage"?"SHIFT to roll a critical hit, CTRL to half damage (rounding down).":subType==="d20"?"SHIFT to roll with advantage, CTRL to roll with disadvantage.":"SHIFT/CTRL to roll twice."}`};Renderer.legacyDiceToString=function(array){let stack="";array.forEach((r=>{stack+=`${r.neg?"-":stack===""?"":"+"}${r.number||1}d${r.faces}${r.mod?r.mod>0?`+${r.mod}`:r.mod:""}`}));return stack};Renderer.getEntryDiceDisplayText=function(entry){function getDiceAsStr(){if(entry.successThresh)return`${entry.successThresh} percent`;else if(typeof entry.toRoll==="string")return entry.toRoll;else{return Renderer.legacyDiceToString(entry.toRoll)}}return entry.displayText?entry.displayText:getDiceAsStr()};Renderer.parseScaleDice=function(tag,text){const[baseRoll,progression,addPerProgress,renderMode]=Renderer.splitTagByPipe(text);const progressionParse=MiscUtil.parseNumberRange(progression,1,9);const baseLevel=Math.min(...progressionParse);const options={};const isMultableDice=/^(\d+)d(\d+)$/i.exec(addPerProgress);const getSpacing=()=>{let diff=null;const sorted=[...progressionParse].sort(SortUtil.ascSort);for(let i=1;i<sorted.length;++i){const prev=sorted[i-1];const curr=sorted[i];if(diff==null)diff=curr-prev;else if(curr-prev!==diff)return null}return diff};const spacing=getSpacing();progressionParse.forEach((k=>{const offset=k-baseLevel;if(isMultableDice&&spacing!=null){options[k]=offset?`${Number(isMultableDice[1])*(offset/spacing)}d${isMultableDice[2]}`:""}else{options[k]=offset?[...new Array(Math.floor(offset/spacing))].map((_=>addPerProgress)).join("+"):""}}));const out={type:"dice",rollable:true,toRoll:baseRoll,displayText:addPerProgress,prompt:{entry:renderMode==="psi"?"Spend Psi Points...":"Cast at...",mode:renderMode,options:options}};if(tag==="@scaledamage")out.subType="damage";return out};Renderer.getAbilityData=function(abArr){function doRenderOuter(abObj){const mainAbs=[];const asCollection=[];const areNegative=[];const toConvertToText=[];const toConvertToShortText=[];if(abObj!=null){handleAllAbilities(abObj);handleAbilitiesChoose();return new Renderer._AbilityData(toConvertToText.join("; "),toConvertToShortText.join("; "),asCollection,areNegative)}return new Renderer._AbilityData("","",[],[]);function handleAllAbilities(abObj,targetList){MiscUtil.copy(Parser.ABIL_ABVS).sort(((a,b)=>SortUtil.ascSort(abObj[b]||0,abObj[a]||0))).forEach((shortLabel=>handleAbility(abObj,shortLabel,targetList)))}function handleAbility(abObj,shortLabel,optToConvertToTextStorage){if(abObj[shortLabel]!=null){const isNegMod=abObj[shortLabel]<0;const toAdd=`${shortLabel.uppercaseFirst()} ${isNegMod?"":"+"}${abObj[shortLabel]}`;if(optToConvertToTextStorage){optToConvertToTextStorage.push(toAdd)}else{toConvertToText.push(toAdd);toConvertToShortText.push(toAdd)}mainAbs.push(shortLabel.uppercaseFirst());asCollection.push(shortLabel);if(isNegMod)areNegative.push(shortLabel)}}function handleAbilitiesChoose(){if(abObj.choose!=null){const ch=abObj.choose;let outStack="";if(ch.weighted){const w=ch.weighted;const froms=w.from.map((it=>it.uppercaseFirst()));const isAny=froms.length===6;let cntProcessed=0;const areIncreaseShort=[];const areIncrease=w.weights.filter((it=>it>=0)).sort(SortUtil.ascSort).reverse().map((it=>{areIncreaseShort.push(`+${it}`);if(isAny)return`${cntProcessed?"choose ":""}any ${cntProcessed++?`other `:""}+${it}`;return`one ${cntProcessed++?`other `:""}ability to increase by ${it}`}));const areReduceShort=[];const areReduce=w.weights.filter((it=>it<0)).map((it=>-it)).sort(SortUtil.ascSort).map((it=>{areReduceShort.push(`-${it}`);if(isAny)return`${cntProcessed?"choose ":""}any ${cntProcessed++?`other `:""}-${it}`;return`one ${cntProcessed++?`other `:""}ability to decrease by ${it}`}));const startText=isAny?`Choose `:`From ${froms.joinConjunct(", "," and ")} choose `;const ptAreaIncrease=isAny?areIncrease.concat(areReduce).join("; "):areIncrease.concat(areReduce).joinConjunct(", ",isAny?"; ":" and ");toConvertToText.push(`${startText}${ptAreaIncrease}`);toConvertToShortText.push(`${isAny?"Any combination ":""}${areIncreaseShort.concat(areReduceShort).join("/")}${isAny?"":` from ${froms.join("/")}`}`)}else{const allAbilities=ch.from.length===6;const allAbilitiesWithParent=isAllAbilitiesWithParent(ch);let amount=ch.amount===undefined?1:ch.amount;amount=(amount<0?"":"+")+amount;if(allAbilities){outStack+="any "}else if(allAbilitiesWithParent){outStack+="any other "}if(ch.count!=null&&ch.count>1){outStack+=`${Parser.numberToText(ch.count)} `}if(allAbilities||allAbilitiesWithParent){outStack+=`${ch.count>1?"unique ":""}${amount}`}else{for(let j=0;j<ch.from.length;++j){let suffix="";if(ch.from.length>1){if(j===ch.from.length-2){suffix=" or "}else if(j<ch.from.length-2){suffix=", "}}let thsAmount=` ${amount}`;if(ch.from.length>1){if(j!==ch.from.length-1){thsAmount=""}}outStack+=ch.from[j].uppercaseFirst()+thsAmount+suffix}}}if(outStack.trim()){toConvertToText.push(`Choose ${outStack}`);toConvertToShortText.push(outStack.uppercaseFirst())}}}function isAllAbilitiesWithParent(chooseAbs){const tempAbilities=[];for(let i=0;i<mainAbs.length;++i){tempAbilities.push(mainAbs[i].toLowerCase())}for(let i=0;i<chooseAbs.from.length;++i){const ab=chooseAbs.from[i].toLowerCase();if(!tempAbilities.includes(ab))tempAbilities.push(ab);if(!asCollection.includes(ab.toLowerCase))asCollection.push(ab.toLowerCase())}return tempAbilities.length===6}}const outerStack=(abArr||[null]).map((it=>doRenderOuter(it)));if(outerStack.length<=1)return outerStack[0];return new Renderer._AbilityData(`Choose one of: ${outerStack.map(((it,i)=>`(${Parser.ALPHABET[i].toLowerCase()}) ${it.asText}`)).join(" ")}`,`${outerStack.map(((it,i)=>`(${Parser.ALPHABET[i].toLowerCase()}) ${it.asTextShort}`)).join(" ")}`,[...new Set(outerStack.map((it=>it.asCollection)).flat())],[...new Set(outerStack.map((it=>it.areNegative)).flat())])};Renderer._AbilityData=function(asText,asTextShort,asCollection,areNegative){this.asText=asText;this.asTextShort=asTextShort;this.asCollection=asCollection;this.areNegative=areNegative};Renderer.getFilterSubhashes=function(filters,namespace=null){let customHash=null;const subhashes=filters.map((f=>{const[fName,fVals,fMeta,fOpts]=f.split("=").map((s=>s.trim()));const isBoxData=fName.startsWith("fb");const key=isBoxData?`${fName}${namespace?`.${namespace}`:""}`:`flst${namespace?`.${namespace}`:""}${UrlUtil.encodeForHash(fName)}`;let value;if(isBoxData){return{key:key,value:fVals,preEncoded:true}}else if(fName==="search"){return{key:VeCt.FILTER_BOX_SUB_HASH_SEARCH_PREFIX,value:UrlUtil.encodeForHash(fVals),preEncoded:true}}else if(fName==="hash"){customHash=fVals;return null}else if(fVals.startsWith("[")&&fVals.endsWith("]")){const[min,max]=fVals.substring(1,fVals.length-1).split(";").map((it=>it.trim()));if(max==null){value=[`min=${min}`,`max=${min}`].join(HASH_SUB_LIST_SEP)}else{value=[min?`min=${min}`:"",max?`max=${max}`:""].filter(Boolean).join(HASH_SUB_LIST_SEP)}}else{value=fVals.split(";").map((s=>s.trim())).filter(Boolean).map((s=>{if(s.startsWith("!"))return`${UrlUtil.encodeForHash(s.slice(1))}=2`;return`${UrlUtil.encodeForHash(s)}=1`})).join(HASH_SUB_LIST_SEP)}const out=[{key:key,value:value,preEncoded:true}];if(fMeta){out.push({key:`flmt${UrlUtil.encodeForHash(fName)}`,value:fMeta,preEncoded:true})}if(fOpts){out.push({key:`flop${UrlUtil.encodeForHash(fName)}`,value:fOpts,preEncoded:true})}return out})).flat().filter(Boolean);return{customHash:customHash,subhashes:subhashes}};Renderer.utils={getBorderTr:optText=>`<tr><th class="border" colspan="6">${optText||""}</th></tr>`,getDividerTr:()=>`<tr><td class="divider" colspan="6"><div></div></td></tr>`,getSourceSubText(it){return it.sourceSub?` — ${it.sourceSub}`:""},getNameTr:(it,opts)=>{opts=opts||{};let dataPart="";let pageLinkPart;if(opts.page){const hash=UrlUtil.URL_TO_HASH_BUILDER[opts.page](it);dataPart=`data-page="${opts.page}" data-source="${it.source.escapeQuotes()}" data-hash="${hash.escapeQuotes()}" ${opts.extensionData!=null?`data-extension='${JSON.stringify(opts.extensionData).escapeQuotes()}`:""}'`;pageLinkPart=SourceUtil.getAdventureBookSourceHref(it.source,it.page);if(opts.isEmbeddedEntity)Renderer.hover.addEmbeddedToCache(opts.page,it.source,hash,MiscUtil.copy(it))}const tagPartSourceStart=`<${pageLinkPart?`a href="${Renderer.get().baseUrl}${pageLinkPart}"`:"span"}`;const tagPartSourceEnd=`</${pageLinkPart?"a":"span"}>`;const ptBrewSourceLink=BrewUtil.hasSourceJson(it.source)&&BrewUtil.sourceJsonToSource(it.source)?.url?`<a href="${BrewUtil.sourceJsonToSource(it.source).url}" title="View Homebrew Source" class="self-flex-center ml-2 ve-muted rd__stats-name-brew-link" target="_blank" rel="noopener noreferrer"><span class="\tglyphicon glyphicon-share"></span></a>`:"";const $ele=$$`<tr>
			<th class="rnd-name ${opts.extraThClasses?opts.extraThClasses.join(" "):""}" colspan="6" ${dataPart}>
				<div class="name-inner">
					<div class="flex-v-center">
						<h1 class="stats-name copyable m-0" onmousedown="event.preventDefault()" onclick="Renderer.utils._pHandleNameClick(this)">${opts.prefix||""}${it._displayName||it.name}${opts.suffix||""}</h1>
						${opts.controlRhs||""}
						${!IS_VTT&&ExtensionUtil.ACTIVE&&opts.page?`<button title="Send to Foundry (SHIFT for Temporary Import)" class="btn btn-xs btn-default btn-stats-name mx-2 mb-2 self-flex-end" onclick="ExtensionUtil.pDoSendStats(event, this)"><span class="glyphicon glyphicon-send"></span></button>`:""}
					</div>
					<div class="stats-source flex-v-baseline">
						${tagPartSourceStart} class="help-subtle ${it.source?`${Parser.sourceJsonToColor(it.source)}" title="${Parser.sourceJsonToFull(it.source)}${Renderer.utils.getSourceSubText(it)}`:""}" ${BrewUtil.sourceJsonToStyle(it.source)}>${it.source?Parser.sourceJsonToAbv(it.source):""}${tagPartSourceEnd}

						${Renderer.utils.isDisplayPage(it.page)?` ${tagPartSourceStart} class="rd__stats-name-page ml-1" title="Page ${it.page}">p${it.page}${tagPartSourceEnd}`:""}

						${ptBrewSourceLink}
					</div>
				</div>
			</th>
		</tr>`;if(opts.asJquery)return $ele;else return $ele[0].outerHTML},isDisplayPage(page){return page!=null&&(!isNaN(page)&&page>0||isNaN(page))},getExcludedTr(it,dataProp,page){if(!ExcludeUtil.isInitialised)return"";const hash=page?UrlUtil.URL_TO_HASH_BUILDER[page](it):UrlUtil.autoEncodeHash(it);const isExcluded=ExcludeUtil.isExcluded(hash,dataProp,it.source);return isExcluded?`<tr><td colspan="6" class="pt-3 text-center text-danger"><b><i>Warning: This content has been <a href="blacklist.html">blacklisted</a>.</i></b></td></tr>`:""},getSourceAndPageTrHtml(it){const html=Renderer.utils.getSourceAndPageHtml(it);return html?`<b>Source:</b> ${html}`:""},_getAltSourceHtmlOrText(it,prop,introText,isText){if(!it[prop]||!it[prop].length)return"";return`${introText} ${it[prop].map((as=>{if(as.entry)return Renderer.get().render(isText?Renderer.stripTags(as.entry):as.entry);return`${isText?"":`<i title="${Parser.sourceJsonToFull(as.source)}">`}${Parser.sourceJsonToAbv(as.source)}${isText?"":`</i>`}${Renderer.utils.isDisplayPage(as.page)?`, page ${as.page}`:""}`})).join("; ")}`},getSourceAndPageHtml(it){return this._getSourceAndPageHtmlOrText(it)},getSourceAndPageText(it){return this._getSourceAndPageHtmlOrText(it,true)},_getSourceAndPageHtmlOrText(it,isText){const sourceSub=Renderer.utils.getSourceSubText(it);const baseText=`${isText?``:`<i title="${Parser.sourceJsonToFull(it.source)}${sourceSub}">`}${Parser.sourceJsonToAbv(it.source)}${sourceSub}${isText?"":`</i>`}${Renderer.utils.isDisplayPage(it.page)?`, page ${it.page}`:""}`;const addSourceText=Renderer.utils._getAltSourceHtmlOrText(it,"additionalSources","Additional information from",isText);const otherSourceText=Renderer.utils._getAltSourceHtmlOrText(it,"otherSources","Also found in",isText);const srdText=it.srd?`Available in the ${isText?"":`<span title="Systems Reference Document">`}SRD${isText?"":`</span>`}${typeof it.srd==="string"?` (as &quot;${it.srd}&quot;)`:""}`:"";const externalSourceText=Renderer.utils._getAltSourceHtmlOrText(it,"externalSources","External sources:",isText);return`${[baseText,addSourceText,otherSourceText,srdText,externalSourceText].filter((it=>it)).join(". ")}${baseText&&(addSourceText||otherSourceText||srdText||externalSourceText)?".":""}`},async _pHandleNameClick(ele){await MiscUtil.pCopyTextToClipboard($(ele).text());JqueryUtil.showCopiedEffect($(ele))},getPageTr(it){return`<tr><td colspan=6>${Renderer.utils.getSourceAndPageTrHtml(it)}</td></tr>`},getAbilityRoller(statblock,ability){if(statblock[ability]==null)return"—";return Renderer.get().render(`{@ability ${ability} ${statblock[ability]}}`)},TabButton:function({label:label,fnChange:fnChange,fnPopulate:fnPopulate,isVisible:isVisible}){this.label=label;this.fnChange=fnChange;this.fnPopulate=fnPopulate;this.isVisible=isVisible},_tabs:{},_curTab:null,_tabsPreferredLabel:null,bindTabButtons({tabButtons:tabButtons,tabLabelReference:tabLabelReference}){Renderer.utils._tabs={};Renderer.utils._curTab=null;const $content=$("#pagecontent");const $wrpTab=$(`#stat-tabs`);$wrpTab.find(`.stat-tab-gen`).remove();tabButtons.forEach(((tb,i)=>{tb.ix=i;tb.$t=$(`<span class="ui-tab__btn-tab-head btn btn-default stat-tab-gen">${tb.label}</span>`).click((()=>tb.fnActivateTab({isUserInput:true})));tb.fnActivateTab=({isUserInput:isUserInput=false}={})=>{const curTab=Renderer.utils._curTab;const tabs=Renderer.utils._tabs;if(!curTab||curTab.label!==tb.label){if(curTab)curTab.$t.removeClass(`ui-tab__btn-tab-head--active`);Renderer.utils._curTab=tb;tb.$t.addClass(`ui-tab__btn-tab-head--active`);if(curTab)tabs[curTab.label].$content=$content.children().detach();tabs[tb.label]=tb;if(!tabs[tb.label].$content&&tb.fnPopulate)tb.fnPopulate();else $content.append(tabs[tb.label].$content);if(tb.fnChange)tb.fnChange()}if(isUserInput)Renderer.utils._tabsPreferredLabel=tb.label}}));if(tabButtons.length!==1)tabButtons.slice().reverse().forEach((tb=>$wrpTab.prepend(tb.$t)));if(!Renderer.utils._tabsPreferredLabel)return tabButtons[0].fnActivateTab();const tabButton=tabButtons.find((tb=>tb.label===Renderer.utils._tabsPreferredLabel));if(tabButton)return tabButton.fnActivateTab();const ixDesired=tabLabelReference.indexOf(Renderer.utils._tabsPreferredLabel);if(!~ixDesired)return tabButtons[0].fnActivateTab();const ixsAvailableMetas=tabButtons.map((tb=>{const ixMapped=tabLabelReference.indexOf(tb.label);if(!~ixMapped)return null;return{ixMapped:ixMapped,label:tb.label}})).filter(Boolean);if(!ixsAvailableMetas.length)return tabButtons[0].fnActivateTab();const ixMetaHigher=ixsAvailableMetas.find((({ixMapped:ixMapped})=>ixMapped>ixDesired));if(ixMetaHigher!=null)return(tabButtons.find((it=>it.label===ixMetaHigher.label))||tabButtons[0]).fnActivateTab();const ixMetaMax=ixsAvailableMetas.last();(tabButtons.find((it=>it.label===ixMetaMax.label))||tabButtons[0]).fnActivateTab()},_pronounceButtonsBound:false,bindPronounceButtons(){if(Renderer.utils._pronounceButtonsBound)return;Renderer.utils._pronounceButtonsBound=true;$(`body`).on("click",".btn-name-pronounce",(function(){const audio=$(this).find(`.name-pronounce`)[0];audio.currentTime=0;audio.play()}))},hasFluffText(entity,prop){return entity.hasFluff||(Renderer.utils.getPredefinedFluff(entity,prop)?.entries?.length||0)>0},hasFluffImages(entity,prop){return entity.hasFluffImages||(Renderer.utils.getPredefinedFluff(entity,prop)?.images?.length||0)>0},getPredefinedFluff(entry,prop){if(!entry.fluff)return null;const mappedProp=`_${prop}`;const mappedPropAppend=`_append${prop.uppercaseFirst()}`;const fluff={};const assignPropsIfExist=(fromObj,...props)=>{props.forEach((prop=>{if(fromObj[prop])fluff[prop]=fromObj[prop]}))};assignPropsIfExist(entry.fluff,"name","type","entries","images");if(entry.fluff[mappedProp]){const fromList=(BrewUtil.homebrew[prop]||[]).find((it=>it.name===entry.fluff[mappedProp].name&&it.source===entry.fluff[mappedProp].source));if(fromList){assignPropsIfExist(fromList,"name","type","entries","images")}}if(entry.fluff[mappedPropAppend]){const fromList=(BrewUtil.homebrew[prop]||[]).find((it=>it.name===entry.fluff[mappedPropAppend].name&&it.source===entry.fluff[mappedPropAppend].source));if(fromList){if(fromList.entries){fluff.entries=MiscUtil.copy(fluff.entries||[]);fluff.entries.push(...MiscUtil.copy(fromList.entries))}if(fromList.images){fluff.images=MiscUtil.copy(fluff.images||[]);fluff.images.push(...MiscUtil.copy(fromList.images))}}}return fluff},async pGetFluff({entity:entity,pFnPostProcess:pFnPostProcess,fluffUrl:fluffUrl,fluffBaseUrl:fluffBaseUrl,fluffProp:fluffProp}={}){let predefinedFluff=Renderer.utils.getPredefinedFluff(entity,fluffProp);if(predefinedFluff){if(pFnPostProcess)predefinedFluff=await pFnPostProcess(predefinedFluff);return predefinedFluff}if(!fluffBaseUrl&&!fluffUrl)return null;const fluffIndex=fluffBaseUrl?await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffBaseUrl}fluff-index.json`):null;if(fluffIndex&&!fluffIndex[entity.source])return null;const data=fluffIndex&&fluffIndex[entity.source]?await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffBaseUrl}${fluffIndex[entity.source]}`):await DataUtil.loadJSON(`${Renderer.get().baseUrl}${fluffUrl}`);if(!data)return null;let fluff=(data[fluffProp]||[]).find((it=>it.name===entity.name&&it.source===entity.source));if(!fluff)return null;if(pFnPostProcess)fluff=await pFnPostProcess(fluff);return fluff},_TITLE_SKIP_TYPES:new Set(["entries","section"]),async pBuildFluffTab({isImageTab:isImageTab,$content:$content,entity:entity,$headerControls:$headerControls,pFnGetFluff:pFnGetFluff}={}){$content.append(Renderer.utils.getBorderTr());$content.append(Renderer.utils.getNameTr(entity,{controlRhs:$headerControls,asJquery:true}));const $td=$(`<td colspan="6" class="text"></td>`);$$`<tr class="text">${$td}</tr>`.appendTo($content);$content.append(Renderer.utils.getBorderTr());const fluff=MiscUtil.copy(await pFnGetFluff(entity)||{});fluff.entries=fluff.entries||[Renderer.utils.HTML_NO_INFO];fluff.images=fluff.images||[Renderer.utils.HTML_NO_IMAGES];$td.fastSetHtml(Renderer.utils.getFluffTabContent({entity:entity,fluff:fluff,isImageTab:isImageTab}))},getFluffTabContent({entity:entity,fluff:fluff,isImageTab:isImageTab=false}){Renderer.get().setFirstSection(true);return fluff[isImageTab?"images":"entries"].map(((ent,i)=>{if(isImageTab)return Renderer.get().render(ent);if(i===0&&ent.name&&entity.name&&Renderer.utils._TITLE_SKIP_TYPES.has(ent.type)){const entryLowName=ent.name.toLowerCase().trim();const entityLowName=entity.name.toLowerCase().trim();if(entryLowName.includes(entityLowName)||entityLowName.includes(entryLowName)){const cpy=MiscUtil.copy(ent);delete cpy.name;return Renderer.get().render(cpy)}else return Renderer.get().render(ent)}else{if(typeof ent==="string")return`<p>${Renderer.get().render(ent)}</p>`;else return Renderer.get().render(ent)}})).join("")},HTML_NO_INFO:"<i>No information available.</i>",HTML_NO_IMAGES:"<i>No images available.</i>",_prereqWeights:{level:0,pact:1,patron:2,spell:3,race:4,ability:5,proficiency:6,spellcasting:7,feature:8,item:9,other:10,otherSummary:11,[undefined]:12},_getPrerequisiteHtml_getShortClassName(className){const ixFirstVowel=/[aeiou]/.exec(className).index;const start=className.slice(0,ixFirstVowel+1);let end=className.slice(ixFirstVowel+1);end=end.replace().replace(/[aeiou]/g,"");return`${start}${end}`.toTitleCase()},getPrerequisiteHtml:(prerequisites,{isListMode:isListMode=false,blacklistKeys:blacklistKeys=new Set,isTextOnly:isTextOnly=false,isSkipPrefix:isSkipPrefix=false}={})=>{if(!prerequisites)return isListMode?"—":"";let cntPrerequisites=0;const listOfChoices=prerequisites.map((pr=>Object.entries(pr).sort((([kA],[kB])=>Renderer.utils._prereqWeights[kA]-Renderer.utils._prereqWeights[kB])).map((([k,v])=>{if(blacklistKeys.has(k))return false;cntPrerequisites+=1;switch(k){case"level":{if(typeof v==="number"){if(isListMode)return`Lvl ${v}`;else return`${Parser.getOrdinalForm(v)} level`}else if(!v.class&&!v.subclass){if(isListMode)return`Lvl ${v.level}`;else return`${Parser.getOrdinalForm(v.level)} level`}const isSubclassVisible=v.subclass&&v.subclass.visible;const isClassVisible=v.class&&(v.class.visible||isSubclassVisible);if(isListMode){const shortNameRaw=isClassVisible?Renderer.utils._getPrerequisiteHtml_getShortClassName(v.class.name):null;return`${isClassVisible?`${shortNameRaw.slice(0,4)}${isSubclassVisible?"*":"."} `:""} Lvl ${v.level}`}else{let classPart="";if(isClassVisible&&isSubclassVisible)classPart=` ${v.class.name} (${v.subclass.name})`;else if(isClassVisible)classPart=` ${v.class.name}`;else if(isSubclassVisible)classPart=` &lt;remember to insert class name here&gt; (${v.subclass.name})`;return`${Parser.getOrdinalForm(v.level)} level${isClassVisible?` ${classPart}`:""}`}}case"pact":return Parser.prereqPactToFull(v);case"patron":return isListMode?`${Parser.prereqPatronToShort(v)} patron`:`${v} patron`;case"spell":return isListMode?v.map((x=>x.split("#")[0].split("|")[0].toTitleCase())).join("/"):v.map((sp=>Parser.prereqSpellToFull(sp,{isTextOnly:isTextOnly}))).joinConjunct(", "," or ");case"feature":return isListMode?v.map((x=>Renderer.stripTags(x).toTitleCase())).join("/"):v.map((it=>isTextOnly?Renderer.stripTags(it):Renderer.get().render(it))).joinConjunct(", "," or ");case"item":return isListMode?v.map((x=>x.toTitleCase())).join("/"):v.joinConjunct(", "," or ");case"otherSummary":return isListMode?v.entrySummary||Renderer.stripTags(v.entry):isTextOnly?Renderer.stripTags(v.entry):Renderer.get().render(v.entry);case"other":return isListMode?"Special":isTextOnly?Renderer.stripTags(v):Renderer.get().render(v);case"race":{const parts=v.map(((it,i)=>{if(isListMode){return`${it.name.toTitleCase()}${it.subrace!=null?` (${it.subrace})`:""}`}else{const raceName=it.displayEntry?isTextOnly?Renderer.stripTags(it.displayEntry):Renderer.get().render(it.displayEntry):i===0?it.name.toTitleCase():it.name;return`${raceName}${it.subrace!=null?` (${it.subrace})`:""}`}}));return isListMode?parts.join("/"):parts.joinConjunct(", "," or ")}case"ability":{let hadMultipleInner=false;let hadMultiMultipleInner=false;let allValuesEqual=null;outer:for(const abMeta of v){for(const req of Object.values(abMeta)){if(allValuesEqual==null)allValuesEqual=req;else{if(req!==allValuesEqual){allValuesEqual=null;break outer}}}}const abilityOptions=v.map((abMeta=>{if(allValuesEqual){const abList=Object.keys(abMeta);hadMultipleInner=hadMultipleInner||abList.length>1;return isListMode?abList.map((ab=>ab.uppercaseFirst())).join(", "):abList.map((ab=>Parser.attAbvToFull(ab))).joinConjunct(", "," and ")}else{const groups={};Object.entries(abMeta).forEach((([ab,req])=>{(groups[req]=groups[req]||[]).push(ab)}));let isMulti=false;const byScore=Object.entries(groups).sort((([reqA],[reqB])=>SortUtil.ascSort(Number(reqB),Number(reqA)))).map((([req,abs])=>{hadMultipleInner=hadMultipleInner||abs.length>1;if(abs.length>1)hadMultiMultipleInner=isMulti=true;abs=abs.sort(SortUtil.ascSortAtts);return isListMode?`${abs.map((ab=>ab.uppercaseFirst())).join(", ")} ${req}+`:`${abs.map((ab=>Parser.attAbvToFull(ab))).joinConjunct(", "," and ")} ${req} or higher`}));return isListMode?`${isMulti||byScore.length>1?"(":""}${byScore.join(" & ")}${isMulti||byScore.length>1?")":""}`:isMulti?byScore.joinConjunct("; "," and "):byScore.joinConjunct(", "," and ")}}));if(isListMode){return`${abilityOptions.join("/")}${allValuesEqual!=null?` ${allValuesEqual}+`:""}`}else{const isComplex=hadMultiMultipleInner||hadMultipleInner||allValuesEqual==null;const joined=abilityOptions.joinConjunct(hadMultiMultipleInner?" - ":hadMultipleInner?"; ":", ",isComplex?isTextOnly?` /or/ `:` <i>or</i> `:" or ");return`${joined}${allValuesEqual!=null?` ${allValuesEqual} or higher`:""}`}}case"proficiency":{const parts=v.map((obj=>Object.entries(obj).map((([profType,prof])=>{switch(profType){case"armor":{return isListMode?`Prof ${Parser.armorFullToAbv(prof)} armor`:`Proficiency with ${prof} armor`}case"weapon":{return isListMode?`Prof ${Parser.weaponFullToAbv(prof)} weapon`:`Proficiency with a ${prof} weapon`}default:throw new Error(`Unhandled proficiency type: "${profType}"`)}}))));return isListMode?parts.join("/"):parts.joinConjunct(", "," or ")}case"spellcasting":return isListMode?"Spellcasting":"The ability to cast at least one spell";case"spellcasting2020":return isListMode?"Spellcasting":"Spellcasting or Pact Magic feature";case"psionics":return isListMode?"Psionics":(isTextOnly?Renderer.stripTags:Renderer.get().render.bind(Renderer.get()))("Psionic Talent feature or {@feat Wild Talent|UA2020PsionicOptionsRevisited} feat");default:throw new Error(`Unhandled key: ${k}`)}})).filter(Boolean).join(", "))).filter(Boolean);if(!listOfChoices.length)return isListMode?"—":"";return isListMode?listOfChoices.join("/"):`${isSkipPrefix?"":`Prerequisite${cntPrerequisites===1?"":"s"}: `}${listOfChoices.joinConjunct("; "," or ")}`},getMediaUrl(entry,prop,mediaDir){if(!entry[prop])return"";let href="";if(entry[prop].type==="internal"){const baseUrl=Renderer.get().baseMediaUrls[mediaDir]||Renderer.get().baseUrl;const mediaPart=`${mediaDir}/${entry[prop].path}`;href=baseUrl!==""?`${baseUrl}${mediaPart}`:UrlUtil.link(mediaPart)}else if(entry[prop].type==="external"){href=entry[prop].url}return href},getTagEntry(tag,text){switch(tag){case"@dice":case"@damage":case"@hit":case"@d20":case"@chance":case"@recharge":{const fauxEntry={type:"dice",rollable:true};const[rollText,displayText,name,...others]=Renderer.splitTagByPipe(text);if(displayText)fauxEntry.displayText=displayText;if(!fauxEntry.displayText&&(rollText||"").includes("summonSpellLevel")||fauxEntry.displayText&&fauxEntry.displayText.includes("summonSpellLevel"))fauxEntry.displayText=(fauxEntry.displayText||rollText||"").replace(/summonSpellLevel/g,"the spell's level");if(name)fauxEntry.name=name;switch(tag){case"@dice":{fauxEntry.toRoll=rollText;if(!fauxEntry.displayText&&(rollText||"").includes(";"))fauxEntry.displayText=rollText.replace(/;/g,"/");if(!fauxEntry.displayText&&(rollText||"").includes("#$")||fauxEntry.displayText&&fauxEntry.displayText.includes("#$"))fauxEntry.displayText=(fauxEntry.displayText||rollText).replace(/#\$prompt_number[^$]*\$#/g,"(n)");return fauxEntry}case"@damage":{fauxEntry.toRoll=rollText;fauxEntry.subType="damage";return fauxEntry}case"@d20":case"@hit":{let mod;if(!isNaN(rollText)){const n=Number(rollText);mod=`${n>=0?"+":""}${n}`}else mod=rollText;fauxEntry.displayText=fauxEntry.displayText||mod;fauxEntry.toRoll=`1d20${mod}`;fauxEntry.subType="d20";fauxEntry.d20mod=mod;if(tag==="@hit")fauxEntry.context={type:"hit"};return fauxEntry}case"@chance":{fauxEntry.toRoll=`1d100`;fauxEntry.successThresh=Number(rollText);return fauxEntry}case"@recharge":{const flags=displayText?displayText.split(""):null;fauxEntry.toRoll="1d6";const asNum=Number(rollText||6);fauxEntry.successThresh=7-asNum;fauxEntry.successMax=6;fauxEntry.displayText=`${asNum}${asNum<6?`–6`:""}`;return fauxEntry}}return fauxEntry}case"@ability":case"@savingThrow":{const fauxEntry={type:"dice",rollable:true,subType:"d20",context:{type:tag==="@ability"?"abilityCheck":"savingThrow"}};const[abilAndScoreOrScore,displayText,name,...others]=Renderer.splitTagByPipe(text);let[abil,...rawScoreOrModParts]=abilAndScoreOrScore.split(" ").map((it=>it.trim())).filter(Boolean);abil=abil.toLowerCase();fauxEntry.context.ability=abil;if(name)fauxEntry.name=name;else{if(tag==="@ability")fauxEntry.name=Parser.attAbvToFull(abil);else if(tag==="@savingThrow")fauxEntry.name=`${Parser.attAbvToFull(abil)} save`}const rawScoreOrMod=rawScoreOrModParts.join(" ");if(isNaN(rawScoreOrMod)&&tag==="@savingThrow"){if(displayText)fauxEntry.displayText=displayText;else fauxEntry.displayText=rawScoreOrMod;fauxEntry.toRoll=`1d20${rawScoreOrMod}`;fauxEntry.d20mod=rawScoreOrMod}else{const scoreOrMod=Number(rawScoreOrMod)||0;const mod=(tag==="@ability"?Parser.getAbilityModifier:UiUtil.intToBonus)(scoreOrMod);if(displayText)fauxEntry.displayText=displayText;else{if(tag==="@ability")fauxEntry.displayText=`${scoreOrMod} (${mod})`;else fauxEntry.displayText=mod}fauxEntry.toRoll=`1d20${mod}`;fauxEntry.d20mod=mod}return fauxEntry}case"@skillCheck":{const fauxEntry={type:"dice",rollable:true,subType:"d20",context:{type:"skillCheck"}};const[skillAndMod,displayText,name,...others]=Renderer.splitTagByPipe(text);const parts=skillAndMod.split(" ").map((it=>it.trim())).filter(Boolean);const namePart=parts.shift();const bonusPart=parts.join(" ");const skill=namePart.replace(/_/g," ");const mod=isNaN(bonusPart)?bonusPart:UiUtil.intToBonus(Number(bonusPart)||0);fauxEntry.context.skill=skill;fauxEntry.displayText=displayText||mod;if(name)fauxEntry.name=name;else fauxEntry.name=skill.toTitleCase();fauxEntry.toRoll=`1d20${mod}`;fauxEntry.d20mod=mod;return fauxEntry}default:throw new Error(`Unhandled tag "${tag}"`)}},getTagMeta(tag,text){switch(tag){case"@deity":{let[name,pantheon,source,displayText,...others]=Renderer.splitTagByPipe(text);pantheon=pantheon||"forgotten realms";source=source||Parser.getTagSource(tag,source);const hash=`${name}${HASH_LIST_SEP}${pantheon}${HASH_LIST_SEP}${source}`;return{name:name,displayText:displayText,others:others,page:UrlUtil.PG_DEITIES,source:source,hash:hash}}case"@classFeature":{const unpacked=DataUtil.class.unpackUidClassFeature(text);const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:unpacked.className,source:unpacked.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:unpacked.level-1,ixFeature:0}})}`;return{name:unpacked.name,displayText:unpacked.displayText,page:UrlUtil.PG_CLASSES,source:unpacked.source,hash:classPageHash,hashPreEncoded:true,pageHover:"classfeature",hashHover:UrlUtil.URL_TO_HASH_BUILDER["classFeature"](unpacked),hashPreEncodedHover:true}}case"@subclassFeature":{const unpacked=DataUtil.class.unpackUidSubclassFeature(text);const classPageHash=`${UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:unpacked.className,source:unpacked.classSource})}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({feature:{ixLevel:unpacked.level-1,ixFeature:0}})}`;return{name:unpacked.name,displayText:unpacked.displayText,page:UrlUtil.PG_CLASSES,source:unpacked.source,hash:classPageHash,hashPreEncoded:true,pageHover:"subclassfeature",hashHover:UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"](unpacked),hashPreEncodedHover:true}}default:return Renderer.utils._getTagMeta_generic(tag,text)}},_getTagMeta_generic(tag,text){const{name:name,source:source,displayText:displayText,others:others}=DataUtil.generic.unpackUid(text,tag);const hash=`${name}${HASH_LIST_SEP}${source}`;const out={name:name,displayText:displayText,others:others,page:null,source:source,hash:hash,preloadId:null,subhashes:null,linkText:null};switch(tag){case"@spell":out.page=UrlUtil.PG_SPELLS;break;case"@item":out.page=UrlUtil.PG_ITEMS;break;case"@condition":case"@disease":case"@status":out.page=UrlUtil.PG_CONDITIONS_DISEASES;break;case"@background":out.page=UrlUtil.PG_BACKGROUNDS;break;case"@race":out.page=UrlUtil.PG_RACES;break;case"@optfeature":out.page=UrlUtil.PG_OPT_FEATURES;break;case"@reward":out.page=UrlUtil.PG_REWARDS;break;case"@feat":out.page=UrlUtil.PG_FEATS;break;case"@psionic":out.page=UrlUtil.PG_PSIONICS;break;case"@object":out.page=UrlUtil.PG_OBJECTS;break;case"@boon":case"@cult":out.page=UrlUtil.PG_CULTS_BOONS;break;case"@trap":case"@hazard":out.page=UrlUtil.PG_TRAPS_HAZARDS;break;case"@variantrule":out.page=UrlUtil.PG_VARIANTRULES;break;case"@table":out.page=UrlUtil.PG_TABLES;break;case"@vehicle":case"@vehupgrade":out.page=UrlUtil.PG_VEHICLES;break;case"@action":out.page=UrlUtil.PG_ACTIONS;break;case"@language":out.page=UrlUtil.PG_LANGUAGES;break;case"@charoption":out.page=UrlUtil.PG_CHAR_CREATION_OPTIONS;break;case"@recipe":out.page=UrlUtil.PG_RECIPES;break;case"@creature":{out.page=UrlUtil.PG_BESTIARY;if(others.length){const[type,value]=others[0].split("=").map((it=>it.trim().toLowerCase())).filter(Boolean);if(type&&value){switch(type){case VeCt.HASH_SCALED:{const targetCrNum=Parser.crToNumber(value);out.preloadId=Renderer.monster.getCustomHashId({name:name,source:source,_isScaledCr:true,_scaledCr:targetCrNum});out.subhashes=[{key:VeCt.HASH_SCALED,value:targetCrNum}];out.linkText=displayText||`${name} (CR ${value})`;break}case VeCt.HASH_SCALED_SUMMON:{const scaledSpellNum=Number(value);out.preloadId=Renderer.monster.getCustomHashId({name:name,source:source,_isScaledSummon:true,_scaledSummonLevel:scaledSpellNum});out.subhashes=[{key:VeCt.HASH_SCALED_SUMMON,value:scaledSpellNum}];out.linkText=displayText||`${name} (Spell Level ${value})`;break}}}}break}case"@class":{out.page=UrlUtil.PG_CLASSES;if(others.length){const[subclassShortName,subclassSource,featurePart]=others;const classStateOpts={subclass:{shortName:subclassShortName.trim(),source:subclassSource?Parser.sourceJsonToAbv(subclassSource.trim()):SRC_PHB}};const hoverSubhashObj=UrlUtil.unpackSubHash(UrlUtil.getClassesPageStatePart(classStateOpts));out.subhashes=[{key:"state",value:hoverSubhashObj.state,preEncoded:true}];if(featurePart){const featureParts=featurePart.trim().split("-");classStateOpts.feature={ixLevel:featureParts[0]||"0",ixFeature:featureParts[1]||"0"}}const subhashObj=UrlUtil.unpackSubHash(UrlUtil.getClassesPageStatePart(classStateOpts));out.subhashes=[{key:"state",value:subhashObj.state.join(HASH_SUB_LIST_SEP),preEncoded:true},{key:"fltsource",value:"clear"},{key:"flstmiscellaneous",value:"clear"}]}break}default:throw new Error(`Unhandled tag "${tag}"`)}return out},applyTemplate(ent,templateString,{fnPreApply:fnPreApply,mapCustom:mapCustom}={}){return templateString.replace(/{{([^}]+)}}/g,((fullMatch,strArgs)=>{if(fnPreApply)fnPreApply(fullMatch,strArgs);if(strArgs==="item.dmg1"){return Renderer.item._getTaggedDamage(ent.dmg1)}else if(strArgs==="item.dmg2"){return Renderer.item._getTaggedDamage(ent.dmg2)}if(mapCustom&&mapCustom[strArgs])return mapCustom[strArgs];const args=strArgs.split(" ").map((arg=>arg.trim())).filter(Boolean);if(args.length===1){return Renderer.utils._applyTemplate_getValue(ent,args[0])}else if(args.length===2){const val=Renderer.utils._applyTemplate_getValue(ent,args[1]);switch(args[0]){case"getFullImmRes":return Parser.getFullImmRes(val);default:throw new Error(`Unknown template function "${args[0]}"`)}}else throw new Error(`Unhandled number of arguments ${args.length}`)}))},_applyTemplate_getValue(ent,prop){const spl=prop.split(".");switch(spl[0]){case"item":{const path=spl.slice(1);if(!path.length)return`{@i missing key path}`;return MiscUtil.get(ent,...path)}default:return`{@i unknown template root: "${spl[0]}"}`}},getFlatEntries(entry){const out=[];const depthStack=[];const recurse=({obj:obj})=>{let isPopDepth=false;Renderer.ENTRIES_WITH_ENUMERATED_TITLES.forEach((meta=>{if(obj.type!==meta.type)return;const kName="name";if(obj[kName]==null)return;isPopDepth=true;const curDepth=depthStack.length?depthStack.last():0;const nxtDepth=meta.depth?meta.depth:meta.depthIncrement?curDepth+meta.depthIncrement:curDepth;depthStack.push(Math.min(nxtDepth,2));const cpyObj=MiscUtil.copy(obj);out.push({depth:curDepth,entry:cpyObj,key:meta.key,ix:out.length,name:cpyObj.name});cpyObj[meta.key]=cpyObj[meta.key].map((child=>{if(!child.type)return child;const childMeta=Renderer.ENTRIES_WITH_ENUMERATED_TITLES_LOOKUP[child.type];if(!childMeta)return child;const kNameChild="name";if(child[kName]==null)return child;const ixNextRef=out.length;recurse({obj:child});return{IX_FLAT_REF:ixNextRef}}))}));if(isPopDepth)depthStack.pop()};recurse({obj:entry});return out}};Renderer.feat={mergeAbilityIncrease:function(feat){if(!feat.ability||feat._hasMergedAbility||!feat.ability.length)return;feat._hasMergedAbility=true;if(feat.ability.every((it=>it.hidden)))return;const targetList=feat.entries.find((e=>e.type==="list"));if(targetList){feat.ability.forEach((abilObj=>targetList.items.unshift(abilityObjToListItem(abilObj))))}else{feat.ability.forEach((abilObj=>feat.entries.unshift(abilityObjToListItem(abilObj))));setTimeout((()=>{throw new Error(`Could not find object of type "list" in "entries" for feat "${feat.name}" from source "${feat.source}" when merging ability scores! Reformat the feat to include a "list"-type entry.`)}),1)}function abilityObjToListItem(abilityObj){const abbArr=[];if(!abilityObj.choose){Object.keys(abilityObj).forEach((ab=>abbArr.push(`Increase your ${Parser.attAbvToFull(ab)} score by ${abilityObj[ab]}, to a maximum of 20.`)))}else{const choose=abilityObj.choose;if(choose.from.length===6){if(choose.entry){abbArr.push(Renderer.get().render(choose.entry))}else{abbArr.push(`Increase one ability score of your choice by ${choose.amount}, to a maximum of 20.`)}}else{const from=choose.from;const amount=choose.amount;const abbChoices=[];for(let j=0;j<from.length;++j){abbChoices.push(Parser.attAbvToFull(from[j]))}const abbChoicesText=abbChoices.joinConjunct(", "," or ");abbArr.push(`Increase your ${abbChoicesText} by ${amount}, to a maximum of 20.`)}}return abbArr.join(" ")}},getCompactRenderedString(feat,opts){opts=opts||{};const renderer=Renderer.get().setFirstSection(true);const renderStack=[];const prerequisite=Renderer.utils.getPrerequisiteHtml(feat.prerequisite);Renderer.feat.mergeAbilityIncrease(feat);renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(feat,"feat",UrlUtil.PG_FEATS)}\n\t\t\t${opts.isSkipNameRow?"":Renderer.utils.getNameTr(feat,{page:UrlUtil.PG_FEATS})}\n\t\t\t<tr class="text"><td colspan="6" class="text">\n\t\t\t${prerequisite?`<p><i>${prerequisite}</i></p>`:""}\n\t\t`);renderer.recursiveRender({entries:feat.entries},renderStack,{depth:2});renderStack.push(`</td></tr>`);return renderStack.join("")}};Renderer.get=()=>{if(!Renderer.defaultRenderer)Renderer.defaultRenderer=new Renderer;return Renderer.defaultRenderer};Renderer.class={getHitDiceEntry(clsHd){return clsHd?{toRoll:`${clsHd.number}d${clsHd.faces}`,rollable:true}:null},getHitPointsAtFirstLevel(clsHd){return clsHd?`${clsHd.number*clsHd.faces} + your Constitution modifier`:null},getHitPointsAtHigherLevels(className,clsHd,hdEntry){return className&&clsHd&&hdEntry?`${Renderer.getEntryDice(hdEntry,"Hit die")} (or ${clsHd.number*clsHd.faces/2+1}) + your Constitution modifier per ${className} level after 1st`:null},getRenderedArmorProfs(armorProfs){return armorProfs.map((a=>Renderer.get().render(a.full?a.full:a==="light"||a==="medium"||a==="heavy"?`{@filter ${a} armor|items|type=${a} armor}`:a))).join(", ")},getRenderedWeaponProfs(weaponProfs){return weaponProfs.map((w=>Renderer.get().render(w==="simple"||w==="martial"?`{@filter ${w} weapons|items|type=${w} weapon}`:w.optional?`<span class="help help--hover" title="Optional Proficiency">${w.proficiency}</span>`:w))).join(", ")},getRenderedToolProfs(toolProfs){return toolProfs.map((it=>Renderer.get().render(it))).join(", ")},getRenderedSkillProfs(skills){return`${Parser.skillProficienciesToFull(skills).uppercaseFirst()}.`}};Renderer.spell={getCompactRenderedString(spell,opts){opts=opts||{};const renderer=Renderer.get();const renderStack=[];renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(spell,"spell",UrlUtil.PG_SPELLS)}\n\t\t\t${Renderer.utils.getNameTr(spell,{page:UrlUtil.PG_SPELLS,isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<table class="summary stripe-even-table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colspan="1">Level</th>\n\t\t\t\t\t\t<th colspan="1">School</th>\n\t\t\t\t\t\t<th colspan="2">Casting Time</th>\n\t\t\t\t\t\t<th colspan="2">Range</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan="1">${Parser.spLevelToFull(spell.level)}${Parser.spMetaToFull(spell.meta)}</td>\n\t\t\t\t\t\t<td colspan="1">${Parser.spSchoolAndSubschoolsAbvsToFull(spell.school,spell.subschools)}</td>\n\t\t\t\t\t\t<td colspan="2">${Parser.spTimeListToFull(spell.time)}</td>\n\t\t\t\t\t\t<td colspan="2">${Parser.spRangeToFull(spell.range)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colspan="4">Components</th>\n\t\t\t\t\t\t<th colspan="2">Duration</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan="4">${Parser.spComponentsToFull(spell.components,spell.level)}</td>\n\t\t\t\t\t\t<td colspan="2">${Parser.spDurationToFull(spell.duration)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td></tr>\n\t\t`);renderStack.push(`<tr class="text"><td colspan="6" class="text">`);const entryList={type:"entries",entries:spell.entries};renderer.recursiveRender(entryList,renderStack,{depth:1});if(spell.entriesHigherLevel){const higherLevelsEntryList={type:"entries",entries:spell.entriesHigherLevel};renderer.recursiveRender(higherLevelsEntryList,renderStack,{depth:2})}const fromClassList=Renderer.spell.getCombinedClasses(spell,"fromClassList");if(fromClassList.length){const[current]=Parser.spClassesToCurrentAndLegacy(fromClassList);renderStack.push(`<div><span class="bold">Classes: </span>${Parser.spMainClassesToFull(current)}</div>`)}renderStack.push(`</td></tr>`);return renderStack.join("")},_isBrewSpellClassesInit:false,brewSpellClasses:{},brewSpellRaces:{},populateHomebrewLookup(homebrew,{isForce:isForce=false}={}){if(Renderer.spell._isBrewSpellClassesInit&&!isForce)return;Renderer.spell._isBrewSpellClassesInit=true;if(isForce){Renderer.spell.brewSpellClasses={};Renderer.spell.brewSpellRaces={}}if(homebrew.class){homebrew.class.forEach((c=>{c.source=c.source||SRC_PHB;if(c.classSpells)c.classSpells.forEach((it=>Renderer.spell._populateHomebrewLookup_handleSpellListItem(it,c.name,c.source)))}))}if(homebrew.subclass){homebrew.subclass.forEach((sc=>{sc.classSource=sc.classSource||SRC_PHB;sc.shortName=sc.shortName||sc.name;sc.source=sc.source||sc.classSource;if(sc.subclassSpells)sc.subclassSpells.forEach((it=>Renderer.spell._populateHomebrewLookup_handleSpellListItem(it,sc.className,sc.classSource,sc.shortName,sc.source)));if(sc.subSubclassSpells)Object.entries(sc.subSubclassSpells).forEach((([ssC,arr])=>arr.forEach((it=>Renderer.spell._populateHomebrewLookup_handleSpellListItem(it,sc.className,sc.classSource,sc.shortName,sc.source,ssC)))))}))}if(homebrew.race){homebrew.race.forEach((r=>{if(r.raceSpells)r.raceSpells.forEach((it=>Renderer.spell._populateHomebrewLookup_handleSpellListItemRace(it,r.name,r.source)))}))}if(homebrew.subrace){homebrew.subrace.forEach((sr=>{if(sr.raceSpells){if(!sr.race?.name||!sr.race?.source||!sr.source)return;const srName=Renderer.race.getSubraceName(sr.race.name,sr.name);sr.raceSpells.forEach((it=>Renderer.spell._populateHomebrewLookup_handleSpellListItemRace(it,srName,sr.source,sr.race.name,sr.race.source)))}}))}},_populateHomebrewLookup_handleSpellListItem(it,className,classSource,subclassShortName,subclassSource,subSubclassName){const doAdd=target=>{if(subclassShortName){const toAdd={class:{name:className,source:classSource},subclass:{name:subclassShortName,source:subclassSource}};if(subSubclassName)toAdd.subclass.subSubclass=subSubclassName;target.fromSubclass=target.fromSubclass||[];target.fromSubclass.push(toAdd)}else{const toAdd={name:className,source:classSource};target.fromClassList=target.fromClassList||[];target.fromClassList.push(toAdd)}};if(it.className){Renderer.spell.brewSpellClasses.class=Renderer.spell.brewSpellClasses.class||{};const cls=it.className.toLowerCase();const source=it.classSource||SRC_PHB;Renderer.spell.brewSpellClasses.class[source]=Renderer.spell.brewSpellClasses.class[source]||{};Renderer.spell.brewSpellClasses.class[source][cls]=Renderer.spell.brewSpellClasses.class[source][cls]||{};doAdd(Renderer.spell.brewSpellClasses.class[source][cls])}else{Renderer.spell.brewSpellClasses.spell=Renderer.spell.brewSpellClasses.spell||{};const name=(typeof it==="string"?it:it.name).toLowerCase();const source=typeof it==="string"?"PHB":it.source;Renderer.spell.brewSpellClasses.spell[source]=Renderer.spell.brewSpellClasses.spell[source]||{};Renderer.spell.brewSpellClasses.spell[source][name]=Renderer.spell.brewSpellClasses.spell[source][name]||{fromClassList:[],fromSubclass:[]};doAdd(Renderer.spell.brewSpellClasses.spell[source][name])}},_populateHomebrewLookup_handleSpellListItemRace(it,raceName,raceSource,raceBaseName,raceBaseSource){const toAdd={name:raceName,source:raceSource};if(raceBaseName)toAdd.baseName=raceBaseName;if(raceBaseSource)toAdd.baseSource=raceBaseSource;if(it.race){const race=it.race.toLowerCase();const source=it.source||SRC_PHB;const tgt=MiscUtil.set(Renderer.spell,"brewSpellRaces","race",source,race,[]);tgt.push(toAdd)}else{const name=(typeof it==="string"?it:it.name).toLowerCase();const source=typeof it==="string"?"PHB":it.source;const tgt=MiscUtil.set(Renderer.spell,"brewSpellRaces","spell",source,name,[]);tgt.push(toAdd)}},prePopulateHover(data,opts){if(opts&&opts.isBrew)Renderer.spell.populateHomebrewLookup(data);(data.spell||[]).forEach((sp=>Renderer.spell.initClasses(sp)))},getCombinedClasses(sp,prop){return[...(sp.classes||{})[prop]||[],...(sp._tmpClasses||{})[prop]||[]].filter((it=>{if(!ExcludeUtil.isInitialised)return true;if(prop==="fromClassList"||prop==="fromClassListVariant"){const hash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](it);if(ExcludeUtil.isExcluded(hash,"class",it.source))return false;if(prop!=="fromClassListVariant")return true;if(it.definedInSource)return!ExcludeUtil.isExcluded("*","classFeature",it.definedInSource);return true}else if(prop==="fromSubclass"){const hash=UrlUtil.URL_TO_HASH_BUILDER["subclass"]({name:it.subclass.name,source:it.subclass.source,className:it.class.name,classSource:it.class.source});return!ExcludeUtil.isExcluded(hash,"subclass",it.subclass.source)}}))},getCombinedRaces(sp){return[...sp.races||[],...sp._tmpRaces||[]].filter((it=>{if(!ExcludeUtil.isInitialised)return true;const hash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RACES](it);return!ExcludeUtil.isExcluded(hash,"race",it.source)}))},getCombinedBackgrounds(sp){return[...sp.backgrounds||[],...sp._tmpBackgrounds||[]].filter((it=>{if(!ExcludeUtil.isInitialised)return true;const hash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_BACKGROUNDS](it);return!ExcludeUtil.isExcluded(hash,"background",it.source)}))},initClasses(spell){if(spell._tmpClasses||spell._tmpRaces)return;spell._tmpClasses={};spell._tmpRaces=[];if(spell.classes&&spell.classes.fromClassList&&spell.classes.fromClassList.some((c=>c.name===Renderer.spell.STR_WIZARD&&c.source===SRC_PHB))){Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ELD_KNIGHT]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ELD_KNIGHT]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_FIGHTER,classSource:SRC_PHB,name:Renderer.spell.STR_ELD_KNIGHT,source:SRC_PHB});const isExcludedEk=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ELD_KNIGHT],"subclass",SRC_PHB,{isNoCount:true});Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ARC_TCKER]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ARC_TCKER]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_ROGUE,classSource:SRC_PHB,name:Renderer.spell.STR_ARC_TCKER,source:SRC_PHB});const isExcludedArc=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ARC_TCKER],"subclass",SRC_PHB,{isNoCount:true});if(!isExcludedEk){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_FIGHTER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_ELD_KNIGHT,source:SRC_PHB}})}if(!isExcludedArc){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_ROGUE,source:SRC_PHB},subclass:{name:Renderer.spell.STR_ARC_TCKER,source:SRC_PHB}})}if(!isExcludedEk||!isExcludedArc){if(spell.level>4){spell._scrollNote=true}}}if(spell.classes&&spell.classes.fromClassList&&spell.classes.fromClassList.some((c=>c.name===Renderer.spell.STR_CLERIC&&c.source===SRC_PHB))){Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DIV_SOUL]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DIV_SOUL]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:Renderer.spell.STR_DIV_SOUL,source:SRC_XGE});const isExcludedDivSoul=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DIV_SOUL],"subclass",SRC_PHB,{isNoCount:true});Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V2]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V2]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:Renderer.spell.STR_FAV_SOUL_V2,source:SRC_UAS});const isExcludedFavSoulv2=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V2],"subclass",SRC_PHB,{isNoCount:true});Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V3]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V3]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:Renderer.spell.STR_FAV_SOUL_V3,source:SRC_UARSC});const isExcludedFavSoulv3=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_FAV_SOUL_V3],"subclass",SRC_PHB,{isNoCount:true});if(!isExcludedDivSoul){const isExistingDivSoul=spell.classes.fromSubclass&&spell.classes.fromSubclass.some((it=>it.class.name===Renderer.spell.STR_SORCERER&&it.class.source===SRC_PHB&&it.subclass.name===Renderer.spell.STR_DIV_SOUL&&it.subclass.source===SRC_XGE));if(!isExistingDivSoul){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_SORCERER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_DIV_SOUL,source:SRC_XGE}})}}if(!isExcludedFavSoulv2){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_SORCERER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_FAV_SOUL_V2,source:SRC_UAS}})}if(!isExcludedFavSoulv3){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_SORCERER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_FAV_SOUL_V3,source:SRC_UARSC}})}}if(spell.classes&&spell.classes.fromClassList&&spell.classes.fromClassList.find((it=>it.name==="Wizard"))){Renderer.spell._CACHE_HASHES["Arcana"]=Renderer.spell._CACHE_HASHES["Arcana"]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:"Arcana",source:SRC_SCAG});const isExcludedArcana=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES["Arcana"],"subclass",SRC_PHB,{isNoCount:true});if(spell.level===0){Renderer.spell._CACHE_HASHES["Elf (High)"]=Renderer.spell._CACHE_HASHES["Elf (High)"]||UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_RACES]({name:"Elf (High)",source:SRC_PHB});const isExcludedHighElf=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES["Elf (High)"],"race",SRC_PHB,{isNoCount:true});if(!isExcludedHighElf){spell._tmpRaces.push({name:"Elf (High)",source:SRC_PHB,baseName:"Elf",baseSource:SRC_PHB})}if(!isExcludedArcana){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_CLERIC,source:SRC_PHB},subclass:{name:"Arcana",source:SRC_SCAG}})}}if(!isExcludedArcana){if(spell.level>=6){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_CLERIC,source:SRC_PHB},subclass:{name:"Arcana",source:SRC_SCAG}})}}}if(spell.classes&&spell.classes.fromClassList&&spell.classes.fromClassList.find((it=>it.name==="Druid"))){if(spell.level===0){Renderer.spell._CACHE_HASHES["Nature"]=Renderer.spell._CACHE_HASHES["Nature"]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:"Nature",source:SRC_PHB});const isExcludedNature=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES["Nature"],"subclass",SRC_PHB,{isNoCount:true});if(!isExcludedNature){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_CLERIC,source:SRC_PHB},subclass:{name:"Nature",source:SRC_PHB}})}}}if(spell.level===0&&spell.school==="N"){Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DEATH]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DEATH]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_CLERIC,classSource:SRC_PHB,name:Renderer.spell.STR_DEATH,source:SRC_DMG});const isDeathDomain=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_DEATH],"subclass",SRC_DMG,{isNoCount:true});if(!isDeathDomain){const isExisting=spell.classes.fromSubclass&&spell.classes.fromSubclass.some((it=>it.class.name===Renderer.spell.STR_CLERIC&&it.class.source===SRC_PHB&&it.subclass.name===Renderer.spell.STR_DEATH&&it.subclass.source===SRC_DMG));if(!isExisting){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_CLERIC,source:SRC_PHB},subclass:{name:Renderer.spell.STR_DEATH,source:SRC_DMG}})}}}if(spell.level<=5&&spell.classes&&spell.classes.fromClassList&&spell.classes.fromClassList.some((c=>(c.name===Renderer.spell.STR_SORCERER||c.name===Renderer.spell.STR_WARLOCK||c.name===Renderer.spell.STR_WIZARD)&&c.source===SRC_PHB))){if(spell.school==="D"||spell.school==="E"){Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ABERRANT_MIND]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ABERRANT_MIND]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_SORCERER,classSource:SRC_PHB,name:Renderer.spell.STR_ABERRANT_MIND,source:SRC_TCE});const isExcludedAberrantMind=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_ABERRANT_MIND],"subclass",SRC_TCE,{isNoCount:true});if(!isExcludedAberrantMind){const isExisting=spell.classes.fromSubclass&&spell.classes.fromSubclass.some((it=>it.class.name===Renderer.spell.STR_SORCERER&&it.class.source===SRC_PHB&&it.subclass.name===Renderer.spell.STR_ABERRANT_MIND&&it.subclass.source===SRC_TCE));if(!isExisting){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_SORCERER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_ABERRANT_MIND,source:SRC_TCE}})}}}if(spell.level>0&&(spell.school==="A"||spell.school==="T")){Renderer.spell._CACHE_HASHES[Renderer.spell.STR_CLOCKWORK_SOUL]=Renderer.spell._CACHE_HASHES[Renderer.spell.STR_CLOCKWORK_SOUL]||UrlUtil.URL_TO_HASH_BUILDER["subclass"]({className:Renderer.spell.STR_SORCERER,classSource:SRC_PHB,name:Renderer.spell.STR_CLOCKWORK_SOUL,source:SRC_TCE});const isExcludedClockworkSoul=ExcludeUtil.isExcluded(Renderer.spell._CACHE_HASHES[Renderer.spell.STR_CLOCKWORK_SOUL],"subclass",SRC_TCE,{isNoCount:true});if(!isExcludedClockworkSoul){const isExisting=spell.classes.fromSubclass&&spell.classes.fromSubclass.some((it=>it.class.name===Renderer.spell.STR_SORCERER&&it.class.source===SRC_PHB&&it.subclass.name===Renderer.spell.STR_CLOCKWORK_SOUL&&it.subclass.source===SRC_TCE));if(!isExisting){(spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[]).push({class:{name:Renderer.spell.STR_SORCERER,source:SRC_PHB},subclass:{name:Renderer.spell.STR_CLOCKWORK_SOUL,source:SRC_TCE}})}}}}const lowName=spell.name.toLowerCase();if(Renderer.spell.brewSpellClasses){if(Renderer.spell.brewSpellClasses.spell){if(Renderer.spell.brewSpellClasses.spell[spell.source]&&Renderer.spell.brewSpellClasses.spell[spell.source][lowName]){if(Renderer.spell.brewSpellClasses.spell[spell.source][lowName].fromClassList.length){spell._tmpClasses.fromClassList=spell._tmpClasses.fromClassList||[];spell._tmpClasses.fromClassList.push(...Renderer.spell.brewSpellClasses.spell[spell.source][lowName].fromClassList)}if(Renderer.spell.brewSpellClasses.spell[spell.source][lowName].fromSubclass.length){spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[];spell._tmpClasses.fromSubclass.push(...Renderer.spell.brewSpellClasses.spell[spell.source][lowName].fromSubclass)}}}if(Renderer.spell.brewSpellClasses.class&&spell.classes&&spell.classes.fromClassList){(spell._tmpClasses=spell._tmpClasses||{}).fromClassList=spell._tmpClasses.fromClassList||[];outer:for(const src in Renderer.spell.brewSpellClasses.class){const searchForClasses=Renderer.spell.brewSpellClasses.class[src];for(const clsLowName in searchForClasses){const spellHasClass=spell.classes.fromClassList.some((cls=>cls.source===src&&cls.name.toLowerCase()===clsLowName));if(!spellHasClass)continue;const fromDetails=searchForClasses[clsLowName];if(fromDetails.fromClassList){spell._tmpClasses.fromClassList.push(...fromDetails.fromClassList)}if(fromDetails.fromSubclass){spell._tmpClasses.fromSubclass=spell._tmpClasses.fromSubclass||[];spell._tmpClasses.fromSubclass.push(...fromDetails.fromSubclass)}break outer}}}}if(Renderer.spell.brewSpellRaces){if(Renderer.spell.brewSpellRaces.spell?.[spell.source]?.[lowName]?.length){spell._tmpRaces=spell._tmpRaces||[];spell._tmpRaces.push(...Renderer.spell.brewSpellRaces.spell[spell.source][lowName])}if(Renderer.spell.brewSpellRaces?.race&&spell.races){spell._tmpRaces=spell._tmpRaces||[];outer:for(const src in Renderer.spell.brewSpellRaces.race){const searchForRaces=Renderer.spell.brewSpellRaces.race[src];for(const raceLowName in searchForRaces){const spellHasRace=spell.races.some((r=>r.source===src&&r.name.toLowerCase()===raceLowName));if(!spellHasRace)continue;const fromDetails=searchForRaces[raceLowName];spell._tmpRaces.push(...fromDetails);break outer}}}}},STR_WIZARD:"Wizard",STR_FIGHTER:"Fighter",STR_ROGUE:"Rogue",STR_CLERIC:"Cleric",STR_SORCERER:"Sorcerer",STR_WARLOCK:"Warlock",STR_ELD_KNIGHT:"Eldritch Knight",STR_ARC_TCKER:"Arcane Trickster",STR_DIV_SOUL:"Divine Soul",STR_FAV_SOUL_V2:"Favored Soul v2 (UA)",STR_FAV_SOUL_V3:"Favored Soul v3 (UA)",STR_ABERRANT_MIND:"Aberrant Mind",STR_CLOCKWORK_SOUL:"Clockwork Soul",STR_DEATH:"Death",_CACHE_HASHES:{},pGetFluff(sp){return Renderer.utils.pGetFluff({entity:sp,fluffBaseUrl:`data/spells/`,fluffProp:"spellFluff"})}};Renderer.condition={getCompactRenderedString(cond){const renderer=Renderer.get();const renderStack=[];renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(cond,cond.__prop||cond._type,UrlUtil.PG_CONDITIONS_DISEASES)}\n\t\t\t${Renderer.utils.getNameTr(cond,{page:UrlUtil.PG_CONDITIONS_DISEASES})}\n\t\t\t<tr class="text"><td colspan="6">\n\t\t`);renderer.recursiveRender({entries:cond.entries},renderStack);renderStack.push(`</td></tr>`);return renderStack.join("")},pGetFluff(it){return Renderer.utils.pGetFluff({entity:it,fluffUrl:`data/fluff-conditionsdiseases.json`,fluffProp:it.__prop==="condition"?"conditionFluff":"diseaseFluff"})}};Renderer.background={getCompactRenderedString(bg){return`\n\t\t${Renderer.utils.getExcludedTr(bg,"background",UrlUtil.PG_BACKGROUNDS)}\n\t\t${Renderer.utils.getNameTr(bg,{page:UrlUtil.PG_BACKGROUNDS})}\n\t\t<tr class="text"><td colspan="6">\n\t\t${Renderer.get().render({type:"entries",entries:bg.entries})}\n\t\t</td></tr>\n\t\t`},getSkillSummary(skillProfsArr,short,collectIn){return Renderer.background._summariseProfs(skillProfsArr,short,collectIn,`skill`)},getToolSummary(toolProfsArray,short,collectIn){return Renderer.background._summariseProfs(toolProfsArray,short,collectIn)},getLanguageSummary(languageProfsArray,short,collectIn){return Renderer.background._summariseProfs(languageProfsArray,short,collectIn)},_summariseProfs(profGroupArr,short,collectIn,hoverTag){if(!profGroupArr)return"";function getEntry(s){return short?s.toTitleCase():hoverTag?`{@${hoverTag} ${s.toTitleCase()}}`:s.toTitleCase()}function sortKeys(a,b){if(a===b)return 0;if(a==="choose")return 1;if(b==="choose")return-1;return SortUtil.ascSort(a,b)}return profGroupArr.map((profGroup=>{let sep=", ";const toJoin=Object.keys(profGroup).sort(sortKeys).filter((k=>profGroup[k])).map(((k,i)=>{if(k==="choose"){sep="; ";const choose=profGroup[k];const chooseProfs=choose.from.map((s=>{collectIn&&!collectIn.includes(s)&&collectIn.push(s);return getEntry(s)}));return`${short?`${i===0?"C":"c"}hoose `:""}${choose.count||1} ${short?`of`:`from`} ${chooseProfs.joinConjunct(", "," or ")}`}else{collectIn&&!collectIn.includes(k)&&collectIn.push(k);return getEntry(k)}}));return toJoin.join(sep)})).join(" <i>or</i> ")},pGetFluff(bg){return Renderer.utils.pGetFluff({entity:bg,fluffUrl:"data/fluff-backgrounds.json",fluffProp:"backgroundFluff"})}};Renderer.optionalfeature={getListPrerequisiteLevelText(prerequisites){if(!prerequisites||!prerequisites.some((it=>it.level)))return"—";const levelPart=prerequisites.find((it=>it.level)).level;return levelPart.level||levelPart},getPreviouslyPrintedText(it){return it.previousVersion?`<tr><td colspan="6"><p class="mt-2">${Renderer.get().render(`{@i An earlier version of this ${it.featureType.map((t=>Parser.optFeatureTypeToFull(t))).join("/")} is available in }${Parser.sourceJsonToFull(it.previousVersion.source)} {@i as {@optfeature ${it.previousVersion.name}|${it.previousVersion.source}}.}`)}</p></td></tr>`:""},getCompactRenderedString(it){const renderer=Renderer.get();const renderStack=[];renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(it,"optionalfeature",UrlUtil.PG_OPT_FEATURES)}\n\t\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_OPT_FEATURES})}\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t${it.prerequisite?`<p><i>${Renderer.utils.getPrerequisiteHtml(it.prerequisite)}</i></p>`:""}\n\t\t`);renderer.recursiveRender({entries:it.entries},renderStack,{depth:1});renderStack.push(`</td></tr>`);renderStack.push(Renderer.optionalfeature.getPreviouslyPrintedText(it));return renderStack.join("")}};Renderer.reward={getRenderedString:reward=>{const renderer=Renderer.get();const renderStack=[];renderer.recursiveRender({entries:reward.entries},renderStack,{depth:1});return`<tr class="text"><td colspan="6">${renderStack.join("")}</td></tr>`},getCompactRenderedString(reward){return`\n\t\t\t${Renderer.utils.getExcludedTr(reward,"reward",UrlUtil.PG_REWARDS)}\n\t\t\t${Renderer.utils.getNameTr(reward,{page:UrlUtil.PG_REWARDS})}\n\t\t\t${Renderer.reward.getRenderedString(reward)}\n\t\t`}};Renderer.race={getCompactRenderedString(race){const renderer=Renderer.get();const renderStack=[];const ability=Renderer.getAbilityData(race.ability);renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(race,"race",UrlUtil.PG_RACES)}\n\t\t\t${Renderer.utils.getNameTr(race,{page:UrlUtil.PG_RACES})}\n\t\t\t${!race._isBaseRace?`\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<table class="summary stripe-even-table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th class="col-4 text-center">Ability Scores</th>\n\t\t\t\t\t\t<th class="col-4 text-center">Size</th>\n\t\t\t\t\t\t<th class="col-4 text-center">Speed</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class="text-center">${ability.asText}</td>\n\t\t\t\t\t\t<td class="text-center">${(race.size||[SZ_VARIES]).map((sz=>Parser.sizeAbvToFull(sz))).join("/")}</td>\n\t\t\t\t\t\t<td class="text-center">${Parser.getSpeedString(race)}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td></tr>`:""}\n\t\t\t<tr class="text"><td colspan="6">\n\t\t`);race._isBaseRace?renderer.recursiveRender({type:"entries",entries:race._baseRaceEntries},renderStack,{depth:1}):renderer.recursiveRender({type:"entries",entries:race.entries},renderStack,{depth:1});renderStack.push("</td></tr>");return renderStack.join("")},mergeSubraces(races,opts){opts=opts||{};const out=[];races.forEach((r=>{if(r.size&&typeof r.size==="string")r.size=[r.size];if(r.lineage){r=MiscUtil.copy(r);if(r.lineage==="VRGR"){r.ability=r.ability||[{choose:{weighted:{from:[...Parser.ABIL_ABVS],weights:[2,1]}}},{choose:{weighted:{from:[...Parser.ABIL_ABVS],weights:[1,1,1]}}}]}else if(r.lineage==="UA1"){r.ability=r.ability||[{choose:{weighted:{from:[...Parser.ABIL_ABVS],weights:[2,1]}}}]}r.entries=r.entries||[];r.entries.push({type:"entries",name:"Languages",entries:["You can speak, read, and write Common and one other language that you and your DM agree is appropriate for your character."]});r.languageProficiencies=r.languageProficiencies||[{common:true,anyStandard:1}]}if(r.subraces&&!r.subraces.length)delete r.subraces;if(r.subraces){r.subraces.forEach((sr=>{sr.source=sr.source||r.source;sr._isSubRace=true}));r.subraces.sort(((a,b)=>SortUtil.ascSortLower(a.name||"_",b.name||"_")||SortUtil.ascSortLower(Parser.sourceJsonToAbv(a.source),Parser.sourceJsonToAbv(b.source))))}if(opts.isAddBaseRaces&&r.subraces){const baseRace=MiscUtil.copy(r);baseRace._isBaseRace=true;const isAnyNoName=r.subraces.some((it=>!it.name));if(isAnyNoName){baseRace._rawName=baseRace.name;baseRace.name=`${baseRace.name} (Base)`}const nameCounts={};r.subraces.filter((sr=>sr.name)).forEach((sr=>nameCounts[sr.name.toLowerCase()]=(nameCounts[sr.name.toLowerCase()]||0)+1));nameCounts._=r.subraces.filter((sr=>!sr.name)).length;const lst={type:"list",items:r.subraces.map((sr=>{const count=nameCounts[(sr.name||"_").toLowerCase()];const idName=Renderer.race.getSubraceName(r.name,sr.name);return`{@race ${idName}|${sr.source}${count>1?`|${idName} (<span title="${Parser.sourceJsonToFull(sr.source).escapeQuotes()}">${Parser.sourceJsonToAbv(sr.source)}</span>)`:""}}`}))};baseRace._baseRaceEntries=[{type:"section",entries:["This race has multiple subraces, as listed below:",lst]},{type:"section",entries:[{type:"entries",entries:[{type:"entries",name:"Traits",entries:[...MiscUtil.copy(baseRace.entries)]}]}]}];delete baseRace.subraces;out.push(baseRace)}out.push(...Renderer.race._mergeSubraces(r))}));return out},getSubraceName(raceName,subraceName){if(!subraceName)return raceName;const mBrackets=/^(.*?)(\(.*?\))$/i.exec(raceName||"");if(!mBrackets)return`${raceName} (${subraceName})`;const bracketPart=mBrackets[2].substring(1,mBrackets[2].length-1);return`${mBrackets[1]}(${[bracketPart,subraceName].join("; ")})`},_mergeSubraces(race){if(!race.subraces)return[race];return MiscUtil.copy(race.subraces).map((s=>Renderer.race._getMergedSubrace(race,s)))},_getMergedSubrace(race,s){const cpy=MiscUtil.copy(race);cpy._baseName=cpy.name;cpy._baseSource=cpy.source;cpy._baseSrd=cpy.srd;delete cpy.subraces;delete cpy.srd;if(s.name){cpy._subraceName=s.name;if(s.alias){cpy.alias=s.alias.map((it=>Renderer.race.getSubraceName(cpy.name,it)));delete s.alias}cpy.name=Renderer.race.getSubraceName(cpy.name,s.name);delete s.name}if(s.ability){if(s.overwrite&&s.overwrite.ability||!cpy.ability)cpy.ability=s.ability.map((()=>({})));if(cpy.ability.length!==s.ability.length)throw new Error(`Race and subrace ability array lengths did not match!`);s.ability.forEach(((obj,i)=>Object.assign(cpy.ability[i],obj)));delete s.ability}if(s.entries){s.entries.forEach((e=>{if(e.data&&e.data.overwrite){const toOverwrite=cpy.entries.findIndex((it=>it.name.toLowerCase().trim()===e.data.overwrite.toLowerCase().trim()));if(~toOverwrite)cpy.entries[toOverwrite]=e;else cpy.entries.push(e)}else{cpy.entries.push(e)}}));delete s.entries}if(s.traitTags){if(s.overwrite&&s.overwrite.traitTags)cpy.traitTags=s.traitTags;else cpy.traitTags=(cpy.traitTags||[]).concat(s.traitTags);delete s.traitTags}if(s.languageProficiencies){if(s.overwrite&&s.overwrite.languageProficiencies)cpy.languageProficiencies=s.languageProficiencies;else cpy.languageProficiencies=cpy.languageProficiencies=(cpy.languageProficiencies||[]).concat(s.languageProficiencies);delete s.languageProficiencies}if(s.skillProficiencies){if(!cpy.skillProficiencies||s.overwrite&&s.overwrite["skillProficiencies"])cpy.skillProficiencies=s.skillProficiencies;else{if(!s.skillProficiencies.length||!cpy.skillProficiencies.length)throw new Error(`No items!`);if(s.skillProficiencies.length>1||cpy.skillProficiencies.length>1)throw new Error(`Subrace merging does not handle choices!`);if(s.skillProficiencies.choose){if(cpy.skillProficiencies.choose)throw new Error(`Subrace choose merging is not supported!!`);cpy.skillProficiencies.choose=s.skillProficiencies.choose;delete s.skillProficiencies.choose}Object.assign(cpy.skillProficiencies[0],s.skillProficiencies[0])}delete s.skillProficiencies}Object.assign(cpy,s);Object.entries(cpy).forEach((([k,v])=>{if(v!=null)return;delete cpy[k]}));return cpy},adoptSubraces(allRaces,subraces){const nxtData=[];subraces.forEach((sr=>{if(!sr.race||!sr.race.name||!sr.race.source)throw new Error(`Subrace was missing parent race!`);const _baseRace=allRaces.find((r=>r.name===sr.race.name&&r.source===sr.race.source));if(!_baseRace)throw new Error(`Could not find parent race for subrace!`);if(_baseRace._isBaseRace){const subraceListEntry=((_baseRace._baseRaceEntries[0]||{}).entries||[]).find((it=>it.type==="list"));subraceListEntry.items.push(`{@race ${_baseRace._rawName||_baseRace.name} (${sr.name})|${sr.source||_baseRace.source}}`)}let baseRace=nxtData.find((r=>r.name===sr.race.name&&r.source===sr.race.source));if(!baseRace){baseRace=MiscUtil.copy(_baseRace);if(baseRace._rawName){baseRace.name=baseRace._rawName;delete baseRace._rawName}delete baseRace._isBaseRace;delete baseRace._baseRaceEntries;nxtData.push(baseRace)}baseRace.subraces=baseRace.subraces||[];baseRace.subraces.push(sr)}));return nxtData},async pPostProcessFluff(race,raceFluff){if(!(raceFluff.uncommon||raceFluff.monstrous))return raceFluff;raceFluff=MiscUtil.copy(raceFluff);const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/fluff-races.json`);if(raceFluff.uncommon){raceFluff.entries=raceFluff.entries||[];raceFluff.entries.push(MiscUtil.copy(data.raceFluffMeta.uncommon))}if(raceFluff.monstrous){raceFluff.entries=raceFluff.entries||[];raceFluff.entries.push(MiscUtil.copy(data.raceFluffMeta.monstrous))}return raceFluff},pGetFluff(race){return Renderer.utils.pGetFluff({entity:race,fluffProp:"raceFluff",fluffUrl:`data/fluff-races.json`,pFnPostProcess:Renderer.race.pPostProcessFluff.bind(null,race)})}};Renderer.deity={_basePartTranslators:{Alignment:{prop:"alignment",displayFn:it=>it.map((a=>Parser.alignmentAbvToFull(a))).join(" ")},Pantheon:{prop:"pantheon"},Category:{prop:"category",displayFn:it=>typeof it==="string"?it:it.join(", ")},Domains:{prop:"domains",displayFn:it=>it.join(", ")},Province:{prop:"province"},"Alternate Names":{prop:"altNames",displayFn:it=>it.join(", ")},Symbol:{prop:"symbol"}},getOrderedParts(deity,prefix,suffix){const parts={};Object.entries(Renderer.deity._basePartTranslators).forEach((([k,v])=>{const val=deity[v.prop];if(val!=null){const outVal=v.displayFn?v.displayFn(val):val;parts[k]=outVal}}));if(deity.customProperties)Object.entries(deity.customProperties).forEach((([k,v])=>parts[k]=v));const allKeys=Object.keys(parts).sort(SortUtil.ascSortLower);return allKeys.map((k=>`${prefix}<b>${k}: </b>${Renderer.get().render(parts[k])}${suffix}`)).join("")},getCompactRenderedString(deity){const renderer=Renderer.get();return`\n\t\t\t${Renderer.utils.getExcludedTr(deity,"deity",UrlUtil.PG_DEITIES)}\n\t\t\t${Renderer.utils.getNameTr(deity,{suffix:deity.title?`, ${deity.title.toTitleCase()}`:"",page:UrlUtil.PG_DEITIES})}\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<div class="rd__compact-stat">${Renderer.deity.getOrderedParts(deity,`<p>`,`</p>`)}</div>\n\t\t\t</td>\n\t\t\t${deity.entries?`<tr><td colspan="6"><div class="border"></div></td></tr><tr><td colspan="6">${renderer.render({entries:deity.entries},1)}</td></tr>`:""}\n\t\t`}};Renderer.object={getCompactRenderedString(obj,opts){return Renderer.object.getRenderedString(obj,{...opts,isCompact:true})},getRenderedString(obj,opts){opts=opts||{};const renderer=Renderer.get();const hasToken=obj.tokenUrl||obj.hasToken;const extraThClasses=!opts.isCompact&&hasToken?["objs__name--token"]:null;return`\n\t\t\t${Renderer.utils.getExcludedTr(obj,"object",opts.page||UrlUtil.PG_OBJECTS)}\n\t\t\t${Renderer.utils.getNameTr(obj,{page:opts.page||UrlUtil.PG_OBJECTS,extraThClasses:extraThClasses,isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t\t<tr class="text"><td colspan="6"><i>${obj.objectType!=="GEN"?`${Parser.sizeAbvToFull(obj.size)} ${obj.creatureType?Parser.monTypeToFullObj(obj.creatureType).asText:"object"}`:`Variable size object`}</i><br></td></tr>\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t\t${obj.capCrew!=null?`<b>Creature Capacity:</b> ${Renderer.vehicle.getShipCreatureCapacity(obj)}<br>`:""}\n\t\t\t\t${obj.capCargo!=null?`<b>Cargo Capacity:</b> ${Renderer.vehicle.getShipCargoCapacity(obj)}</br>`:""}\n\t\t\t\t${obj.ac!=null?`<b>Armor Class:</b> ${obj.ac.special??obj.ac}<br>`:""}\n\t\t\t\t${obj.hp!=null?`<b>Hit Points:</b> ${obj.hp.special??obj.hp}<br>`:""}\n\t\t\t\t${obj.speed!=null?`<b>Speed:</b> ${Parser.getSpeedString(obj)}<br>`:""}\n\t\t\t\t${obj.immune!=null?`<b>Damage Immunities:</b> ${Parser.getFullImmRes(obj.immune)}<br>`:""}\n\t\t\t\t${Parser.ABIL_ABVS.some((ab=>obj[ab]!=null))?`<b>Ability Scores:</b> ${Parser.ABIL_ABVS.filter((ab=>obj[ab]!=null)).map((ab=>renderer.render(`${ab.toUpperCase()} ${Renderer.utils.getAbilityRoller(obj,ab)}`))).join(", ")}`:""}\n\t\t\t\t${obj.resist?`<b>Damage Resistances:</b> ${Parser.getFullImmRes(obj.resist)}<br>`:""}\n\t\t\t\t${obj.vulnerable?`<b>Damage Vulnerabilities:</b> ${Parser.getFullImmRes(obj.vulnerable)}<br>`:""}\n\t\t\t\t${obj.conditionImmune?`<b>Condition Immunities:</b> ${Parser.getFullCondImm(obj.conditionImmune)}<br>`:""}\n\t\t\t</td></tr>\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t${obj.entries?renderer.render({entries:obj.entries},2):""}\n\t\t\t${obj.actionEntries?renderer.render({entries:obj.actionEntries},2):""}\n\t\t\t</td></tr>\n\t\t`},getTokenUrl(obj){return obj.tokenUrl||UrlUtil.link(`${Renderer.get().baseMediaUrls["img"]||Renderer.get().baseUrl}img/objects/tokens/${Parser.sourceJsonToAbv(obj.source)}/${Parser.nameToTokenName(obj.name)}.png`)}};Renderer.traphazard={getSubtitle(it){const type=it.trapHazType||"HAZ";switch(type){case"GEN":return null;case"SMPL":case"CMPX":return`${Parser.trapHazTypeToFull(type)} (${Parser.tierToFullLevel(it.tier)}, ${Parser.threatToFull(it.threat)} threat)`;default:return Parser.trapHazTypeToFull(type)}},getSimplePart(renderer,it){if(it.trapHazType==="SMPL"){return renderer.render({entries:[{type:"entries",name:"Trigger",entries:it.trigger},{type:"entries",name:"Effect",entries:it.effect},{type:"entries",name:"Countermeasures",entries:it.countermeasures}]},1)}return""},getComplexPart(renderer,it){if(it.trapHazType==="CMPX"){return renderer.render({entries:[{type:"entries",name:"Trigger",entries:it.trigger},{type:"entries",name:"Initiative",entries:[`The trap acts on ${Parser.trapInitToFull(it.initiative)}${it.initiativeNote?` (${it.initiativeNote})`:""}.`]},it.eActive?{type:"entries",name:"Active Elements",entries:it.eActive}:null,it.eDynamic?{type:"entries",name:"Dynamic Elements",entries:it.eDynamic}:null,it.eConstant?{type:"entries",name:"Constant Elements",entries:it.eConstant}:null,{type:"entries",name:"Countermeasures",entries:it.countermeasures}].filter((it=>it))},1)}return""},getCompactRenderedString(it,opts){opts=opts||{};const renderer=Renderer.get();const subtitle=Renderer.traphazard.getSubtitle(it);return`\n\t\t\t${Renderer.utils.getExcludedTr(it,it.__prop,UrlUtil.PG_TRAPS_HAZARDS)}\n\t\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_TRAPS_HAZARDS,isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t\t${subtitle?`<tr class="text"><td colspan="6"><i>${subtitle}</i></td></tr>`:""}\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t${renderer.render({entries:it.entries},2)}\n\t\t\t${Renderer.traphazard.getSimplePart(renderer,it)}${Renderer.traphazard.getComplexPart(renderer,it)}\n\t\t\t</td></tr>\n\t\t`},_trapTypes:new Set(["MECH","MAG","SMPL","CMPX"]),isTrap(trapHazType){return Renderer.traphazard._trapTypes.has(trapHazType)}};Renderer.cultboon={doRenderCultParts(it,renderer,renderStack){if(it.goal||it.cultists||it.signaturespells){const fauxList={type:"list",style:"list-hang-notitle",items:[]};if(it.goal){fauxList.items.push({type:"item",name:"Goals:",entry:it.goal.entry})}if(it.cultists){fauxList.items.push({type:"item",name:"Typical Cultists:",entry:it.cultists.entry})}if(it.signaturespells){fauxList.items.push({type:"item",name:"Signature Spells:",entry:it.signaturespells.entry})}renderer.recursiveRender(fauxList,renderStack,{depth:2})}},doRenderBoonParts(it,renderer,renderStack){const benefits={type:"list",style:"list-hang-notitle",items:[]};if(it.ability){benefits.items.push({type:"item",name:"Ability Score Adjustment:",entry:it.ability?it.ability.entry:"None"})}if(it.signaturespells){benefits.items.push({type:"item",name:"Signature Spells:",entry:it.signaturespells?it.signaturespells.entry:"None"})}if(benefits.items.length)renderer.recursiveRender(benefits,renderStack,{depth:1})},getCompactRenderedString(it){const renderer=Renderer.get();const renderStack=[];if(it.__prop==="cult"){Renderer.cultboon.doRenderCultParts(it,renderer,renderStack);renderer.recursiveRender({entries:it.entries},renderStack,{depth:2});return`\n\t\t\t${Renderer.utils.getExcludedTr(it,"cult",UrlUtil.PG_CULTS_BOONS)}\n\t\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_CULTS_BOONS})}\n\t\t\t<tr id="text"><td class="divider" colspan="6"><div></div></td></tr>\n\t\t\t<tr class="text"><td colspan="6" class="text">${renderStack.join("")}</td></tr>`}else if(it.__prop==="boon"){Renderer.cultboon.doRenderBoonParts(it,renderer,renderStack);renderer.recursiveRender({entries:it.entries},renderStack,{depth:1});it._displayName=it._displayName||it.name;return`\n\t\t\t${Renderer.utils.getExcludedTr(it,"boon",UrlUtil.PG_CULTS_BOONS)}\n\t\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_CULTS_BOONS})}\n\t\t\t<tr class="text"><td colspan="6">${renderStack.join("")}</td></tr>`}}};Renderer.monster={getShortName(mon,isTitleCase){const prefix=mon.isNamedCreature?"":isTitleCase?"The ":"the ";if(mon.shortName===true)return`${prefix}${mon.name}`;else if(mon.shortName)return`${prefix}${!prefix&&isTitleCase?mon.shortName.toTitleCase():mon.shortName.toLowerCase()}`;const base=mon.name.split(",")[0];let out=base.replace(/(?:adult|ancient|young) \w+ (dragon|dracolich)/gi,"$1");out=mon.isNamedCreature?out.split(" ")[0]:out.toLowerCase();return`${prefix}${out}`},getLegendaryActionIntro(mon,renderer=Renderer.get()){if(mon.legendaryHeader){return renderer.render({entries:mon.legendaryHeader})}else{const legendaryActions=mon.legendaryActions||3;const legendaryNameTitle=Renderer.monster.getShortName(mon,true);return`${legendaryNameTitle} can take ${legendaryActions} legendary action${legendaryActions>1?"s":""}, choosing from the options below. Only one legendary action can be used at a time and only at the end of another creature's turn. ${legendaryNameTitle} regains spent legendary actions at the start of its turn.`}},getMythicActionIntro(mon,renderer=Renderer.get()){if(mon.mythicHeader)return renderer.render({entries:mon.mythicHeader});return""},getSave(renderer,attr,mod){if(attr==="special")return renderer.render(mod);return renderer.render(`<span>${attr.uppercaseFirst()} {@savingThrow ${attr} ${mod}}</span>`)},dragonCasterVariant:{VARIANT_NAME:"Dragons as Innate Spellcasters",LVL_TO_COLOR_TO_SPELLS:{2:{B:["darkness","Melf's acid arrow","fog cloud","scorching ray"],G:["ray of sickness","charm person","detect thoughts","invisibility","suggestion"],W:["ice knife|XGE","Snilloc's snowball swarm|XGE"],A:["see invisibility","magic mouth","blindness/deafness","sleep","detect thoughts"],Z:["gust of wind","misty step","locate object","blur","witch bolt","thunderwave","shield"],C:["knock","sleep","detect thoughts","blindness/deafness","tasha's hideous laughter"]},3:{U:["wall of sand|XGE","thunder step|XGE","lightning bolt","blink","magic missile","slow"],R:["fireball","scorching ray","haste","erupting earth|XGE","Aganazzar's scorcher|XGE"],O:["slow","fireball","dispel magic","counterspell","Aganazzar's scorcher|XGE","shield"],S:["sleet storm","protection from energy","catnap|XGE","locate object","identify","Leomund's tiny hut"]},4:{B:["vitriolic sphere|XGE","sickening radiance|XGE","Evard's black tentacles","blight","hunger of Hadar"],W:["fire shield","ice storm","sleet storm"],A:["charm monster|XGE","sending","wall of sand|XGE","hypnotic pattern","tongues"],C:["polymorph","greater invisibility","confusion","stinking cloud","major image","charm monster|XGE"]},5:{U:["telekinesis","hold monster","dimension door","wall of stone","wall of force"],G:["cloudkill","charm monster|XGE","modify memory","mislead","hallucinatory terrain","dimension door"],Z:["steel wind strike|XGE","control weather","control winds|XGE","watery sphere|XGE","storm sphere|XGE","tidal wave|XGE"],O:["hold monster","immolation|XGE","wall of fire","greater invisibility","dimension door"],S:["cone of cold","ice storm","teleportation circle","skill empowerment|XGE","creation","Mordenkainen's private sanctum"]},6:{W:["cone of cold","wall of ice"],A:["scrying","Rary's telepathic bond","Otto's irresistible dance","legend lore","hold monster","dream"]},7:{B:["power word pain|XGE","finger of death","disintegrate","hold monster"],U:["chain lightning","forcecage","teleport","etherealness"],G:["project image","mirage arcane","prismatic spray","teleport"],Z:["whirlwind|XGE","chain lightning","scatter|XGE","teleport","disintegrate","lightning bolt"],C:["symbol","simulacrum","reverse gravity","project image","Bigby's hand","mental prison|XGE","seeming"],S:["Otiluke's freezing sphere","prismatic spray","wall of ice","contingency","arcane gate"]},8:{O:["sunburst","delayed blast fireball","antimagic field","teleport","globe of invulnerability","maze"]}},hasCastingColorVariant(dragon){return dragon.dragonCastingColor&&!dragon.spellcasting},getMeta(dragon){const chaMod=Parser.getAbilityModNumber(dragon.cha);const pb=Parser.crToPb(dragon.cr);const maxSpellLevel=Math.floor(Parser.crToNumber(dragon.cr)/3);return{chaMod:chaMod,pb:pb,maxSpellLevel:maxSpellLevel,spellSaveDc:pb+chaMod+8,spellToHit:pb+chaMod,exampleSpells:Renderer.monster.dragonCasterVariant._getMeta_getExampleSpells(dragon,maxSpellLevel)}},_getMeta_getExampleSpells(dragon,maxSpellLevel){if(Renderer.monster.dragonCasterVariant.LVL_TO_COLOR_TO_SPELLS[maxSpellLevel]?.[dragon.dragonCastingColor])return Renderer.monster.dragonCasterVariant.LVL_TO_COLOR_TO_SPELLS[maxSpellLevel][dragon.dragonCastingColor];const flatKeys=Object.entries(Renderer.monster.dragonCasterVariant.LVL_TO_COLOR_TO_SPELLS).map((([lvl,group])=>Object.keys(group).map((color=>`${lvl}${color}`)))).flat().mergeMap((it=>({[it]:true})));while(--maxSpellLevel>-1){const lookupKey=`${maxSpellLevel}${dragon.dragonCastingColor}`;if(flatKeys[lookupKey])return Renderer.monster.dragonCasterVariant.LVL_TO_COLOR_TO_SPELLS[maxSpellLevel][dragon.dragonCastingColor]}return[]},getSpellcasterDetailsPart({chaMod:chaMod,maxSpellLevel:maxSpellLevel,spellSaveDc:spellSaveDc,spellToHit:spellToHit}){const levelString=maxSpellLevel===0?`${chaMod===1?"This":"These"} spells are Cantrips.`:`${chaMod===1?"The":"Each"} spell's level can be no higher than ${Parser.spLevelToFull(maxSpellLevel)}.`;return`This dragon can innately cast ${Parser.numberToText(chaMod)} spell${chaMod===1?"":"s"}, once per day${chaMod===1?"":" each"}, requiring no material components. ${levelString} The dragon's spell save DC is {@dc ${spellSaveDc}}, and it has {@hit ${spellToHit}} to hit with spell attacks. See the {@filter spell page|spells|level=${[...new Array(maxSpellLevel+1)].map(((it,i)=>i)).join(";")}} for a list of spells the dragon is capable of casting.`},getHtml(renderer,dragon){if(!Renderer.monster.dragonCasterVariant.hasCastingColorVariant(dragon))return null;const meta=Renderer.monster.dragonCasterVariant.getMeta(dragon);const{exampleSpells:exampleSpells}=meta;const v={type:"variant",name:"Dragons as Innate Spellcasters",entries:["Dragons are innately magical creatures that can master a few spells as they age, using this variant.",`A young or older dragon can innately cast a number of spells equal to its Charisma modifier. Each spell can be cast once per day, requiring no material components, and the spell's level can be no higher than one-third the dragon's challenge rating (rounded down). The dragon's bonus to hit with spell attacks is equal to its proficiency bonus + its Charisma bonus. The dragon's spell save DC equals 8 + its proficiency bonus + its Charisma modifier.`,`{@note ${Renderer.monster.dragonCasterVariant.getSpellcasterDetailsPart(meta)}${exampleSpells?` A selection of examples are shown below:`:""}}`]};if(exampleSpells){const ls={type:"list",style:"italic",items:exampleSpells.map((it=>`{@spell ${it}}`))};v.entries.push(ls)}return renderer.render(v)}},getCrScaleTarget({win:win,$btnScale:$btnScale,initialCr:initialCr,cbRender:cbRender,isCompact:isCompact}){const evtName="click.cr-scaler";let slider;const $body=$(win.document.body);function cleanSliders(){$body.find(`.mon__cr_slider_wrp`).remove();$btnScale.off(evtName);if(slider)slider.destroy()}cleanSliders();const $wrp=$(`<div class="mon__cr_slider_wrp ${isCompact?"mon__cr_slider_wrp--compact":""}"></div>`);const cur=Parser.CRS.indexOf(initialCr);if(cur===-1)throw new Error(`Initial CR ${initialCr} was not valid!`);const comp=BaseComponent.fromObject({min:0,max:Parser.CRS.length-1,cur:cur});slider=new ComponentUiUtil.RangeSlider({comp:comp,propMin:"min",propMax:"max",propCurMin:"cur",fnDisplay:ix=>Parser.CRS[ix]});slider.$get().appendTo($wrp);$btnScale.off(evtName).on(evtName,(evt=>evt.stopPropagation()));$wrp.on(evtName,(evt=>evt.stopPropagation()));$body.off(evtName).on(evtName,cleanSliders);comp._addHookBase("cur",(()=>{cbRender(Parser.crToNumber(Parser.CRS[comp._state.cur]));$body.off(evtName);cleanSliders()}));$btnScale.after($wrp)},getSelSummonSpellLevel(mon){if(mon._summonedBySpell_levelBase==null)return;return e_({tag:"select",clazz:"input-xs form-control form-control--minimal w-initial inline-block",name:"mon__sel-summon-spell-level",children:[e_({tag:"option",val:"-1",text:"—"}),...[...new Array(VeCt.SPELL_LEVEL_MAX+1-mon._summonedBySpell_levelBase)].map(((_,i)=>e_({tag:"option",val:i+mon._summonedBySpell_levelBase,text:i+mon._summonedBySpell_levelBase})))]})},getCompactRenderedStringSection(mon,renderer,title,key,depth){if(!mon[key])return"";const noteKey=`${key}Note`;const toRender=key==="lairActions"||key==="regionalEffects"?[{type:"entries",entries:mon[key]}]:mon[key];return`<tr class="mon__stat-header-underline"><td colspan="6"><span class="mon__sect-header-inner">${title}${mon[noteKey]?` (<span class="ve-small">${mon[noteKey]}</span>)`:""}</span></td></tr>\n\t\t<tr class="text"><td colspan="6">\n\t\t${key==="legendary"&&mon.legendary?`<p>${Renderer.monster.getLegendaryActionIntro(mon)}</p>`:""}\n\t\t${key==="mythic"&&mon.mythic?`<p>${Renderer.monster.getMythicActionIntro(mon)}</p>`:""}\n\t\t${toRender.map((it=>it.rendered||renderer.render(it,depth))).join("")}\n\t\t</td></tr>`},getTypeAlignmentPart(mon){return`${mon.level?`${Parser.getOrdinalForm(mon.level)}-level `:""}${Parser.sizeAbvToFull(mon.size)}${mon.sizeNote?` ${mon.sizeNote}`:""} ${Parser.monTypeToFullObj(mon.type).asText}${mon.alignment?`, ${Parser.alignmentListToFull(mon.alignment)}`:""}`},getSavesPart(mon){return`${Object.keys(mon.save).sort(SortUtil.ascSortAtts).map((s=>Renderer.monster.getSave(Renderer.get(),s,mon.save[s]))).join(", ")}`},getSensesPart(mon){return`${mon.senses?`${Renderer.monster.getRenderedSenses(mon.senses)}, `:""}passive Perception ${mon.passive||"—"}`},getRenderWithPlugins({renderer:renderer,mon:mon,fn:fn}){return renderer.withPlugin({entryType:"dice",pluginType:"*",fnPlugin:()=>{if(mon._summonedBySpell_levelBase==null)return null;return{additionalData:{"data-summoned-by-spell-level":mon._summonedBySpell_level??mon._summonedBySpell_levelBase}}},fn:fn})},getCompactRenderedString(mon,renderer,opts){renderer=renderer||Renderer.get();return Renderer.monster.getRenderWithPlugins({renderer:renderer,mon:mon,fn:()=>Renderer.monster._getCompactRenderedString(mon,renderer,opts)})},_getCompactRenderedString(mon,renderer,opts){opts=opts||{};if(opts.isCompact===undefined)opts.isCompact=true;const renderStack=[];const legGroup=DataUtil.monster.getMetaGroup(mon);const hasToken=mon.tokenUrl||mon.hasToken;const extraThClasses=!opts.isCompact&&hasToken?["mon__name--token"]:null;const isCr=Parser.crToNumber(mon.cr)!==VeCt.CR_UNKNOWN;const isShowSpellLevelScaler=!isCr&&mon._summonedBySpell_levelBase!=null;const fnGetSpellTraits=Renderer.monster.getSpellcastingRenderedTraits.bind(Renderer.monster,renderer);const allTraits=Renderer.monster.getOrderedTraits(mon,{fnGetSpellTraits:fnGetSpellTraits});const allActions=Renderer.monster.getOrderedActions(mon,{fnGetSpellTraits:fnGetSpellTraits});let ptCrSpellLevel=`<td colspan="2">—</td>`;if(isShowSpellLevelScaler){ptCrSpellLevel=`<td colspan="2">${Renderer.monster.getSelSummonSpellLevel(mon)?.outerHTML||""}</td>`}else if(isCr&&ScaleCreature.isCrInScaleRange(mon)){ptCrSpellLevel=`<td colspan="2">\n\t\t\t\t${Parser.monCrToFull(mon.cr,{isMythic:!!mon.mythic})}\n\t\t\t\t${opts.isShowScalers&&!opts.isScaledCr&&Parser.isValidCr(mon.cr?mon.cr.cr||mon.cr:null)?`\n\t\t\t\t<button title="Scale Creature By CR (Highly Experimental)" class="mon__btn-scale-cr btn btn-xs btn-default">\n\t\t\t\t\t<span class="glyphicon glyphicon-signal"></span>\n\t\t\t\t</button>\n\t\t\t\t`:""}\n\t\t\t\t${opts.isScaledCr?`\n\t\t\t\t<button title="Reset CR Scaling" class="mon__btn-reset-cr btn btn-xs btn-default">\n\t\t\t\t\t<span class="glyphicon glyphicon-refresh"></span>\n\t\t\t\t</button>\n\t\t\t\t`:""}\n\t\t\t</td>`}renderStack.push(`\n\t\t\t${Renderer.utils.getExcludedTr(mon,"monster",opts.page||UrlUtil.PG_BESTIARY)}\n\t\t\t${Renderer.utils.getNameTr(mon,{page:opts.page||UrlUtil.PG_BESTIARY,extensionData:{_scaledCr:mon._scaledCr,_scaledSummonLevel:mon._scaledSummonLevel},extraThClasses:extraThClasses,isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t\t<tr><td colspan="6"><i>${Renderer.monster.getTypeAlignmentPart(mon)}</i></td></tr>\n\t\t\t<tr><td colspan="6"><div class="border"></div></td></tr>\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<table class="summary-noback relative table-layout-fixed">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th colspan="2">Armor Class</th>\n\t\t\t\t\t\t<th colspan="2">Hit Points</th>\n\t\t\t\t\t\t<th colspan="2">Speed</th>\n\t\t\t\t\t\t<th colspan="2">${isShowSpellLevelScaler?"Spell Level":"Challenge"}</th>\n\t\t\t\t\t\t${mon.pbNote||Parser.crToNumber(mon.cr)<VeCt.CR_CUSTOM?`<th colspan="1" title="Proficiency Bonus">PB</th>`:""}\n\t\t\t\t\t\t${hasToken&&!opts.isCompact?`<th colspan="1"></th>`:""}\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td colspan="2">${Parser.acToFull(mon.ac)}</td>\n\t\t\t\t\t\t<td colspan="2">${Renderer.monster.getRenderedHp(mon.hp)}</td>\n\t\t\t\t\t\t<td colspan="2">${Parser.getSpeedString(mon)}</td>\n\t\t\t\t\t\t${ptCrSpellLevel}\n\t\t\t\t\t\t${mon.pbNote||Parser.crToNumber(mon.cr)<VeCt.CR_CUSTOM?`<td colspan="1">${mon.pbNote??UiUtil.intToBonus(Parser.crToPb(mon.cr))}</td>`:""}\n\t\t\t\t\t\t${hasToken&&!opts.isCompact?`<td colspan="1"></td>`:""}\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td></tr>\n\t\t\t<tr><td colspan="6"><div class="border"></div></td></tr>\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<table class="summary stripe-even-table">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th class="col-2 text-center">STR</th>\n\t\t\t\t\t\t<th class="col-2 text-center">DEX</th>\n\t\t\t\t\t\t<th class="col-2 text-center">CON</th>\n\t\t\t\t\t\t<th class="col-2 text-center">INT</th>\n\t\t\t\t\t\t<th class="col-2 text-center">WIS</th>\n\t\t\t\t\t\t<th class="col-2 text-center">CHA</th>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"str")}</td>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"dex")}</td>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"con")}</td>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"int")}</td>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"wis")}</td>\n\t\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(mon,"cha")}</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</table>\n\t\t\t</td></tr>\n\t\t\t<tr><td colspan="6"><div class="border"></div></td></tr>\n\t\t\t<tr><td colspan="6">\n\t\t\t\t<div class="rd__compact-stat">\n\t\t\t\t\t${mon.save?`<p><b>Saving Throws</b> ${Renderer.monster.getSavesPart(mon)}</p>`:""}\n\t\t\t\t\t${mon.skill?`<p><b>Skills</b> ${Renderer.monster.getSkillsString(renderer,mon)}</p>`:""}\n\t\t\t\t\t${mon.vulnerable?`<p><b>Damage Vuln.</b> ${Parser.getFullImmRes(mon.vulnerable)}</p>`:""}\n\t\t\t\t\t${mon.resist?`<p><b>Damage Res.</b> ${Parser.getFullImmRes(mon.resist)}</p>`:""}\n\t\t\t\t\t${mon.immune?`<p><b>Damage Imm.</b> ${Parser.getFullImmRes(mon.immune)}</p>`:""}\n\t\t\t\t\t${mon.conditionImmune?`<p><b>Condition Imm.</b> ${Parser.getFullCondImm(mon.conditionImmune)}</p>`:""}\n\t\t\t\t\t${opts.isHideSenses?"":`<p><b>Senses</b> ${Renderer.monster.getSensesPart(mon)}</p>`}\n\t\t\t\t\t${opts.isHideLanguages?"":`<p><b>Languages</b> ${Renderer.monster.getRenderedLanguages(mon.languages)}</p>`}\n\t\t\t\t</div>\n\t\t\t</td></tr>\n\t\t\t${allTraits?`<tr><td colspan="6"><div class="border"></div></td></tr>\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t${allTraits.map((it=>it.rendered||renderer.render(it,2))).join("")}\n\t\t\t</td></tr>`:""}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection({action:allActions},renderer,"Actions","action",2)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(mon,renderer,"Bonus Actions","bonus",2)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(mon,renderer,"Reactions","reaction",2)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(mon,renderer,"Legendary Actions","legendary",2)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(mon,renderer,"Mythic Actions","mythic",2)}\n\t\t\t${legGroup&&legGroup.lairActions?Renderer.monster.getCompactRenderedStringSection(legGroup,renderer,"Lair Actions","lairActions",1):""}\n\t\t\t${legGroup&&legGroup.regionalEffects?Renderer.monster.getCompactRenderedStringSection(legGroup,renderer,"Regional Effects","regionalEffects",1):""}\n\t\t\t${mon.variant||mon.dragonCastingColor&&!mon.spellcasting||mon.summonedBySpell?`\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t${mon.variant?mon.variant.map((it=>it.rendered||renderer.render(it))).join(""):""}\n\t\t\t${mon.dragonCastingColor?Renderer.monster.dragonCasterVariant.getHtml(renderer,mon):""}\n\t\t\t${mon.footer?renderer.render({entries:mon.footer}):""}\n\t\t\t${mon.summonedBySpell?`<div><b>Summoned By:</b> ${renderer.render(`{@spell ${mon.summonedBySpell}}`)}<div>`:""}\n\t\t\t</td></tr>\n\t\t\t`:""}\n\t\t`);return renderStack.join("")},getRenderedHp:(hp,isPlainText)=>{function getMaxStr(){const mHp=/^(\d+)d(\d+)([-+]\d+)?$/i.exec(hp.formula);if(mHp){const num=Number(mHp[1]);const faces=Number(mHp[2]);const mod=mHp[3]?Number(mHp[3]):0;return`Maximum: ${num*faces+mod}`}else return""}if(hp.special!=null)return hp.special;if(/^\d+d1$/.exec(hp.formula)){return hp.average}else{const maxStr=getMaxStr(hp.formula);if(isPlainText)return`${hp.average} (${hp.formula})`;return`${maxStr?`<span title="${maxStr}" class="help-subtle">`:""}${hp.average}${maxStr?"</span>":""} ${Renderer.get().render(`({@dice ${hp.formula}|${hp.formula}|Hit Points})`)}`}},getSpellcastingRenderedTraits:(renderer,mon,displayAsProp="trait")=>{const out=[];(mon.spellcasting||[]).filter((it=>(it.displayAs||"trait")===displayAsProp)).forEach((entry=>{entry.type=entry.type||"spellcasting";const renderStack=[];renderer.recursiveRender(entry,renderStack,{depth:2});out.push({name:entry.name,rendered:renderStack.join("")})}));return out},getOrderedTraits(mon,{fnGetSpellTraits:fnGetSpellTraits}={}){let traits=mon.trait?MiscUtil.copy(mon.trait):null;if(fnGetSpellTraits){const spellTraits=fnGetSpellTraits(mon,"trait");if(spellTraits.length)traits=traits?traits.concat(spellTraits):spellTraits}if(traits?.length)return traits.sort(((a,b)=>SortUtil.monTraitSort(a,b)))},getOrderedActions(mon,{fnGetSpellTraits:fnGetSpellTraits}={}){let actions=mon.action?MiscUtil.copy(mon.action):null;let spellActions;if(fnGetSpellTraits){spellActions=fnGetSpellTraits(mon,"action")}if(!spellActions?.length&&!actions?.length)return null;if(!actions?.length)return spellActions;if(!spellActions?.length)return actions;const ixLastAttack=actions.findLastIndex((it=>it.entries&&it.entries.length&&typeof it.entries[0]==="string"&&it.entries[0].includes(`{@atk `)));const ixNext=actions.findIndex(((act,ix)=>ix>ixLastAttack&&act.name&&SortUtil.ascSortLower(act.name,"Spellcasting")>=0));actions.splice(ixNext,0,...spellActions);return actions},getSkillsString(renderer,mon){function doSortMapJoinSkillKeys(obj,keys,joinWithOr){const toJoin=keys.sort(SortUtil.ascSort).map((s=>`<span data-mon-skill="${s.toTitleCase()}|${obj[s]}">${renderer.render(`{@skill ${s.toTitleCase()}}`)} ${Renderer.get().render(`{@skillCheck ${s.replace(/ /g,"_")} ${obj[s]}}`)}</span>`));return joinWithOr?toJoin.joinConjunct(", "," or "):toJoin.join(", ")}const skills=doSortMapJoinSkillKeys(mon.skill,Object.keys(mon.skill).filter((k=>k!=="other"&&k!=="special")));if(mon.skill.other||mon.skill.special){const others=mon.skill.other&&mon.skill.other.map((it=>{if(it.oneOf){return`plus one of the following: ${doSortMapJoinSkillKeys(it.oneOf,Object.keys(it.oneOf),true)}`}throw new Error(`Unhandled monster "other" skill properties!`)}));const special=mon.skill.special&&Renderer.get().render(mon.skill.special);return[skills,others,special].filter(Boolean).join(", ")}else return skills},getTokenUrl(mon){return mon.tokenUrl||UrlUtil.link(`${Renderer.get().baseMediaUrls["img"]||Renderer.get().baseUrl}img/${Parser.sourceJsonToAbv(mon.source)}/${Parser.nameToTokenName(mon.name)}.png`)},postProcessFluff(mon,fluff){const cpy=MiscUtil.copy(fluff);const thisGroup=DataUtil.monster.getMetaGroup(mon);const handleGroupProp=(prop,name)=>{if(thisGroup&&thisGroup[prop]){cpy.entries=cpy.entries||[];cpy.entries.push({type:"entries",entries:[{type:"entries",name:name,entries:MiscUtil.copy(thisGroup[prop])}]})}};handleGroupProp("lairActions","Lair Actions");handleGroupProp("regionalEffects","Regional Effects");handleGroupProp("mythicEncounter",`${mon.name} as a Mythic Encounter`);return cpy},getRenderedSenses(senses,isPlainText){if(typeof senses==="string")senses=[senses];if(isPlainText)return senses.join(", ");const reSenses=new RegExp(`(^| |\\()(${["tremorsense","blindsight","truesight","darkvision",...Object.keys(BrewUtil.homebrewMeta?.senses||[]).map((it=>it.escapeRegexp()))].join("|")})(\\)| |$)`,"gi");const senseStr=senses.join(", ").replace(reSenses,((...m)=>`${m[1]}{@sense ${m[2]}}${m[3]}`)).replace(/(^| |\()(blind|blinded)(\)| |$)/gi,((...m)=>`${m[1]}{@condition blinded||${m[2]}}${m[3]}`));return Renderer.get().render(senseStr)},getRenderedLanguages(languages){if(typeof languages==="string")languages=[languages];return languages?languages.map((it=>Renderer.get().render(it))).join(", "):"—"},initParsed(mon){mon._pTypes=mon._pTypes||Parser.monTypeToFullObj(mon.type);if(!mon._pCr){if(Parser.crToNumber(mon.cr)===VeCt.CR_CUSTOM)mon._pCr="Special";else mon._pCr=mon.cr==null?"—":mon.cr.cr||mon.cr}if(!mon._fCr){mon._fCr=[mon._pCr];if(mon.cr){if(mon.cr.lair)mon._fCr.push(mon.cr.lair);if(mon.cr.coven)mon._fCr.push(mon.cr.coven)}}},updateParsed(mon){delete mon._pTypes;delete mon._pCr;delete mon._fCr;Renderer.monster.initParsed(mon)},getCompactRenderedStringLegendaryGroup(legGroup,opts){opts=opts||{};const ent=Renderer.monster.getLegendaryGroupSummaryEntry(legGroup);if(!ent)return"";return`\n\t\t${Renderer.utils.getNameTr(legGroup,{isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t<tr class="text"><td colspan="6">\n\t\t${Renderer.get().setFirstSection(true).render(ent)}\n\t\t</td></tr>\n\t\t${Renderer.utils.getPageTr(legGroup)}`},getLegendaryGroupSummaryEntry(legGroup){if(!legGroup||!legGroup.lairActions&&!legGroup.regionalEffects&&!legGroup.mythicEncounter)return null;return{type:"section",entries:[legGroup.lairActions?{name:"Lair Actions",type:"entries",entries:legGroup.lairActions}:null,legGroup.regionalEffects?{name:"Regional Effects",type:"entries",entries:legGroup.regionalEffects}:null,legGroup.mythicEncounter?{name:"As a Mythic Encounter",type:"entries",entries:legGroup.mythicEncounter}:null].filter(Boolean)}},pGetFluff(mon){return Renderer.utils.pGetFluff({entity:mon,pFnPostProcess:Renderer.monster.postProcessFluff.bind(null,mon),fluffBaseUrl:`data/bestiary/`,fluffProp:"monsterFluff"})},doBindCompactContentHandlers({$content:$content,sourceData:sourceData,toRender:toRender,fnRender:fnRender,page:page,source:source,hash:hash,meta:meta}){$content.find(".mon__btn-scale-cr").click((evt=>{evt.stopPropagation();const win=(evt.view||{}).window;const $btn=$(evt.target).closest("button");const initialCr=toRender._originalCr!=null?toRender._originalCr:toRender.cr.cr||toRender.cr;const lastCr=toRender.cr.cr||toRender.cr;Renderer.monster.getCrScaleTarget({win:win,$btnScale:$btn,initialCr:lastCr,isCompact:true,cbRender:async targetCr=>{const original=await Renderer.hover.pCacheAndGet(page,source,hash);if(Parser.numberToCr(targetCr)===initialCr){toRender=original;sourceData.type="stats";delete sourceData.crNumber}else{toRender=await ScaleCreature.scale(original,targetCr);sourceData.type="statsCreatureScaledCr";sourceData.crNumber=targetCr}$content.empty().append(fnRender(toRender));meta.windowMeta.$windowTitle.text(toRender._displayName||toRender.name);Renderer.monster.doBindCompactContentHandlers({$content:$content,sourceData:sourceData,toRender:toRender,fnRender:fnRender,page:page,source:source,hash:hash,meta:meta})}})}));$content.find(".mon__btn-reset-cr").click((async()=>{toRender=await Renderer.hover.pCacheAndGet(page,source,hash);$content.empty().append(fnRender(toRender));meta.windowMeta.$windowTitle.text(toRender._displayName||toRender.name);Renderer.monster.doBindCompactContentHandlers({$content:$content,sourceData:sourceData,toRender:toRender,fnRender:fnRender,page:page,source:source,hash:hash,meta:meta})}));const $selSummonSpellLevel=$content.find(`[name="mon__sel-summon-spell-level"]`).change((async()=>{const original=await Renderer.hover.pCacheAndGet(page,source,hash);const spellLevel=Number($selSummonSpellLevel.val());if(~spellLevel){toRender=await ScaleSummonCreature.scale(original,spellLevel);sourceData.type="statsCreatureScaledSummonLevel";sourceData.summonLevel=spellLevel}else{toRender=original;sourceData.type="stats";delete sourceData.summonLevel}$content.empty().append(fnRender(toRender));meta.windowMeta.$windowTitle.text(toRender._displayName||toRender.name);Renderer.monster.doBindCompactContentHandlers({$content:$content,sourceData:sourceData,toRender:toRender,fnRender:fnRender,page:page,source:source,hash:hash,meta:meta})})).val(toRender._summonedBySpell_level!=null?`${toRender._summonedBySpell_level}`:"-1")},getCustomHashId(mon){if(!mon._isScaledCr&&!mon._isScaledSummon)return null;const{name:name,source:source,_scaledCr:scaledCr,_scaledSummonLevel:scaledSummonLevel}=mon;return[name,source,scaledCr??"",scaledSummonLevel??""].join("__").toLowerCase()},getUnpackedCustomHashId(customHashId){if(!customHashId)return null;const[,,scaledCr,scaledSummonLevel]=customHashId.split("__").map((it=>it.trim()));if(!scaledCr&&!scaledSummonLevel)return null;return{_scaledCr:scaledCr?Number(scaledCr):null,_scaledSummonLevel:scaledSummonLevel?Number(scaledSummonLevel):null,customHashId:customHashId}}};Renderer.item={LINK_SPECIFIC_TO_GENERIC_DIRECTION:1,_sortProperties(a,b){return SortUtil.ascSort(Renderer.item.propertyMap[a].name,Renderer.item.propertyMap[b].name)},_getPropertiesText(item){if(item.property){let renderedDmg2=false;const renderedProperties=item.property.sort(Renderer.item._sortProperties).map((prop=>{const fullProp=Renderer.item.propertyMap[prop];if(fullProp.template){const toRender=Renderer.utils.applyTemplate(item,fullProp.template,{fnPreApply:(fullMatch,variablePath)=>{if(variablePath==="item.dmg2")renderedDmg2=true},mapCustom:{prop_name:fullProp.name}});return Renderer.get().render(toRender)}else return fullProp.name}));if(!renderedDmg2&&item.dmg2)renderedProperties.unshift(`alt. ${Renderer.item._renderDamage(item.dmg2)}`);return`${item.dmg1&&renderedProperties.length?" - ":""}${renderedProperties.join(", ")}`}else{const parts=[];if(item.dmg2)parts.push(`alt. ${Renderer.item._renderDamage(item.dmg2)}`);if(item.range)parts.push(`range ${item.range} ft.`);return`${item.dmg1&&parts.length?" - ":""}${parts.join(", ")}`}},_getTaggedDamage(dmg){if(!dmg)return"";dmg=dmg.trim();const mDice=/^{@dice ([^}]+)}$/i.exec(dmg);if(mDice)return Renderer.get().render(`{@damage ${mDice[1]}}`);return dmg.replace(RollerUtil.DICE_REGEX,((...m)=>`{@damage ${m[1]}}`))},_renderDamage(dmg){return Renderer.get().render(Renderer.item._getTaggedDamage(dmg))},getDamageAndPropertiesText:function(item){const damageParts=[];if(item.dmg1)damageParts.push(Renderer.item._renderDamage(item.dmg1));if(item.ac!=null){const prefix=item.type==="S"?"+":"";const suffix=item.type==="LA"||item.type==="MA"&&item.dexterityMax===null?" + Dex":item.type==="MA"?" + Dex (max 2)":"";damageParts.push(`AC ${prefix}${item.ac}${suffix}`)}if(item.acSpecial!=null)damageParts.push(item.ac!=null?item.acSpecial:`AC ${item.acSpecial}`);if(item.speed!=null)damageParts.push(`Speed: ${item.speed}`);if(item.carryingCapacity)damageParts.push(`Carrying Capacity: ${item.carryingCapacity} lb.`);if(item.vehSpeed||item.capCargo||item.capPassenger||item.crew||item.crewMin||item.crewMax||item.vehAc||item.vehHp||item.vehDmgThresh||item.travelCost||item.shippingCost){const vehPartUpper=item.vehSpeed?`Speed: ${Parser.numberToVulgar(item.vehSpeed)} mph`:null;const vehPartMiddle=item.capCargo||item.capPassenger?`Carrying Capacity: ${[item.capCargo?`${Parser.numberToFractional(item.capCargo)} ton${item.capCargo===0||item.capCargo>1?"s":""} cargo`:null,item.capPassenger?`${item.capPassenger} passenger${item.capPassenger===1?"":"s"}`:null].filter(Boolean).join(", ")}`:null;const{travelCostFull:travelCostFull,shippingCostFull:shippingCostFull}=Parser.itemVehicleCostsToFull(item);const vehPartLower=[item.crew?`Crew ${item.crew}`:null,item.crewMin&&item.crewMax?`Crew ${item.crewMin}-${item.crewMax}`:null,item.vehAc?`AC ${item.vehAc}`:null,item.vehHp?`HP ${item.vehHp}${item.vehDmgThresh?`, Damage Threshold ${item.vehDmgThresh}`:""}`:null].filter(Boolean).join(", ");damageParts.push([vehPartUpper,vehPartMiddle,travelCostFull?`Personal Travel Cost: ${travelCostFull} per mile per passenger`:null,shippingCostFull?`Shipping Cost: ${shippingCostFull} per 100 pounds per mile`:null,vehPartLower].filter(Boolean).join("<br>"))}const damage=damageParts.join(", ");const damageType=item.dmgType?Parser.dmgTypeToFull(item.dmgType):"";const propertiesTxt=Renderer.item._getPropertiesText(item);return[damage,damageType,propertiesTxt]},getTypeRarityAndAttunementText(item){const typeRarity=[item._typeHtml==="other"?"":item._typeHtml,item.rarity&&Renderer.item.doRenderRarity(item.rarity)?item.rarity:""].filter(Boolean).join(", ");return[item.reqAttune?`${typeRarity} ${item._attunement}`:typeRarity,item._subTypeHtml||"",item.tier?`${item.tier} tier`:""]},getAttunementAndAttunementCatText(item,prop="reqAttune"){let attunement=null;let attunementCat=VeCt.STR_NO_ATTUNEMENT;if(item[prop]!=null&&item[prop]!==false){if(item[prop]===true){attunementCat="Requires Attunement";attunement="(requires attunement)"}else if(item[prop]==="optional"){attunementCat="Attunement Optional";attunement="(attunement optional)"}else if(item[prop].toLowerCase().startsWith("by")){attunementCat="Requires Attunement By...";attunement=`(requires attunement ${item[prop]})`}else{attunementCat="Requires Attunement";attunement=`(requires attunement ${item[prop]})`}}return[attunement,attunementCat]},getHtmlAndTextTypes(item){const typeHtml=[];const typeListText=[];const subTypeHtml=[];let showingBase=false;if(item.wondrous){typeHtml.push(`wondrous item${item.tattoo?` (tattoo)`:""}`);typeListText.push("wondrous item")}if(item.tattoo){typeListText.push("tattoo")}if(item.staff){typeHtml.push("staff");typeListText.push("staff")}if(item.ammo){typeHtml.push(`ammunition`);typeListText.push("ammunition")}if(item.firearm){subTypeHtml.push("firearm");typeListText.push("firearm")}if(item.age){subTypeHtml.push(item.age);typeListText.push(item.age)}if(item.weaponCategory){typeHtml.push(`weapon${item.baseItem?` (${Renderer.get().render(`{@item ${item.baseItem}}`)})`:""}`);subTypeHtml.push(`${item.weaponCategory} weapon`);typeListText.push(`${item.weaponCategory} weapon`);showingBase=true}if(item.staff&&(item.type!=="M"&&item.typeAlt!=="M")){subTypeHtml.push("melee weapon");typeListText.push("melee weapon")}if(item.type)Renderer.item._getHtmlAndTextTypes_type({type:item.type,typeHtml:typeHtml,typeListText:typeListText,subTypeHtml:subTypeHtml,showingBase:showingBase,item:item});if(item.typeAlt)Renderer.item._getHtmlAndTextTypes_type({type:item.typeAlt,typeHtml:typeHtml,typeListText:typeListText,subTypeHtml:subTypeHtml,showingBase:showingBase,item:item});if(item.poison){typeHtml.push(`poison${item.poisonTypes?` (${item.poisonTypes.joinConjunct(", "," or ")})`:""}`);typeListText.push("poison")}return[typeListText,typeHtml.join(", "),subTypeHtml.join(", ")]},_getHtmlAndTextTypes_type({type:type,typeHtml:typeHtml,typeListText:typeListText,subTypeHtml:subTypeHtml,showingBase:showingBase,item:item}){const fullType=Renderer.item.getItemTypeName(type);const isSub=typeListText.some((it=>it.includes("weapon")))&&fullType.includes("weapon")||typeListText.some((it=>it.includes("armor")))&&fullType.includes("armor");if(!showingBase&&!!item.baseItem)(isSub?subTypeHtml:typeHtml).push(`${fullType} (${Renderer.get().render(`{@item ${item.baseItem}}`)})`);else if(type==="S")(isSub?subTypeHtml:typeHtml).push(Renderer.get().render(`armor ({@item shield|phb})`));else(isSub?subTypeHtml:typeHtml).push(fullType);typeListText.push(fullType)},getRenderedEntries(item,{isCompact:isCompact=false,wrappedTypeWhitelist:wrappedTypeWhitelist=null}={}){const renderer=Renderer.get();const handlersName={string:str=>Renderer.item._getRenderedEntries_handlerConvertNamesToItalics.bind(Renderer.item,item,item.name)(str)};const handlersVariantName=item._variantName==null?null:{string:str=>Renderer.item._getRenderedEntries_handlerConvertNamesToItalics.bind(Renderer.item,item,item._variantName)(str)};const renderStack=[];if(item._fullEntries||item.entries&&item.entries.length){const entry=MiscUtil.copy({type:"entries",entries:item._fullEntries||item.entries});let procEntry=Renderer.item._GET_RENDERED_ENTRIES_WALKER.walk(entry,handlersName);if(handlersVariantName)procEntry=Renderer.item._GET_RENDERED_ENTRIES_WALKER.walk(entry,handlersVariantName);if(wrappedTypeWhitelist)procEntry.entries=procEntry.entries.filter((it=>!it?.data?.[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]||wrappedTypeWhitelist.has(it?.data?.[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG])));renderer.recursiveRender(procEntry,renderStack,{depth:1})}if(item._fullAdditionalEntries||item.additionalEntries){const additionEntries=MiscUtil.copy({type:"entries",entries:item._fullAdditionalEntries||item.additionalEntries});let procAdditionEntries=Renderer.item._GET_RENDERED_ENTRIES_WALKER.walk(additionEntries,handlersName);if(handlersVariantName)procAdditionEntries=Renderer.item._GET_RENDERED_ENTRIES_WALKER.walk(additionEntries,handlersVariantName);if(wrappedTypeWhitelist)procAdditionEntries.entries=procAdditionEntries.entries.filter((it=>!it?.data?.[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]||wrappedTypeWhitelist.has(it?.data?.[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG])));renderer.recursiveRender(procAdditionEntries,renderStack,{depth:1})}if(!isCompact&&item.lootTables){renderStack.push(`<div><span class="bold">Found On: </span>${item.lootTables.sort(SortUtil.ascSortLower).map((tbl=>renderer.render(`{@table ${tbl}}`))).join(", ")}</div>`)}return renderStack.join("").trim()},_GET_RENDERED_ENTRIES_WALKER:MiscUtil.getWalker({keyBlacklist:new Set(["caption","type","colLabels","dataCreature","dataSpell","dataItem","dataObject","dataTrapHazard","name"])}),_getRenderedEntries_handlerConvertNamesToItalics(item,baseName,str){if(item._fIsMundane)return str;const stack=[];let depth=0;const tgtLen=baseName.length;const tgtName=item.sentient?baseName:baseName.toLowerCase();const tgtLenPlural=baseName.length+1;const tgtNamePlural=`${tgtName}s`;const tgtNameNoBraces=tgtName.replace(/ \(.*$/,"");const tgtLenNoBraces=tgtNameNoBraces.length;const len=str.length;for(let i=0;i<len;++i){const c=str[i];switch(c){case"{":{if(str[i+1]==="@")depth++;stack.push(c);break}case"}":{if(depth)depth--;stack.push(c);break}default:stack.push(c);break}if(depth)continue;if(stack.slice(-tgtLen).join("")[item.sentient?"toString":"toLowerCase"]()===tgtName){stack.splice(stack.length-tgtLen,tgtLen,`{@i ${stack.slice(-tgtLen).join("")}}`)}else if(stack.slice(-tgtLenPlural).join("")[item.sentient?"toString":"toLowerCase"]()===tgtNamePlural){stack.splice(stack.length-tgtLenPlural,tgtLenPlural,`{@i ${stack.slice(-tgtLenPlural).join("")}}`)}else if(stack.slice(-tgtLenNoBraces).join("")[item.sentient?"toString":"toLowerCase"]()===tgtNameNoBraces){stack.splice(stack.length-tgtLenNoBraces,tgtLenNoBraces,`{@i ${stack.slice(-tgtLenNoBraces).join("")}}`)}}return stack.join("")},getCompactRenderedString(item,opts){opts=opts||{};const[damage,damageType,propertiesTxt]=Renderer.item.getDamageAndPropertiesText(item);const[typeRarityText,subTypeText,tierText]=Renderer.item.getTypeRarityAndAttunementText(item);const hasEntries=item._fullAdditionalEntries&&item._fullAdditionalEntries.length||item._fullEntries&&item._fullEntries.length||item.entries&&item.entries.length;return`\n\t\t${Renderer.utils.getExcludedTr(item,"item",UrlUtil.PG_ITEMS)}\n\t\t${Renderer.utils.getNameTr(item,{page:UrlUtil.PG_ITEMS,isEmbeddedEntity:opts.isEmbeddedEntity})}\n\t\t<tr><td class="rd-item__type-rarity-attunement" colspan="6">${Renderer.item.getTypeRarityAndAttunementHtml(typeRarityText,subTypeText,tierText)}</td></tr>\n\t\t<tr>\n\t\t\t<td colspan="2">${[Parser.itemValueToFullMultiCurrency(item),Parser.itemWeightToFull(item)].filter(Boolean).join(", ").uppercaseFirst()}</td>\n\t\t\t<td class="text-right" colspan="4">${damage} ${damageType} ${propertiesTxt}</td>\n\t\t</tr>\n\t\t${hasEntries?`${Renderer.utils.getDividerTr()}<tr class="text"><td colspan="6" class="text">${Renderer.item.getRenderedEntries(item,{isCompact:true})}</td></tr>`:""}`},getTypeRarityAndAttunementHtml(typeRarityText,subTypeText,tierText){return`<div class="flex-col">\n\t\t\t${typeRarityText||tierText?`<div class="split ${subTypeText?"mb-1":""}">\n\t\t\t\t<div class="italic">${(typeRarityText||"").uppercaseFirst()}</div>\n\t\t\t\t<div class="no-wrap ${tierText?`ml-2`:""}">${(tierText||"").uppercaseFirst()}</div>\n\t\t\t</div>`:""}\n\t\t\t${subTypeText?`<div class="italic">${subTypeText.uppercaseFirst()}</div>`:""}\n\t\t</div>`},_hiddenRarity:new Set(["none","unknown","unknown (magic)","varies"]),doRenderRarity(rarity){return!Renderer.item._hiddenRarity.has(rarity)},_builtLists:{},propertyMap:{},typeMap:{},entryMap:{},_additionalEntriesMap:{},_addProperty(p){if(Renderer.item.propertyMap[p.abbreviation])return;Renderer.item.propertyMap[p.abbreviation]=p.name?MiscUtil.copy(p):{name:p.entries[0].name.toLowerCase(),entries:p.entries,template:p.template}},_addType(t){if(Renderer.item.typeMap[t.abbreviation])return;Renderer.item.typeMap[t.abbreviation]=t.name?MiscUtil.copy(t):{name:t.entries[0].name.toLowerCase(),entries:t.entries}},_addEntry(ent){if(Renderer.item.entryMap[ent.source]?.[ent.name])return;MiscUtil.set(Renderer.item.entryMap,ent.source,ent.name,ent)},_addAdditionalEntries(e){if(Renderer.item._additionalEntriesMap[e.appliesTo])return;Renderer.item._additionalEntriesMap[e.appliesTo]=MiscUtil.copy(e.entries)},async _pAddBrewPropertiesAndTypes(){const brew=await BrewUtil.pAddBrewData();(brew.itemProperty||[]).forEach((p=>Renderer.item._addProperty(p)));(brew.itemType||[]).forEach((t=>Renderer.item._addType(t)));(brew.itemEntry||[]).forEach((t=>Renderer.item._addEntry(t)))},_addBasePropertiesAndTypes(baseItemData){Object.entries(Parser.ITEM_TYPE_JSON_TO_ABV).forEach((([abv,name])=>Renderer.item._addType({abbreviation:abv,name:name})));baseItemData.itemProperty.forEach((p=>Renderer.item._addProperty(p)));baseItemData.itemType.forEach((t=>{if(t.abbreviation==="SHP"){const cpy=MiscUtil.copy(t);cpy.abbreviation="AIR";Renderer.item._addType(cpy)}Renderer.item._addType(t)}));baseItemData.itemEntry.forEach((ent=>Renderer.item._addEntry(ent)));baseItemData.itemTypeAdditionalEntries.forEach((e=>Renderer.item._addAdditionalEntries(e)));baseItemData.baseitem.forEach((it=>it._isBaseItem=true))},_lockBuildList:null,async _pLockBuildList(){while(Renderer.item._lockBuildList)await Renderer.item._lockBuildList.lock;let unlock=null;const lock=new Promise((resolve=>unlock=resolve));Renderer.item._lockBuildList={lock:lock,unlock:unlock}},_unlockBuildList(){const lockMeta=Renderer.item._lockBuildList;if(Renderer.item._lockBuildList){delete Renderer.item._lockBuildList;lockMeta.unlock()}},async pBuildList(opts){await Renderer.item._pLockBuildList();opts=opts||{};opts.isAddGroups=!!opts.isAddGroups;opts.urls=opts.urls||{};const kBlacklist=opts.isBlacklistVariants?"withBlacklist":"withoutBlacklist";if(Renderer.item._builtLists[kBlacklist]){const cached=opts.isAddGroups?Renderer.item._builtLists[kBlacklist]:Renderer.item._builtLists[kBlacklist].filter((it=>!it._isItemGroup));Renderer.item._unlockBuildList();if(opts.fnCallback)return opts.fnCallback(cached);return cached}const itemUrl=opts.urls.items||`${Renderer.get().baseUrl}data/items.json`;const baseItemUrl=opts.urls.baseitems||`${Renderer.get().baseUrl}data/items-base.json`;const magicVariantUrl=opts.urls.magicvariants||`${Renderer.get().baseUrl}data/magicvariants.json`;const itemList=await pLoadItems();const baseItems=await Renderer.item._pGetAndProcBaseItems(await DataUtil.loadJSON(baseItemUrl));const[genericVariants,linkedLootTables]=Renderer.item._getAndProcGenericVariants(await DataUtil.loadJSON(magicVariantUrl),true);Renderer.item._builtLists["genericVariants"]=genericVariants;const specificVariants=Renderer.item._createSpecificVariants(baseItems,genericVariants,{linkedLootTables:linkedLootTables});const allItems=[...itemList,...baseItems,...genericVariants,...specificVariants];Renderer.item._enhanceItems(allItems);Renderer.item._builtLists[kBlacklist]=allItems;const itemsWithRefs=allItems.filter((it=>it.hasRefs));await Renderer.hover.pDoDereferenceNestedAndCache(itemsWithRefs,"itemEntry",UrlUtil.URL_TO_HASH_BUILDER["itemEntry"],{isMutateOriginal:true,entryProp:"entries"});await Renderer.hover.pDoDereferenceNestedAndCache(itemsWithRefs,"itemEntry",UrlUtil.URL_TO_HASH_BUILDER["itemEntry"],{isMutateOriginal:true,entryProp:"_fullEntries"});Renderer.item._unlockBuildList();if(opts.fnCallback)return opts.fnCallback(allItems);return allItems;async function pLoadItems(){const itemData=await DataUtil.loadJSON(itemUrl);const items=itemData.item;itemData.itemGroup.forEach((it=>it._isItemGroup=true));return[...items,...itemData.itemGroup]}},async _pGetAndProcBaseItems(baseItemData){Renderer.item._addBasePropertiesAndTypes(baseItemData);await Renderer.item._pAddBrewPropertiesAndTypes();return baseItemData.baseitem},_getAndProcGenericVariants(variantData,isRespectBlacklist){variantData.variant.forEach(Renderer.item._genericVariants_addInheritedPropertiesToSelf);if(isRespectBlacklist){return[variantData.variant.filter((it=>!ExcludeUtil.isExcluded(UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ITEMS]({name:it.name,source:it.source}),"variant",it.source))),variantData.linkedLootTables]}return[variantData.variant,variantData.linkedLootTables]},_initFullEntries(item){item._fullEntries=item._fullEntries||(item.entries?MiscUtil.copy(item.entries):[])},_initFullAdditionalEntries(item){item._fullAdditionalEntries=item._fullAdditionalEntries||(item.additionalEntries?MiscUtil.copy(item.additionalEntries):[])},_createSpecificVariants(baseItems,genericVariants,opts){opts=opts||{};const genericAndSpecificVariants=[];baseItems.forEach((curBaseItem=>{curBaseItem._category="Basic";if(curBaseItem.entries==null)curBaseItem.entries=[];if(curBaseItem.packContents)return;genericVariants.forEach((curGenericVariant=>{if(!Renderer.item._createSpecificVariants_hasRequiredProperty(curBaseItem,curGenericVariant))return;if(Renderer.item._createSpecificVariants_hasExcludedProperty(curBaseItem,curGenericVariant))return;genericAndSpecificVariants.push(Renderer.item._createSpecificVariants_createSpecificVariant(curBaseItem,curGenericVariant,opts))}))}));return genericAndSpecificVariants},_createSpecificVariants_hasRequiredProperty(baseItem,genericVariant){return genericVariant.requires.some((req=>Object.entries(req).every((([k,v])=>baseItem[k]===v))))},_createSpecificVariants_hasExcludedProperty(baseItem,genericVariant){const curExcludes=genericVariant.excludes||{};return!!Object.keys(curExcludes).find((key=>{if(curExcludes[key]instanceof Array){return baseItem[key]instanceof Array?baseItem[key].find((it=>curExcludes[key].includes(it))):curExcludes[key].includes(baseItem[key])}return baseItem[key]instanceof Array?baseItem[key].find((it=>curExcludes[key]===it)):curExcludes[key]===baseItem[key]}))},_createSpecificVariants_createSpecificVariant(baseItem,genericVariant,opts){const inherits=genericVariant.inherits;const specificVariant=MiscUtil.copy(baseItem);delete specificVariant._isBaseItem;specificVariant._isEnhanced=false;delete specificVariant._fullEntries;specificVariant._baseName=baseItem.name;specificVariant._baseSrd=baseItem.srd;if(baseItem.source!==inherits.source)specificVariant._baseSource=baseItem.source;specificVariant._variantName=genericVariant.name;delete specificVariant.value;delete specificVariant.srd;delete specificVariant.page;specificVariant._category="Specific Variant";Object.keys(inherits).forEach((inheritedProperty=>{switch(inheritedProperty){case"namePrefix":specificVariant.name=`${inherits.namePrefix}${specificVariant.name}`;break;case"nameSuffix":specificVariant.name=`${specificVariant.name}${inherits.nameSuffix}`;break;case"entries":{Renderer.item._initFullEntries(specificVariant);const appliedPropertyEntries=Renderer.applyAllProperties(inherits.entries,Renderer.item._getInjectableProps(baseItem,inherits));appliedPropertyEntries.forEach(((ent,i)=>specificVariant._fullEntries.splice(i,0,ent)));break}case"nameRemove":{specificVariant.name=specificVariant.name.replace(new RegExp(inherits[inheritedProperty].escapeRegexp(),"g"),"");break}case"weightExpression":case"valueExpression":{const exp=Renderer.item._createSpecificVariants_evaluateExpression(baseItem,specificVariant,inherits,inheritedProperty);const result=Renderer.dice.parseRandomise2(exp);if(result!=null){switch(inheritedProperty){case"weightExpression":specificVariant.weight=result;break;case"valueExpression":specificVariant.value=result;break}}break}case"barding":{specificVariant.bardingType=baseItem.type;break}default:specificVariant[inheritedProperty]=inherits[inheritedProperty]}}));if(~Renderer.item.LINK_SPECIFIC_TO_GENERIC_DIRECTION){genericVariant.variants=genericVariant.variants||[];genericVariant.variants.push({base:baseItem,specificVariant:specificVariant})}if(!~Renderer.item.LINK_SPECIFIC_TO_GENERIC_DIRECTION)specificVariant.genericVariant=genericVariant;if(opts.linkedLootTables&&opts.linkedLootTables[specificVariant.source]&&opts.linkedLootTables[specificVariant.source][specificVariant.name]){(specificVariant.lootTables=specificVariant.lootTables||[]).push(...opts.linkedLootTables[specificVariant.source][specificVariant.name])}if(baseItem.source!==SRC_PHB&&baseItem.source!==SRC_DMG){Renderer.item._initFullEntries(specificVariant);specificVariant._fullEntries.unshift({type:"wrapper",wrapped:`{@note The {@item ${baseItem.name}|${baseItem.source}|base item} can be found in ${Parser.sourceJsonToFull(baseItem.source)}${baseItem.page?`, page ${baseItem.page}`:""}.}`,data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"note"}})}return specificVariant},_createSpecificVariants_evaluateExpression(baseItem,specificVariant,inherits,inheritedProperty){return inherits[inheritedProperty].replace(/\[\[([^\]]+)]]/g,((...m)=>{const propPath=m[1].split(".");return propPath[0]==="item"?MiscUtil.get(specificVariant,...propPath.slice(1)):propPath[0]==="baseItem"?MiscUtil.get(baseItem,...propPath.slice(1)):MiscUtil.get(specificVariant,...propPath)}))},_enhanceItems(allItems){allItems.forEach((item=>Renderer.item.enhanceItem(item)));return allItems},async pGetGenericAndSpecificVariants(genericVariants,opts){opts=opts||{};let baseItems;if(opts.baseItems){baseItems=opts.baseItems}else{opts.baseItemsUrl=opts.baseItemsUrl||`${Renderer.get().baseUrl}data/items-base.json`;const baseItemData=await DataUtil.loadJSON(opts.baseItemsUrl);Renderer.item._addBasePropertiesAndTypes(baseItemData);baseItems=[...baseItemData.baseitem,...opts.additionalBaseItems||[]]}await Renderer.item._pAddBrewPropertiesAndTypes();genericVariants.forEach(Renderer.item._genericVariants_addInheritedPropertiesToSelf);const specificVariants=Renderer.item._createSpecificVariants(baseItems,genericVariants);const outSpecificVariants=Renderer.item._enhanceItems(specificVariants);if(opts.isSpecificVariantsOnly)return outSpecificVariants;const outGenericVariants=Renderer.item._enhanceItems(genericVariants);return[...outGenericVariants,...outSpecificVariants]},_getInjectableProps(baseItem,inherits){return{baseName:baseItem.name,dmgType:baseItem.dmgType?Parser.dmgTypeToFull(baseItem.dmgType):null,bonusAc:inherits.bonusAc,bonusWeapon:inherits.bonusWeapon,bonusWeaponAttack:inherits.bonusWeaponAttack,bonusWeaponDamage:inherits.bonusWeaponDamage,bonusSpellAttack:inherits.bonusSpellAttack,bonusSpellSaveDc:inherits.bonusSpellSaveDc,bonusSavingThrow:inherits.bonusSavingThrow}},_INHERITED_PROPS_BLACKLIST:new Set(["entries","namePrefix","nameSuffix"]),_genericVariants_addInheritedPropertiesToSelf(genericVariant){if(genericVariant._isInherited)return;genericVariant._isInherited=true;for(const prop in genericVariant.inherits){if(Renderer.item._INHERITED_PROPS_BLACKLIST.has(prop))continue;const val=genericVariant.inherits[prop];if(val==null)delete genericVariant[prop];else if(genericVariant[prop]){if(genericVariant[prop]instanceof Array&&val instanceof Array)genericVariant[prop]=MiscUtil.copy(genericVariant[prop]).concat(val);else genericVariant[prop]=val}else genericVariant[prop]=genericVariant.inherits[prop]}if(!genericVariant.entries&&genericVariant.inherits.entries){genericVariant.entries=MiscUtil.copy(Renderer.applyAllProperties(genericVariant.inherits.entries,genericVariant.inherits))}if(genericVariant.requires.armor)genericVariant.armor=genericVariant.requires.armor},getItemTypeName(t){const fullType=Renderer.item.typeMap[t];if(!fullType)throw new Error(`Item type ${t} not found. You probably meant to load the property/type reference first; see \`Renderer.item.populatePropertyAndTypeReference()\`.`);return fullType.name||t},enhanceItem(item){if(item._isEnhanced)return;item._isEnhanced=true;if(item.noDisplay)return;if(item.type==="GV")item._category="Generic Variant";if(item._category==null)item._category="Other";if(item.entries==null)item.entries=[];if(item.type&&Renderer.item.typeMap[item.type]&&Renderer.item.typeMap[item.type].entries){Renderer.item._initFullEntries(item);Renderer.item.typeMap[item.type].entries.forEach((e=>item._fullEntries.push({type:"wrapper",wrapped:e,data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})))}if(item.property){item.property.forEach((p=>{if(!Renderer.item.propertyMap[p])throw new Error(`Item property ${p} not found. You probably meant to load the property/type reference first; see \`Renderer.item.populatePropertyAndTypeReference()\`.`);if(Renderer.item.propertyMap[p].entries){Renderer.item._initFullEntries(item);Renderer.item.propertyMap[p].entries.forEach((e=>item._fullEntries.push({type:"wrapper",wrapped:e,data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"property"}})))}}))}if(item.type==="LA"||item.type==="MA"||item.type==="HA"){if(item.stealth){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"The wearer has disadvantage on Dexterity ({@skill Stealth}) checks.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.type==="HA"&&item.strength){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:`If the wearer has a Strength score lower than ${item.strength}, their speed is reduced by 10 feet.`,data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}}if(item.type==="SCF"){if(item._isItemGroup){if(item.scfType==="arcane"&&item.source!==SRC_ERLW){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"An arcane focus is a special item—an orb, a crystal, a rod, a specially constructed staff, a wand-like length of wood, or some similar item—designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.scfType==="druid"){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"A druidic focus might be a sprig of mistletoe or holly, a wand or scepter made of yew or another special wood, a staff drawn whole out of a living tree, or a totem object incorporating feathers, fur, bones, and teeth from sacred animals. A druid can use such an object as a spellcasting focus.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.scfType==="holy"){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"A holy symbol is a representation of a god or pantheon. It might be an amulet depicting a symbol representing a deity, the same symbol carefully engraved or inlaid as an emblem on a shield, or a tiny box holding a fragment of a sacred relic. A cleric or paladin can use a holy symbol as a spellcasting focus. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}}else{if(item.scfType==="arcane"){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"An arcane focus is a special item designed to channel the power of arcane spells. A sorcerer, warlock, or wizard can use such an item as a spellcasting focus.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.scfType==="druid"){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"A druid can use this object as a spellcasting focus.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.scfType==="holy"){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"A holy symbol is a representation of a god or pantheon.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}});item._fullEntries.push({type:"wrapper",wrapped:"A cleric or paladin can use a holy symbol as a spellcasting focus. To use the symbol in this way, the caster must hold it in hand, wear it visibly, or bear it on a shield.",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}}}if(item.type==="T"||item.type==="AT"||item.type==="INS"||item.type==="GS"){Renderer.item._initFullAdditionalEntries(item);item._fullAdditionalEntries.push({type:"wrapper",wrapped:{type:"hr"},data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}});item._fullAdditionalEntries.push({type:"wrapper",wrapped:`{@note See the {@variantrule Tool Proficiencies|XGE} entry for more information.}`,data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}if(item.type==="INS"||item.type==="GS")item.additionalSources=item.additionalSources||[];if(item.type==="INS"){if(!item.additionalSources.find((it=>it.source==="XGE"&&it.page===83)))item.additionalSources.push({source:"XGE",page:83})}else if(item.type==="GS"){if(!item.additionalSources.find((it=>it.source==="XGE"&&it.page===81)))item.additionalSources.push({source:"XGE",page:81})}if(item.type&&Renderer.item._additionalEntriesMap[item.type]){Renderer.item._initFullAdditionalEntries(item);const additional=Renderer.item._additionalEntriesMap[item.type];item._fullAdditionalEntries.push({type:"wrapper",wrapped:{type:"entries",entries:additional},data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"type"}})}const[typeListText,typeHtml,subTypeHtml]=Renderer.item.getHtmlAndTextTypes(item);item._typeListText=typeListText;item._typeHtml=typeHtml;item._subTypeHtml=subTypeHtml;const[attune,attuneCat]=Renderer.item.getAttunementAndAttunementCatText(item);item._attunement=attune;item._attunementCategory=attuneCat;if(item.reqAttuneAlt){const[attuneAlt,attuneCatAlt]=Renderer.item.getAttunementAndAttunementCatText(item,"reqAttuneAlt");item._attunementCategory=[attuneCat,attuneCatAlt]}if(item._isItemGroup){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:"Multiple variations of this item exist, as listed below:",data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"variant"}});item._fullEntries.push({type:"wrapper",wrapped:{type:"list",items:item.items.map((it=>typeof it==="string"?`{@item ${it}}`:`{@item ${it.name}|${it.source}}`))},data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"variant"}})}if(item.variants&&item.variants.length){Renderer.item._initFullEntries(item);item._fullEntries.push({type:"wrapper",wrapped:{type:"entries",name:"Base items",entries:["This item variant can be applied to the following base items:",{type:"list",items:item.variants.map((({base:base,specificVariant:specificVariant})=>`{@item ${base.name}|${base.source}} ({@item ${specificVariant.name}|${specificVariant.source}})`))}]},data:{[VeCt.ENTDATA_ITEM_MERGED_ENTRY_TAG]:"variant"}})}},unenhanceItem(item){if(!item._isEnhanced)return;delete item._isEnhanced;delete item._fullEntries},async pGetItemsFromHomebrew(homebrew){(homebrew.itemProperty||[]).forEach((p=>Renderer.item._addProperty(p)));(homebrew.itemType||[]).forEach((t=>Renderer.item._addType(t)));(homebrew.itemEntry||[]).forEach((it=>Renderer.item._addEntry(it)));let items=[...homebrew.baseitem||[],...homebrew.item||[]];if(homebrew.itemGroup){const itemGroups=MiscUtil.copy(homebrew.itemGroup);itemGroups.forEach((it=>it._isItemGroup=true));items=[...items,...itemGroups]}Renderer.item._enhanceItems(items);let isReEnhanceVariants=false;if(homebrew.baseitem&&homebrew.baseitem.length){isReEnhanceVariants=true;if(!Renderer.item._builtLists["genericVariants"])await Renderer.item.pBuildList();const variants=await Renderer.item.pGetGenericAndSpecificVariants(Renderer.item._builtLists["genericVariants"],{baseItems:homebrew.baseitem||[],isSpecificVariantsOnly:true});items=[...items,...variants]}if(homebrew.variant&&homebrew.variant.length){isReEnhanceVariants=true;const variants=await Renderer.item.pGetGenericAndSpecificVariants(homebrew.variant,{additionalBaseItems:homebrew.baseitem||[]});items=[...items,...variants]}if(isReEnhanceVariants&&Renderer.item._builtLists["genericVariants"]){Renderer.item._builtLists["genericVariants"].forEach((item=>{item.variants.sort(((a,b)=>SortUtil.ascSortLower(a.base.name,b.base.name)||SortUtil.ascSortLower(a.base.source,b.base.source)));Renderer.item.unenhanceItem(item);Renderer.item.enhanceItem(item)}))}return items},modifierPostToPre(item){const m=/^(.*)(?:,)? (\+\d+)$/.exec(item.name);if(m)return Object.assign(MiscUtil.copy(item),{name:`${m[2]} ${m[1]}`});else return null},_isRefPopulated:false,populatePropertyAndTypeReference:()=>{if(Renderer.item._isRefPopulated)return Promise.resolve();return new Promise(((resolve,reject)=>{DataUtil.loadJSON(`${Renderer.get().baseUrl}data/items-base.json`).then((data=>{if(Renderer.item._isRefPopulated){resolve()}else{try{Object.entries(Parser.ITEM_TYPE_JSON_TO_ABV).forEach((([abv,name])=>Renderer.item._addType({abbreviation:abv,name:name})));data.itemProperty.forEach((p=>Renderer.item._addProperty(p)));data.itemType.forEach((t=>Renderer.item._addType(t)));data.itemEntry.forEach((it=>Renderer.item._addEntry(it)));data.itemTypeAdditionalEntries.forEach((e=>Renderer.item._addAdditionalEntries(e)));Renderer.item._pAddBrewPropertiesAndTypes().then((()=>{Renderer.item._isRefPopulated=true;resolve()}))}catch(e){reject(e)}}}))}))},async getAllIndexableItems(rawVariants,rawBaseItems){Renderer.item.LINK_SPECIFIC_TO_GENERIC_DIRECTION=-1;const basicItems=await Renderer.item._pGetAndProcBaseItems(rawBaseItems);const[genericVariants,linkedLootTables]=await Renderer.item._getAndProcGenericVariants(rawVariants);const specificVariants=Renderer.item._createSpecificVariants(basicItems,genericVariants,{linkedLootTables:linkedLootTables});const revNames=[];[...genericVariants,...specificVariants].forEach((item=>{if(item.variants)delete item.variants;const revName=Renderer.item.modifierPostToPre(MiscUtil.copy(item));if(revName)revNames.push(revName)}));specificVariants.push(...revNames);return specificVariants},isMundane(item){return item.rarity==="none"||item.rarity==="unknown"||item._category==="basic"},pGetFluff(item){return Renderer.utils.pGetFluff({entity:item,fluffProp:"itemFluff",fluffUrl:`data/fluff-items.json`})}};Renderer.psionic={enhanceMode:mode=>{if(!mode.enhanced){mode.name=[mode.name,getModeSuffix(mode,false)].filter(Boolean).join(" ");if(mode.submodes){mode.submodes.forEach((sm=>{sm.name=[sm.name,getModeSuffix(sm,true)].filter(Boolean).join(" ")}))}mode.enhanced=true}function getModeSuffix(mode,subMode){subMode=subMode==null?false:subMode;const modeTitleArray=[];const bracketPart=getModeTitleBracketPart();if(bracketPart!=null)modeTitleArray.push(bracketPart);if(subMode)return`${modeTitleArray.join(" ")}`;else return`${modeTitleArray.join(" ")}`;function getModeTitleBracketPart(){const modeTitleBracketArray=[];if(mode.cost)modeTitleBracketArray.push(getModeTitleCost());if(mode.concentration)modeTitleBracketArray.push(getModeTitleConcentration());if(modeTitleBracketArray.length===0)return null;return`(${modeTitleBracketArray.join("; ")})`;function getModeTitleCost(){const costMin=mode.cost.min;const costMax=mode.cost.max;const costString=costMin===costMax?costMin:`${costMin}-${costMax}`;return`${costString} psi`}function getModeTitleConcentration(){return`conc., ${mode.concentration.duration} ${mode.concentration.unit}.`}}}},getBodyText(psi,renderer){const renderStack=[];if(psi.entries)Renderer.get().recursiveRender({entries:psi.entries,type:"entries"},renderStack);if(psi.focus)renderStack.push(Renderer.psionic.getFocusString(psi,renderer));if(psi.modes)renderStack.push(...psi.modes.map((mode=>Renderer.psionic.getModeString(mode,renderer))));return renderStack.join("")},getDescriptionString:(psionic,renderer)=>`<p>${renderer.render({type:"inline",entries:[psionic.description]})}</p>`,getFocusString:(psionic,renderer)=>`<p><span class="psi-focus-title">Psychic Focus.</span> ${renderer.render({type:"inline",entries:[psionic.focus]})}</p>`,getModeString:(mode,renderer)=>{Renderer.psionic.enhanceMode(mode);const renderStack=[];renderer.recursiveRender(mode,renderStack,{depth:2});const modeString=renderStack.join("");if(mode.submodes==null)return modeString;const subModeString=Renderer.psionic.getSubModeString(mode.submodes,renderer);return`${modeString}${subModeString}`},getSubModeString(subModes,renderer){const fauxEntry={type:"list",style:"list-hang-notitle",items:[]};for(let i=0;i<subModes.length;++i){fauxEntry.items.push({type:"item",name:subModes[i].name,entry:subModes[i].entries.join("<br>")})}const renderStack=[];renderer.recursiveRender(fauxEntry,renderStack,{depth:2});return renderStack.join("")},getTypeOrderString(psi){const typeMeta=Parser.psiTypeToMeta(psi.type);return typeMeta.hasOrder?typeMeta.isAltDisplay?`${typeMeta.full} (${psi.order})`:`${psi.order} ${typeMeta.full}`:typeMeta.full},getCompactRenderedString(psi){return`\n\t\t\t${Renderer.utils.getExcludedTr(psi,"psionic",UrlUtil.PG_PSIONICS)}\n\t\t\t${Renderer.utils.getNameTr(psi,{page:UrlUtil.PG_PSIONICS})}\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t<p><i>${Renderer.psionic.getTypeOrderString(psi)}</i></p>\n\t\t\t${Renderer.psionic.getBodyText(psi,Renderer.get().setFirstSection(true))}\n\t\t\t</td></tr>\n\t\t`}};Renderer.rule={getCompactRenderedString(rule){return`\n\t\t\t<tr><td colspan="6">\n\t\t\t${Renderer.get().setFirstSection(true).render(rule)}\n\t\t\t</td></tr>\n\t\t`}};Renderer.variantrule={getCompactRenderedString(rule){const cpy=MiscUtil.copy(rule);delete cpy.name;return`\n\t\t\t${Renderer.utils.getExcludedTr(rule,"variantrule",UrlUtil.PG_VARIANTRULES)}\n\t\t\t${Renderer.utils.getNameTr(rule,{page:UrlUtil.PG_VARIANTRULES})}\n\t\t\t<tr><td colspan="6">\n\t\t\t${Renderer.get().setFirstSection(true).render(cpy)}\n\t\t\t</td></tr>\n\t\t`}};Renderer.table={getCompactRenderedString(it){it.type=it.type||"table";const cpy=MiscUtil.copy(it);delete cpy.name;return`\n\t\t\t${Renderer.utils.getExcludedTr(it,"table",UrlUtil.PG_TABLES)}\n\t\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_TABLES})}\n\t\t\t<tr><td colspan="6">\n\t\t\t${Renderer.get().setFirstSection(true).render(it)}\n\t\t\t</td></tr>\n\t\t`}};Renderer.vehicle={getCompactRenderedString(veh,opts){return Renderer.vehicle.getRenderedString(veh,{...opts,isCompact:true})},getRenderedString(veh,opts){opts=opts||{};if(veh.upgradeType)return Renderer.vehicle._getRenderedString_upgrade(veh,opts);veh.vehicleType=veh.vehicleType||"SHIP";switch(veh.vehicleType){case"SHIP":return Renderer.vehicle._getRenderedString_ship(veh,opts);case"INFWAR":return Renderer.vehicle._getRenderedString_infwar(veh,opts);case"CREATURE":return Renderer.monster.getCompactRenderedString(veh,null,{...opts,isHideLanguages:true,isHideSenses:true,isCompact:false,page:UrlUtil.PG_VEHICLES});case"OBJECT":return Renderer.object.getCompactRenderedString(veh,{...opts,isCompact:false,page:UrlUtil.PG_VEHICLES});default:throw new Error(`Unhandled vehicle type "${veh.vehicleType}"`)}},getUpgradeSummary(it){return[it.upgradeType?it.upgradeType.map((t=>Parser.vehicleTypeToFull(t))):null,it.prerequisite?Renderer.utils.getPrerequisiteHtml(it.prerequisite):""].filter(Boolean).join(", ")},_getRenderedString_upgrade(it,opts){return $$`${Renderer.utils.getExcludedTr(it,"vehicleUpgrade",UrlUtil.PG_VEHICLES)}
			${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_VEHICLES})}
			<tr><td colspan="6"><i>${Renderer.vehicle.getUpgradeSummary(it)}</i></td></tr>
			<tr><td class="divider" colspan="6"><div></div></td></tr>
			<tr><td colspan="6">${Renderer.get().render({entries:it.entries},1)}</td></tr>`},ship:{getLocomotionEntries(loc){return{type:"list",style:"list-hang-notitle",items:[{type:"item",name:`Locomotion (${loc.mode})`,entries:loc.entries}]}},getSpeedEntries(spd){return{type:"list",style:"list-hang-notitle",items:[{type:"item",name:`Speed (${spd.mode})`,entries:spd.entries}]}},getActionPart_(renderer,veh){return renderer.render({entries:veh.action})},getSectionTitle_(title){return`<tr class="mon__stat-header-underline"><td colspan="6"><span>${title}</span></td></tr>`},getSectionHpPart_(renderer,sect,each){if(!sect.ac&&!sect.hp)return"";return`\n\t\t\t\t<div><b>Armor Class</b> ${sect.ac}</div>\n\t\t\t\t<div><b>Hit Points</b> ${sect.hp}${each?` each`:""}${sect.dt?` (damage threshold ${sect.dt})`:""}${sect.hpNote?`; ${sect.hpNote}`:""}</div>\n\t\t\t`},getControlSection_(renderer,control){if(!control)return"";return`\n\t\t\t\t<tr class="mon__stat-header-underline"><td colspan="6"><span>Control: ${control.name}</span></td></tr>\n\t\t\t\t<tr><td colspan="6">\n\t\t\t\t${Renderer.vehicle.ship.getSectionHpPart_(renderer,control)}\n\t\t\t\t<div>${renderer.render({entries:control.entries})}</div>\n\t\t\t\t</td></tr>\n\t\t\t`},getMovementSection_(renderer,move){if(!move)return"";function getLocomotionSection(loc){const asList=Renderer.vehicle.ship.getLocomotionEntries(loc);return`<div>${renderer.render(asList)}</div>`}function getSpeedSection(spd){const asList=Renderer.vehicle.ship.getSpeedEntries(spd);return`<div>${renderer.render(asList)}</div>`}return`\n\t\t\t\t<tr class="mon__stat-header-underline"><td colspan="6"><span>${move.isControl?`Control and `:""}Movement: ${move.name}</span></td></tr>\n\t\t\t\t<tr><td colspan="6">\n\t\t\t\t${Renderer.vehicle.ship.getSectionHpPart_(renderer,move)}\n\t\t\t\t${(move.locomotion||[]).map(getLocomotionSection)}\n\t\t\t\t${(move.speed||[]).map(getSpeedSection)}\n\t\t\t\t</td></tr>\n\t\t\t`},getWeaponSection_(renderer,weap){return`\n\t\t\t\t<tr class="mon__stat-header-underline"><td colspan="6"><span>Weapons: ${weap.name}${weap.count?` (${weap.count})`:""}</span></td></tr>\n\t\t\t\t<tr><td colspan="6">\n\t\t\t\t${Renderer.vehicle.ship.getSectionHpPart_(renderer,weap,!!weap.count)}\n\t\t\t\t${renderer.render({entries:weap.entries})}\n\t\t\t\t</td></tr>\n\t\t\t`},getOtherSection_(renderer,oth){return`\n\t\t\t\t<tr class="mon__stat-header-underline"><td colspan="6"><span>${oth.name}</span></td></tr>\n\t\t\t\t<tr><td colspan="6">\n\t\t\t\t${Renderer.vehicle.ship.getSectionHpPart_(renderer,oth)}\n\t\t\t\t${renderer.render({entries:oth.entries})}\n\t\t\t\t</td></tr>\n\t\t\t`},getSizeDimensionsSection_(renderer,veh){return`<tr class="text"><td colspan="6"><i>${Parser.sizeAbvToFull(veh.size)} vehicle${veh.dimensions?` (${veh.dimensions.join(" by ")})`:""}</i><br></td></tr>`},getCrewCargoPageSection_(renderer,veh){if(veh.capCrew==null&&veh.capCargo==null&&veh.pace==null)return"";return`<tr class="text"><td colspan="6">\n\t\t\t\t${veh.capCrew!=null?`<div><b>Creature Capacity</b> ${Renderer.vehicle.getShipCreatureCapacity(veh)}</div>`:""}\n\t\t\t\t${veh.capCargo!=null?`<div><b>Cargo Capacity</b> ${Renderer.vehicle.getShipCargoCapacity(veh)}</div>`:""}\n\t\t\t\t${veh.pace!=null?`<div><b>Travel Pace</b> ${veh.pace} miles per hour (${veh.pace*24} miles per day)</div>\n\t\t\t\t<div class="ve-muted ve-small help-subtle ml-2" title="Based on &quot;Special Travel Pace,&quot; DMG p242">[<b>Speed</b> ${veh.pace*10} ft.]</div>`:""}\n\t\t\t</td></tr>`}},_getAbilitySection(veh){return Parser.ABIL_ABVS.some((it=>veh[it]!=null))?`<tr><td colspan="6">\n\t\t\t<table class="summary stripe-even-table">\n\t\t\t\t<tr>\n\t\t\t\t\t<th class="col-2 text-center">STR</th>\n\t\t\t\t\t<th class="col-2 text-center">DEX</th>\n\t\t\t\t\t<th class="col-2 text-center">CON</th>\n\t\t\t\t\t<th class="col-2 text-center">INT</th>\n\t\t\t\t\t<th class="col-2 text-center">WIS</th>\n\t\t\t\t\t<th class="col-2 text-center">CHA</th>\n\t\t\t\t</tr>\n\t\t\t\t<tr>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"str")}</td>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"dex")}</td>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"con")}</td>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"int")}</td>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"wis")}</td>\n\t\t\t\t\t<td class="text-center">${Renderer.utils.getAbilityRoller(veh,"cha")}</td>\n\t\t\t\t</tr>\n\t\t\t</table>\n\t\t</td></tr>`:""},_getResImmVulnSection(veh){if(!veh.immune&&!veh.conditionImmune)return"";return`<tr class="text"><td colspan="6">\n\t\t\t${veh.immune?`<div><b>Damage Immunities</b> ${Parser.getFullImmRes(veh.immune)}</div>`:""}\n\t\t\t${veh.conditionImmune?`<div><b>Condition Immunities</b> ${Parser.getFullCondImm(veh.conditionImmune)}</div>`:""}\n\t\t</td></tr>`},_getTraitSection(renderer,veh){return veh.trait?`<tr class="mon__stat-header-underline"><td colspan="6"><span>Traits</span></td></tr>\n\t\t<tr><td colspan="6"><div class="border"></div></td></tr>\n\t\t<tr class="text"><td colspan="6">\n\t\t${Renderer.monster.getOrderedTraits(veh,renderer).map((it=>it.rendered||renderer.render(it,2))).join("")}\n\t\t</td></tr>`:""},_getRenderedString_ship(veh,opts){const renderer=Renderer.get();const otherSectionActions=(veh.other||[]).filter((it=>it.name==="Actions"));const otherSectionOthers=(veh.other||[]).filter((it=>it.name!=="Actions"));const hasToken=veh.tokenUrl||veh.hasToken;const extraThClasses=!opts.isCompact&&hasToken?["veh__name--token"]:null;return`\n\t\t\t${Renderer.utils.getExcludedTr(veh,"vehicle",UrlUtil.PG_VEHICLES)}\n\t\t\t${Renderer.utils.getNameTr(veh,{extraThClasses:extraThClasses,page:UrlUtil.PG_VEHICLES})}\n\t\t\t${Renderer.vehicle.ship.getSizeDimensionsSection_(renderer,veh)}\n\t\t\t${Renderer.vehicle.ship.getCrewCargoPageSection_(renderer,veh)}\n\t\t\t${Renderer.vehicle._getAbilitySection(veh)}\n\t\t\t${Renderer.vehicle._getResImmVulnSection(veh)}\n\t\t\t${veh.action?Renderer.vehicle.ship.getSectionTitle_("Actions"):""}\n\t\t\t${veh.action?`<tr><td colspan="6">${Renderer.vehicle.ship.getActionPart_(renderer,veh)}</td></tr>`:""}\n\t\t\t${otherSectionActions.map(Renderer.vehicle.ship.getOtherSection_.bind(this,renderer)).join("")}\n\t\t\t${veh.hull?`${Renderer.vehicle.ship.getSectionTitle_("Hull")}\n\t\t\t<tr><td colspan="6">\n\t\t\t${Renderer.vehicle.ship.getSectionHpPart_(renderer,veh.hull)}\n\t\t\t</td></tr>`:""}\n\t\t\t${Renderer.vehicle._getTraitSection(renderer,veh)}\n\t\t\t${(veh.control||[]).map(Renderer.vehicle.ship.getControlSection_.bind(this,renderer)).join("")}\n\t\t\t${(veh.movement||[]).map(Renderer.vehicle.ship.getMovementSection_.bind(this,renderer)).join("")}\n\t\t\t${(veh.weapon||[]).map(Renderer.vehicle.ship.getWeaponSection_.bind(this,renderer)).join("")}\n\t\t\t${otherSectionOthers.map(Renderer.vehicle.ship.getOtherSection_.bind(this,renderer)).join("")}\n\t\t`},getShipCreatureCapacity(veh){return`${veh.capCrew} crew${veh.capPassenger?`, ${veh.capPassenger} passenger${veh.capPassenger===1?"":"s"}`:""}`},getShipCargoCapacity(veh){return typeof veh.capCargo==="string"?veh.capCargo:`${veh.capCargo} ton${veh.capCargo===1?"":"s"}`},_getRenderedString_infwar(veh,opts){const renderer=Renderer.get();const dexMod=Parser.getAbilityModNumber(veh.dex);const hasToken=veh.tokenUrl||veh.hasToken;const extraThClasses=!opts.isCompact&&hasToken?["veh__name--token"]:null;return`\n\t\t\t${Renderer.utils.getExcludedTr(veh,"vehicle",UrlUtil.PG_VEHICLES)}\n\t\t\t${Renderer.utils.getNameTr(veh,{extraThClasses:extraThClasses,page:UrlUtil.PG_VEHICLES})}\n\t\t\t<tr class="text"><td colspan="6"><i>${Parser.sizeAbvToFull(veh.size)} vehicle (${veh.weight.toLocaleString()} lb.)</i><br></td></tr>\n\t\t\t<tr class="text"><td colspan="6">\n\t\t\t\t<div><b>Creature Capacity</b> ${Renderer.vehicle.getInfwarCreatureCapacity(veh)}</div>\n\t\t\t\t<div><b>Cargo Capacity</b> ${Parser.weightToFull(veh.capCargo)}</div>\n\t\t\t\t<div><b>Armor Class</b> ${dexMod===0?`19`:`${19+dexMod} (19 while motionless)`}</div>\n\t\t\t\t<div><b>Hit Points</b> ${veh.hp.hp} (damage threshold ${veh.hp.dt}, mishap threshold ${veh.hp.mt})</div>\n\t\t\t\t<div><b>Speed</b> ${veh.speed} ft.</div>\n\t\t\t\t<div class="ve-muted ve-small help-subtle ml-2" title="Based on &quot;Special Travel Pace,&quot; DMG p242">[<b>Travel Pace</b> ${Math.floor(veh.speed/10)} miles per hour (${Math.floor(veh.speed*24/10)} miles per day)]</div>\n\t\t\t</td></tr>\n\t\t\t${Renderer.vehicle._getAbilitySection(veh)}\n\t\t\t${Renderer.vehicle._getResImmVulnSection(veh)}\n\t\t\t${Renderer.vehicle._getTraitSection(renderer,veh)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(veh,renderer,"Action Stations","actionStation",2)}\n\t\t\t${Renderer.monster.getCompactRenderedStringSection(veh,renderer,"Reactions","reaction",2)}\n\t\t`},getInfwarCreatureCapacity(veh){return`${veh.capCreature} Medium creatures`},pGetFluff(veh){return Renderer.utils.pGetFluff({entity:veh,fluffProp:"vehicleFluff",fluffUrl:`data/fluff-vehicles.json`})},getTokenUrl(veh){return veh.tokenUrl||UrlUtil.link(`${Renderer.get().baseMediaUrls["img"]||Renderer.get().baseUrl}img/vehicles/tokens/${Parser.sourceJsonToAbv(veh.source)}/${Parser.nameToTokenName(veh.name)}.png`)}};Renderer.action={getCompactRenderedString(it){const cpy=MiscUtil.copy(it);delete cpy.name;return`${Renderer.utils.getExcludedTr(it,"action",UrlUtil.PG_ACTIONS)}\n\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_ACTIONS})}\n\t\t<tr><td colspan="6">${Renderer.get().setFirstSection(true).render(cpy)}</td></tr>`}};Renderer.language={getCompactRenderedString(it){return Renderer.language.getRenderedString(it)},getRenderedString(it,{isSkipNameRow:isSkipNameRow=false}={}){const allEntries=[];const hasMeta=it.typicalSpeakers||it.script;if(it.entries)allEntries.push(...it.entries);if(it.dialects){allEntries.push(`This language is a family which includes the following dialects: ${it.dialects.sort(SortUtil.ascSortLower).join(", ")}. Creatures that speak different dialects of the same language can communicate with one another.`)}if(!allEntries.length&&!hasMeta)allEntries.push("{@i No information available.}");return`\n\t\t${Renderer.utils.getExcludedTr(it,"language",UrlUtil.PG_LANGUAGES)}\n\t\t${isSkipNameRow?"":Renderer.utils.getNameTr(it,{page:UrlUtil.PG_LANGUAGES})}\n\t\t${it.type?`<tr class="text"><td colspan="6" class="pt-0"><i>${it.type.toTitleCase()} language</i></td></tr>`:""}\n\t\t${hasMeta?`<tr class="text"><td colspan="6">\n\t\t${it.typicalSpeakers?`<div><b>Typical Speakers</b> ${Renderer.get().render(it.typicalSpeakers.join(", "))}</b>`:""}\n\t\t${it.script?`<div><b>Script</b> ${Renderer.get().render(it.script)}</div>`:""}\n\t\t<div></div>\n\t\t</td></tr>`:""}\n\t\t${allEntries.length?`<tr class="text"><td colspan="6">\n\t\t${Renderer.get().setFirstSection(true).render({entries:allEntries})}\n\t\t</td></tr>`:""}`},pGetFluff(it){return Renderer.utils.pGetFluff({entity:it,fluffProp:"languageFluff",fluffUrl:`data/fluff-languages.json`})}};Renderer.adventureBook={getEntryIdLookup(bookData,doThrowError=true){const out={};const titlesRel={};let chapIx;const depthStack=[];const handlers={object:obj=>{Renderer.ENTRIES_WITH_ENUMERATED_TITLES.forEach((meta=>{if(obj.type!==meta.type)return;const curDepth=depthStack.length?depthStack.last():0;const nxtDepth=meta.depth?meta.depth:meta.depthIncrement?curDepth+meta.depthIncrement:curDepth;depthStack.push(Math.min(nxtDepth,2));if(obj.id){if(out[obj.id]){(out.__BAD=out.__BAD||[]).push(obj.id)}else{out[obj.id]={chapter:chapIx,entry:obj,depth:depthStack.last()};if(obj.name){const cleanName=obj.name.toLowerCase();titlesRel[cleanName]=titlesRel[cleanName]||0;out[obj.id].ixTitleRel=titlesRel[cleanName]++;out[obj.id].nameClean=cleanName}}}}));return obj},postObject:obj=>{Renderer.ENTRIES_WITH_ENUMERATED_TITLES.forEach((meta=>{if(obj.type!==meta.type)return;depthStack.pop()}))}};bookData.forEach(((chap,_chapIx)=>{chapIx=_chapIx;MiscUtil.getWalker({isNoModification:true}).walk(chap,handlers)}));if(doThrowError)if(out.__BAD)throw new Error(`IDs were already in storage: ${out.__BAD.map((it=>`"${it}"`)).join(", ")}`);return out}};Renderer.charoption={getCompactRenderedString(it){const preText=Renderer.charoption.getOptionTypePreText(it.optionType);return`\n\t\t${Renderer.utils.getExcludedTr(it,"charoption",UrlUtil.PG_CHAR_CREATION_OPTIONS)}\n\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_CHAR_CREATION_OPTIONS})}\n\t\t<tr class="text"><td colspan="6">\n\t\t${preText||""}${Renderer.get().setFirstSection(true).render({type:"entries",entries:it.entries})}\n\t\t</td></tr>\n\t\t`},getOptionTypePreText(optionType){if(optionType!=="RF:B")return"";return Renderer.get().render({type:"entries",entries:[`{@note You may replace the standard feature of your background with this feature.}`]})},pGetFluff(it){return Renderer.utils.pGetFluff({entity:it,fluffUrl:"data/fluff-charcreationoptions.json",fluffProp:"charoptionFluff"})}};Renderer.recipe={getCompactRenderedString(it){return`${Renderer.utils.getExcludedTr(it,"recipe",UrlUtil.PG_RECIPES)}\n\t\t${Renderer.utils.getNameTr(it,{page:UrlUtil.PG_RECIPES})}\n\t\t<tr><td colspan="6">\n\t\t${Renderer.recipe.getBodyHtml(it)}\n\t\t</td></tr>`},getBodyHtml(it){const{ptMakes:ptMakes,ptServes:ptServes}=Renderer.recipe._getMakesServesHtml(it);return`<div class="flex w-100 rd-recipes__wrp-recipe">\n\t\t\t<div class="flex-1 flex-col br-1p pr-2">\n\t\t\t\t${ptMakes||""}\n\t\t\t\t${ptServes||""}\n\n\t\t\t\t<div class="rd-recipes__wrp-ingredients ${ptMakes||ptServes?"mt-1":""}">${Renderer.get().render({entries:it._fullIngredients},0)}</div>\n\n\t\t\t\t${it.noteCook?`<div class="w-100 flex-col mt-4"><div class="flex-vh-center bold mb-1 small-caps">Cook's Notes</div><div class="italic">${Renderer.get().render({entries:it.noteCook})}</div></div>`:""}\n\t\t\t</div>\n\n\t\t\t<div class="pl-2 flex-2 rd-recipes__wrp-instructions">\n\t\t\t\t${Renderer.get().setFirstSection(true).render({entries:it.instructions},2)}\n\t\t\t</div>\n\t\t</div>`},_getMakesServesHtml(it){const ptMakes=it.makes?`<div class="mb-2 flex-v-center">\n\t\t\t<div class="bold small-caps mr-2">Makes</div>\n\t\t\t<div>${it._scaleFactor?`${it._scaleFactor}× `:""}${Renderer.get().render(it.makes||it.serves)}</div>\n\t\t</div>`:null;const ptServes=it.serves?`<div class="mb-2 flex-v-center">\n\t\t\t<div class="bold small-caps mr-2">Serves</div>\n\t\t\t<div>${it.serves.min??it.serves.exact}${it.serves.min!=null?" to ":""}${it.serves.max??""}</div>\n\t\t</div>`:null;return{ptMakes:ptMakes,ptServes:ptServes}},pGetFluff(it){return Renderer.utils.pGetFluff({entity:it,fluffUrl:"data/fluff-recipes.json",fluffProp:"recipeFluff"})},populateFullIngredients(r){r._fullIngredients=Renderer.applyAllProperties(MiscUtil.copy(r.ingredients))},getScaledRecipe(r,scaleFactor){const cpyR=MiscUtil.copy(r);MiscUtil.getWalker({keyBlacklist:MiscUtil.GENERIC_WALKER_ENTRIES_KEY_BLACKLIST}).walk(cpyR.ingredients,{object:obj=>{if(obj.type!=="ingredient")return obj;obj.entry=obj.entry.replace(/{=amount\d+(?:\/[^}]+)?}/g,((...m)=>{const originalValue=Renderer.applyProperties(m[0],obj);return`{@help ${m[0]}|In the original recipe: ${originalValue}}`}));Object.keys(obj).filter((k=>/^amount\d+/.test(k))).forEach((k=>{let base=obj[k];const divOneSixth=obj[k]/.166;if(Math.abs(divOneSixth-Math.round(divOneSixth))<.05)base=1/6*Math.round(divOneSixth);let scaled=base*scaleFactor;if(Math.abs(scaled-Math.round(scaled))<.1){scaled=Math.round(scaled)}obj[k]=scaled}));return obj}});Renderer.recipe.populateFullIngredients(cpyR);if(cpyR.serves){if(cpyR.serves.min)cpyR.serves.min*=scaleFactor;if(cpyR.serves.max)cpyR.serves.max*=scaleFactor;if(cpyR.serves.exact)cpyR.serves.exact*=scaleFactor}cpyR._displayName=`${cpyR.name} (×${scaleFactor})`;cpyR._scaleFactor=scaleFactor;return cpyR}};Renderer.generic={getCompactRenderedString(it,opts){opts=opts||{};return`\n\t\t${opts.isSkipNameRow?"":Renderer.utils.getNameTr(it)}\n\t\t<tr class="text"><td colspan="6">\n\t\t${Renderer.get().setFirstSection(true).render({entries:it.entries})}\n\t\t</td></tr>\n\t\t${opts.isSkipPageRow?"":Renderer.utils.getPageTr(it)}`}};Renderer.hover={TAG_TO_PAGE:{spell:UrlUtil.PG_SPELLS,item:UrlUtil.PG_ITEMS,creature:UrlUtil.PG_BESTIARY,condition:UrlUtil.PG_CONDITIONS_DISEASES,disease:UrlUtil.PG_CONDITIONS_DISEASES,background:UrlUtil.PG_BACKGROUNDS,race:UrlUtil.PG_RACES,optfeature:UrlUtil.PG_OPT_FEATURES,reward:UrlUtil.PG_REWARDS,feat:UrlUtil.PG_FEATS,psionic:UrlUtil.PG_PSIONICS,object:UrlUtil.PG_OBJECTS,cult:UrlUtil.PG_CULTS_BOONS,boon:UrlUtil.PG_CULTS_BOONS,trap:UrlUtil.PG_TRAPS_HAZARDS,hazard:UrlUtil.PG_TRAPS_HAZARDS,deity:UrlUtil.PG_DEITIES,variantrule:UrlUtil.PG_VARIANTRULES,charoption:UrlUtil.PG_CHAR_CREATION_OPTIONS,vehicle:UrlUtil.PG_VEHICLES,vehupgrade:UrlUtil.PG_VEHICLES,class:UrlUtil.PG_CLASSES,action:UrlUtil.PG_ACTIONS,language:UrlUtil.PG_LANGUAGES,classFeature:UrlUtil.PG_CLASSES,subclassFeature:UrlUtil.PG_CLASSES,recipe:UrlUtil.PG_RECIPES},LinkMeta:function(){this.isHovered=false;this.isLoading=false;this.isPermanent=false;this.windowMeta=null},_BAR_HEIGHT:16,_linkCache:{},_hasBrewSourceBeenAttemptedCache:{},_eleCache:new Map,_entryCache:{},_isInit:false,_dmScreen:null,_lastId:0,_contextMenu:null,_contextMenuLastClickedHeader:null,bindDmScreen(screen){this._dmScreen=screen},_getNextId(){return++Renderer.hover._lastId},_doInit(){if(!Renderer.hover._isInit){Renderer.hover._isInit=true;$(document.body).on("click",(()=>Renderer.hover.cleanTempWindows()));Renderer.hover._contextMenu=ContextUtil.getMenu([new ContextUtil.Action("Maximize All",(()=>{const $permWindows=$(`.hoverborder[data-perm="true"]`);$permWindows.attr("data-display-title","false")})),new ContextUtil.Action("Minimize All",(()=>{const $permWindows=$(`.hoverborder[data-perm="true"]`);$permWindows.attr("data-display-title","true")})),null,new ContextUtil.Action("Close Others",(()=>{const $thisHoverClose=$(Renderer.hover._contextMenuLastClickedHeader).closest(`.hoverborder--top`).find(`.hvr__close`);$(`.hvr__close`).not($thisHoverClose).click()})),new ContextUtil.Action("Close All",(()=>$(`.hvr__close`).click()))])}},cleanTempWindows(){for(const[ele,meta]of Renderer.hover._eleCache.entries()){if(!meta.isPermanent&&meta.windowMeta&&!document.body.contains(ele)){meta.windowMeta.doClose()}else if(!meta.isPermanent&&meta.isHovered&&meta.windowMeta){const bounds=ele.getBoundingClientRect();if(EventUtil._mouseX<bounds.x||EventUtil._mouseY<bounds.y||EventUtil._mouseX>bounds.x+bounds.width||EventUtil._mouseY>bounds.y+bounds.height){meta.windowMeta.doClose()}}}},_getSetMeta(ele){if(!Renderer.hover._eleCache.has(ele))Renderer.hover._eleCache.set(ele,new Renderer.hover.LinkMeta);return Renderer.hover._eleCache.get(ele)},_handleGenericMouseOverStart(evt,ele){if(Renderer.hover.isSmallScreen(evt)&&!evt.shiftKey)return;Renderer.hover.cleanTempWindows();const meta=Renderer.hover._getSetMeta(ele);if(meta.isHovered||meta.isLoading)return;ele.style.cursor="progress";meta.isHovered=true;meta.isLoading=true;meta.isPermanent=evt.shiftKey;return meta},async pHandleLinkMouseOver(evt,ele,opts){Renderer.hover._doInit();let page,source,hash,preloadId;if(opts){page=opts.page;source=opts.source;hash=opts.hash;preloadId=opts.preloadId}else{page=ele.dataset.vetPage;source=ele.dataset.vetSource;hash=ele.dataset.vetHash;preloadId=ele.dataset.vetPreloadId}let meta=Renderer.hover._handleGenericMouseOverStart(evt,ele);if(meta==null)return;if(evt.ctrlKey&&Renderer.hover._pageToFluffFn(page))meta.isFluff=true;let toRender;if(preloadId!=null){switch(page){case UrlUtil.PG_BESTIARY:{const{_scaledCr:scaledCr,_scaledSummonLevel:scaledSummonLevel}=Renderer.monster.getUnpackedCustomHashId(preloadId);const baseMon=await Renderer.hover.pCacheAndGet(page,source,hash);if(scaledCr!=null){toRender=await ScaleCreature.scale(baseMon,scaledCr)}else if(scaledSummonLevel!=null){toRender=await ScaleSummonCreature.scale(baseMon,scaledSummonLevel)}break}}}else{if(meta.isFluff){toRender=await Renderer.hover.pCacheAndGet(`fluff__${page}`,source,hash);const entity=await Renderer.hover.pCacheAndGet(page,source,hash);const pFnGetFluff=Renderer.hover._pageToFluffFn(page);toRender=await pFnGetFluff(entity);if(!toRender.name||!toRender.source){const toRenderParent=await Renderer.hover.pCacheAndGet(page,source,hash);toRender=MiscUtil.copy(toRender);toRender.name=toRenderParent.name;toRender.source=toRenderParent.source}}else toRender=await Renderer.hover.pCacheAndGet(page,source,hash)}meta.isLoading=false;if(opts?.isDelay){meta.isDelayed=true;ele.style.cursor="help";await MiscUtil.pDelay(1100);meta.isDelayed=false}ele.style.cursor="";if(!meta||!meta.isHovered&&!meta.isPermanent)return;const tmpEvt=meta._tmpEvt;delete meta._tmpEvt;const $content=meta.isFluff?Renderer.hover.$getHoverContent_fluff(page,toRender):Renderer.hover.$getHoverContent_stats(page,toRender);const sourceData={type:"stats",page:page,source:source,hash:hash};if(meta.windowMeta&&!meta.isPermanent){meta.windowMeta.doClose();meta.windowMeta=null}meta.windowMeta=Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(tmpEvt||evt),{title:toRender?toRender.name:"",isPermanent:meta.isPermanent,pageUrl:`${Renderer.get().baseUrl}${page}#${hash}`,cbClose:()=>meta.isHovered=meta.isPermanent=meta.isLoading=meta.isFluff=false,isBookContent:page===UrlUtil.PG_RECIPES},sourceData);if(page===UrlUtil.PG_BESTIARY&&!meta.isFluff){const win=(evt.view||{}).window;if(win._IS_POPOUT){$content.find(`.mon__btn-scale-cr`).remove();$content.find(`.mon__btn-reset-cr`).remove()}else{switch(page){case UrlUtil.PG_BESTIARY:{Renderer.monster.doBindCompactContentHandlers({$content:$content,sourceData:sourceData,toRender:toRender,fnRender:Renderer.hover.getFnRenderCompact(page),page:page,source:source,hash:hash,meta:meta})}}}}},handleLinkMouseLeave(evt,ele){const meta=Renderer.hover._eleCache.get(ele);ele.style.cursor="";if(!meta||meta.isPermanent)return;if(evt.shiftKey){meta.isPermanent=true;meta.windowMeta.setIsPermanent(true);return}meta.isHovered=false;if(meta.windowMeta){meta.windowMeta.doClose();meta.windowMeta=null}},handleLinkMouseMove(evt,ele){const meta=Renderer.hover._eleCache.get(ele);if(!meta||meta.isPermanent)return;if(meta.isDelayed){meta._tmpEvt=evt;return}if(!meta.windowMeta)return;meta.windowMeta.setPosition(Renderer.hover.getWindowPositionFromEvent(evt));if(evt.shiftKey&&!meta.isPermanent){meta.isPermanent=true;meta.windowMeta.setIsPermanent(true)}},handlePredefinedMouseOver(evt,ele,entryId,opts){opts=opts||{};const meta=Renderer.hover._handleGenericMouseOverStart(evt,ele);if(meta==null)return;Renderer.hover.cleanTempWindows();const toRender=Renderer.hover._entryCache[entryId];meta.isLoading=false;if(!meta.isHovered&&!meta.isPermanent)return;const $content=Renderer.hover.$getHoverContent_generic(toRender,opts);meta.windowMeta=Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:toRender.data&&toRender.data.hoverTitle!=null?toRender.data.hoverTitle:toRender.name,isPermanent:meta.isPermanent,cbClose:()=>meta.isHovered=meta.isPermanent=meta.isLoading=false});ele.style.cursor=""},handlePredefinedMouseLeave(evt,ele){return Renderer.hover.handleLinkMouseLeave(evt,ele)},handlePredefinedMouseMove(evt,ele){return Renderer.hover.handleLinkMouseMove(evt,ele)},getWindowPositionFromEvent(evt){const ele=evt.target;const offset=$(ele).offset();const vpOffsetT=offset.top-$(document).scrollTop();const vpOffsetL=offset.left-$(document).scrollLeft();const fromBottom=vpOffsetT>window.innerHeight/2;const fromRight=vpOffsetL>window.innerWidth/2;return{mode:"autoFromElement",vpOffsetT:vpOffsetT,vpOffsetL:vpOffsetL,fromBottom:fromBottom,fromRight:fromRight,eleHeight:$(ele).height(),eleWidth:$(ele).width(),clientX:EventUtil.getClientX(evt),window:(evt.view||{}).window||window}},getWindowPositionExact(x,y,evt=null){return{window:((evt||{}).view||{}).window||window,mode:"exact",x:x,y:y}},getWindowPositionExactVisibleBottom(x,y,evt=null){return{...Renderer.hover.getWindowPositionExact(x,y,evt),mode:"exactVisibleBottom"}},_WINDOW_METAS:{},MIN_Z_INDEX:200,_MAX_Z_INDEX:300,_DEFAULT_WIDTH_PX:600,_BODY_SCROLLER_WIDTH_PX:15,_getZIndex(){const zIndices=Object.values(Renderer.hover._WINDOW_METAS).map((it=>it.zIndex));if(!zIndices.length)return Renderer.hover.MIN_Z_INDEX;return Math.max(...zIndices)},_getNextZIndex(hoverId){const cur=Renderer.hover._getZIndex();if(hoverId!=null&&Renderer.hover._WINDOW_METAS[hoverId].zIndex===cur)return cur;const out=cur+1;if(out>Renderer.hover._MAX_Z_INDEX){const sortedWindowMetas=Object.entries(Renderer.hover._WINDOW_METAS).sort((([kA,vA],[kB,vB])=>SortUtil.ascSort(vA.zIndex,vB.zIndex)));if(sortedWindowMetas.length>=Renderer.hover._MAX_Z_INDEX-Renderer.hover.MIN_Z_INDEX){sortedWindowMetas.forEach((([k,v])=>{v.setZIndex(Renderer.hover.MIN_Z_INDEX)}))}else{sortedWindowMetas.forEach((([k,v],i)=>{v.setZIndex(Renderer.hover.MIN_Z_INDEX+i)}))}return Renderer.hover._getNextZIndex(hoverId)}else return out},getShowWindow($content,position,opts,sourceData){opts=opts||{};Renderer.hover._doInit();const initialWidth=opts.width==null?Renderer.hover._DEFAULT_WIDTH_PX:opts.width;const initialZIndex=Renderer.hover._getNextZIndex();const $body=$(position.window.document.body);const $hov=$(`<div class="hwin"></div>`).css({right:-initialWidth,width:initialWidth,zIndex:initialZIndex});const $wrpContent=$(`<div class="hwin__wrp-table"></div>`);if(opts.height!=null)$wrpContent.css("height",opts.height);const $hovTitle=$(`<span class="window-title">${opts.title||""}</span>`);const out={};const hoverId=Renderer.hover._getNextId();Renderer.hover._WINDOW_METAS[hoverId]=out;const mouseUpId=`mouseup.${hoverId} touchend.${hoverId}`;const mouseMoveId=`mousemove.${hoverId} touchmove.${hoverId}`;const resizeId=`resize.${hoverId}`;const doClose=()=>{$hov.remove();$(position.window.document).off(mouseUpId);$(position.window.document).off(mouseMoveId);$(position.window).off(resizeId);delete Renderer.hover._WINDOW_METAS[hoverId];if(opts.cbClose)opts.cbClose(out)};let drag={};function handleDragMousedown(evt,type){if(evt.which===0||evt.which===1)evt.preventDefault();out.zIndex=Renderer.hover._getNextZIndex(hoverId);$hov.css({"z-index":out.zIndex,animation:"initial"});drag.type=type;drag.startX=EventUtil.getClientX(evt);drag.startY=EventUtil.getClientY(evt);drag.baseTop=parseFloat($hov.css("top"));drag.baseLeft=parseFloat($hov.css("left"));drag.baseHeight=$wrpContent.height();drag.baseWidth=parseFloat($hov.css("width"));if(type<9){$wrpContent.css({height:drag.baseHeight,"max-height":"initial"});$hov.css("max-width","initial")}}const $brdrTopRightResize=$(`<div class="hoverborder__resize-ne"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,1)));const $brdrRightResize=$(`<div class="hoverborder__resize-e"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,2)));const $brdrBottomRightResize=$(`<div class="hoverborder__resize-se"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,3)));const $brdrBtm=$(`<div class="hoverborder hoverborder--btm ${opts.isBookContent?"hoverborder-book":""}"><div class="hoverborder__resize-s"></div></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,4)));const $brdrBtmLeftResize=$(`<div class="hoverborder__resize-sw"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,5)));const $brdrLeftResize=$(`<div class="hoverborder__resize-w"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,6)));const $brdrTopLeftResize=$(`<div class="hoverborder__resize-nw"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,7)));const $brdrTopResize=$(`<div class="hoverborder__resize-n"></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,8)));const $brdrTop=$(`<div class="hoverborder hoverborder--top ${opts.isBookContent?"hoverborder-book":""}" ${opts.isPermanent?`data-perm="true"`:""}></div>`).on("mousedown touchstart",(evt=>handleDragMousedown(evt,9))).on("contextmenu",(evt=>{Renderer.hover._contextMenuLastClickedHeader=$brdrTop[0];ContextUtil.pOpenMenu(evt,Renderer.hover._contextMenu)}));function isOverHoverTarget(evt,target){return EventUtil.getClientX(evt)>=target.left&&EventUtil.getClientX(evt)<=target.left+target.width&&EventUtil.getClientY(evt)>=target.top&&EventUtil.getClientY(evt)<=target.top+target.height}function handleNorthDrag(evt){const diffY=Math.max(drag.startY-EventUtil.getClientY(evt),80-drag.baseHeight);$wrpContent.css("height",drag.baseHeight+diffY);$hov.css("top",drag.baseTop-diffY);drag.startY=EventUtil.getClientY(evt);drag.baseHeight=$wrpContent.height();drag.baseTop=parseFloat($hov.css("top"))}function handleEastDrag(evt){const diffX=drag.startX-EventUtil.getClientX(evt);$hov.css("width",drag.baseWidth-diffX);drag.startX=EventUtil.getClientX(evt);drag.baseWidth=parseFloat($hov.css("width"))}function handleSouthDrag(evt){const diffY=drag.startY-EventUtil.getClientY(evt);$wrpContent.css("height",drag.baseHeight-diffY);drag.startY=EventUtil.getClientY(evt);drag.baseHeight=$wrpContent.height()}function handleWestDrag(evt){const diffX=Math.max(drag.startX-EventUtil.getClientX(evt),150-drag.baseWidth);$hov.css("width",drag.baseWidth+diffX).css("left",drag.baseLeft-diffX);drag.startX=EventUtil.getClientX(evt);drag.baseWidth=parseFloat($hov.css("width"));drag.baseLeft=parseFloat($hov.css("left"))}$(position.window.document).on(mouseUpId,(evt=>{if(drag.type){if(drag.type<9){$wrpContent.css("max-height","");$hov.css("max-width","")}adjustPosition();if(drag.type===9){if(evt.target.classList.contains("hvr__close")||evt.target.classList.contains("hvr__popout")){evt.preventDefault();drag.type=0;$(evt.target).click();return}if(this._dmScreen&&sourceData){const panel=this._dmScreen.getPanelPx(EventUtil.getClientX(evt),EventUtil.getClientY(evt));if(!panel)return;this._dmScreen.setHoveringPanel(panel);const target=panel.getAddButtonPos();if(isOverHoverTarget(evt,target)){switch(sourceData.type){case"stats":{panel.doPopulate_Stats(sourceData.page,sourceData.source,sourceData.hash);break}case"statsCreatureScaledCr":{panel.doPopulate_StatsScaledCr(sourceData.page,sourceData.source,sourceData.hash,sourceData.crNumber);break}case"statsCreatureScaledSummonLevel":{panel.doPopulate_StatsScaledSummonLevel(sourceData.page,sourceData.source,sourceData.hash,sourceData.summonLevel);break}}doClose()}this._dmScreen.resetHoveringButton()}}drag.type=0}})).on(mouseMoveId,(evt=>{switch(drag.type){case 1:handleNorthDrag(evt);handleEastDrag(evt);break;case 2:handleEastDrag(evt);break;case 3:handleSouthDrag(evt);handleEastDrag(evt);break;case 4:handleSouthDrag(evt);break;case 5:handleSouthDrag(evt);handleWestDrag(evt);break;case 6:handleWestDrag(evt);break;case 7:handleNorthDrag(evt);handleWestDrag(evt);break;case 8:handleNorthDrag(evt);break;case 9:{const diffX=drag.startX-EventUtil.getClientX(evt);const diffY=drag.startY-EventUtil.getClientY(evt);$hov.css("left",drag.baseLeft-diffX).css("top",drag.baseTop-diffY);drag.startX=EventUtil.getClientX(evt);drag.startY=EventUtil.getClientY(evt);drag.baseTop=parseFloat($hov.css("top"));drag.baseLeft=parseFloat($hov.css("left"));if(this._dmScreen){const panel=this._dmScreen.getPanelPx(EventUtil.getClientX(evt),EventUtil.getClientY(evt));if(!panel)return;this._dmScreen.setHoveringPanel(panel);const target=panel.getAddButtonPos();if(isOverHoverTarget(evt,target))this._dmScreen.setHoveringButton(panel);else this._dmScreen.resetHoveringButton()}break}}}));$(position.window).on(resizeId,(()=>adjustPosition(true)));const doToggleMinimizedMaximized=()=>{const curState=$brdrTop.attr("data-display-title");const isNextMinified=curState==="false";$brdrTop.attr("data-display-title",isNextMinified);$brdrTop.attr("data-perm",true);$hov.toggleClass("hwin--minified",isNextMinified)};const doMaximize=()=>{$brdrTop.attr("data-display-title",false);$hov.toggleClass("hwin--minified",false)};$brdrTop.attr("data-display-title",false);$brdrTop.on("dblclick",(()=>doToggleMinimizedMaximized()));$brdrTop.append($hovTitle);const $brdTopRhs=$(`<div class="flex" style="margin-left: auto;"></div>`).appendTo($brdrTop);if(opts.pageUrl&&!position.window._IS_POPOUT&&!Renderer.get().isInternalLinksDisabled()){const $btnGotoPage=$(`<a class="top-border-icon glyphicon glyphicon-modal-window" style="margin-right: 2px;" title="Go to Page" href="${opts.pageUrl}"></a>`).appendTo($brdTopRhs)}if(!position.window._IS_POPOUT){const $btnPopout=$(`<span class="top-border-icon glyphicon glyphicon-new-window hvr__popout" style="margin-right: 2px;" title="Open as Popup Window"></span>`).on("click",(async evt=>{evt.stopPropagation();const dimensions=opts.fnGetPopoutSize?opts.fnGetPopoutSize():{width:600,height:$content.height()};const win=open("",opts.title||"",`width=${dimensions.width},height=${dimensions.height}location=0,menubar=0,status=0,titlebar=0,toolbar=0`);win._IS_POPOUT=true;win.document.write(`\n\t\t\t\t\t\t<!DOCTYPE html>\n\t\t\t\t\t\t<html lang="en" class="${typeof styleSwitcher!=="undefined"?styleSwitcher.getDayNightClassNames():""}"><head>\n\t\t\t\t\t\t\t<meta name="viewport" content="width=device-width, initial-scale=1">\n\t\t\t\t\t\t\t<title>${opts.title}</title>\n\t\t\t\t\t\t\t${$(`link[rel="stylesheet"][href]`).map(((i,e)=>e.outerHTML)).get().join("\n")}\n\t\t\t\t\t\t\t\x3c!-- Favicons --\x3e\n\t\t\t\t\t\t\t<link rel="icon" type="image/svg+xml" href="favicon.svg?v=1.115">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="256x256" href="favicon-256x256.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="144x144" href="favicon-144x144.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="128x128" href="favicon-128x128.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="64x64" href="favicon-64x64.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="48x48" href="favicon-48x48.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="32x32" href="favicon-32x32.png">\n\t\t\t\t\t\t\t<link rel="icon" type="image/png" sizes="16x16" href="favicon-16x16.png">\n\n\t\t\t\t\t\t\t\x3c!-- Chrome Web App Icons --\x3e\n\t\t\t\t\t\t\t<link rel="manifest" href="manifest.webmanifest">\n\t\t\t\t\t\t\t<meta name="application-name" content="5etools">\n\t\t\t\t\t\t\t<meta name="theme-color" content="#006bc4">\n\n\t\t\t\t\t\t\t\x3c!-- Windows Start Menu tiles --\x3e\n\t\t\t\t\t\t\t<meta name="msapplication-config" content="browserconfig.xml"/>\n\t\t\t\t\t\t\t<meta name="msapplication-TileColor" content="#006bc4">\n\n\t\t\t\t\t\t\t\x3c!-- Apple Touch Icons --\x3e\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="180x180" href="apple-touch-icon-180x180.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="360x360" href="apple-touch-icon-360x360.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="167x167" href="apple-touch-icon-167x167.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="152x152" href="apple-touch-icon-152x152.png">\n\t\t\t\t\t\t\t<link rel="apple-touch-icon" sizes="120x120" href="apple-touch-icon-120x120.png">\n\t\t\t\t\t\t\t<meta name="apple-mobile-web-app-title" content="5etools">\n\n\t\t\t\t\t\t\t\x3c!-- macOS Safari Pinned Tab and Touch Bar --\x3e\n\t\t\t\t\t\t\t<link rel="mask-icon" href="safari-pinned-tab.svg" color="#006bc4">\n\n\t\t\t\t\t\t\t<style>\n\t\t\t\t\t\t\t\thtml, body { width: 100%; height: 100%; }\n\t\t\t\t\t\t\t\tbody { overflow-y: scroll; }\n\t\t\t\t\t\t\t\t.hwin--popout { max-width: 100%; max-height: 100%; box-shadow: initial; width: 100%; overflow-y: auto; }\n\t\t\t\t\t\t\t</style>\n\t\t\t\t\t\t</head><body class="rd__body-popout">\n\t\t\t\t\t\t<div class="hwin hoverbox--popout hwin--popout"></div>\n\t\t\t\t\t\t<script type="text/javascript" src="js/parser.js"><\/script>\n\t\t\t\t\t\t<script type="text/javascript" src="js/utils.js"><\/script>\n\t\t\t\t\t\t<script type="text/javascript" src="lib/jquery.js"><\/script>\n\t\t\t\t\t\t</body></html>\n\t\t\t\t\t`);let $cpyContent;if(opts.$pFnGetPopoutContent){$cpyContent=await opts.$pFnGetPopoutContent()}else{$cpyContent=$content.clone(true,true);$cpyContent.find(`.mon__btn-scale-cr`).remove();$cpyContent.find(`.mon__btn-reset-cr`).remove()}let ticks=50;while(!win.document.body&&ticks-- >0)await MiscUtil.pDelay(5);$cpyContent.appendTo($(win.document).find(`.hoverbox--popout`));win.Renderer=Renderer;doClose()})).appendTo($brdTopRhs)}const $btnClose=$(`<span class="delete-icon glyphicon glyphicon-remove hvr__close" title="Close"></span>`).on("click",(evt=>{evt.stopPropagation();doClose()})).appendTo($brdTopRhs);$wrpContent.append($content);$hov.append($brdrTopResize).append($brdrTopRightResize).append($brdrRightResize).append($brdrBottomRightResize).append($brdrBtmLeftResize).append($brdrLeftResize).append($brdrTopLeftResize).append($brdrTop).append($wrpContent).append($brdrBtm);$body.append($hov);const setPosition=pos=>{switch(pos.mode){case"autoFromElement":{if(pos.fromBottom)$hov.css("top",pos.vpOffsetT-($hov.height()+10));else $hov.css("top",pos.vpOffsetT+pos.eleHeight+10);if(pos.fromRight)$hov.css("left",(pos.clientX||pos.vpOffsetL)-(parseFloat($hov.css("width"))+10));else $hov.css("left",(pos.clientX||pos.vpOffsetL+pos.eleWidth)+10);break}case"exact":{$hov.css({left:pos.x,top:pos.y});break}case"exactVisibleBottom":{$hov.css({left:pos.x,top:pos.y,animation:"initial"});let yPos=pos.y;const{bottom:posBottom,height:winHeight}=$hov[0].getBoundingClientRect();const height=position.window.innerHeight;if(posBottom>height){yPos=position.window.innerHeight-winHeight;$hov.css({top:yPos,animation:""})}break}default:throw new Error(`Positiong mode unimplemented: "${pos.mode}"`)}adjustPosition(true)};setPosition(position);function adjustPosition(){const eleHov=$hov[0];const hvTop=parseFloat(eleHov.style.top);const hvLeft=parseFloat(eleHov.style.left);const hvWidth=parseFloat(eleHov.style.width);const screenHeight=position.window.innerHeight;const screenWidth=position.window.innerWidth;if(hvTop<0)eleHov.style.top=`0px`;else if(hvTop>=screenHeight-Renderer.hover._BAR_HEIGHT){$hov.css("top",screenHeight-Renderer.hover._BAR_HEIGHT)}if(hvLeft<0)$hov.css("left",0);else if(hvLeft+hvWidth+Renderer.hover._BODY_SCROLLER_WIDTH_PX>screenWidth){$hov.css("left",Math.max(screenWidth-hvWidth-Renderer.hover._BODY_SCROLLER_WIDTH_PX,0))}}const setIsPermanent=isPermanent=>{opts.isPermanent=isPermanent;$brdrTop.attr("data-perm",isPermanent)};const setZIndex=zIndex=>{$hov.css("z-index",zIndex);out.zIndex=zIndex};const doZIndexToFront=()=>{const nxtZIndex=Renderer.hover._getNextZIndex(hoverId);setZIndex(nxtZIndex)};out.$windowTitle=$hovTitle;out.zIndex=initialZIndex;out.setZIndex=setZIndex;out.setPosition=setPosition;out.setIsPermanent=setIsPermanent;out.doClose=doClose;out.doMaximize=doMaximize;out.doZIndexToFront=doZIndexToFront;return out},getMakePredefinedHover(entry,opts){opts=opts||{};const id=opts.id??Renderer.hover._getNextId();Renderer.hover._entryCache[id]=entry;return{id:id,html:`onmouseover="Renderer.hover.handlePredefinedMouseOver(event, this, ${id}, ${JSON.stringify(opts).escapeQuotes()})" onmousemove="Renderer.hover.handlePredefinedMouseMove(event, this)" onmouseleave="Renderer.hover.handlePredefinedMouseLeave(event, this)" ${Renderer.hover.getPreventTouchString()}`,mouseOver:(evt,ele)=>Renderer.hover.handlePredefinedMouseOver(evt,ele,id,opts),mouseMove:(evt,ele)=>Renderer.hover.handlePredefinedMouseMove(evt,ele),mouseLeave:(evt,ele)=>Renderer.hover.handlePredefinedMouseLeave(evt,ele),touchStart:(evt,ele)=>Renderer.hover.handleTouchStart(evt,ele)}},updatePredefinedHover(id,entry){Renderer.hover._entryCache[id]=entry},getPreventTouchString(){return`ontouchstart="Renderer.hover.handleTouchStart(event, this)"`},handleTouchStart(evt,ele){if(!Renderer.hover.isSmallScreen(evt)){$(ele).data("href",$(ele).data("href")||$(ele).attr("href"));$(ele).attr("href","javascript:void(0)");setTimeout((()=>{const data=$(ele).data("href");if(data){$(ele).attr("href",data);$(ele).data("href",null)}}),100)}},addEmbeddedToCache(page,source,hash,entity){Renderer.hover._addToCache(page,source,hash,entity)},_addToCache:(page,source,hash,entity)=>{page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();((Renderer.hover._linkCache[page]=Renderer.hover._linkCache[page]||{})[source]=Renderer.hover._linkCache[page][source]||{})[hash]=entity},getFromCache:(page,source,hash,{isCopy:isCopy=false}={})=>{page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();const out=MiscUtil.get(Renderer.hover._linkCache,page,source,hash);if(isCopy&&out!=null)return MiscUtil.copy(out);return out},isCached(page,source,hash){page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();return!!(Renderer.hover._linkCache[page]&&Renderer.hover._linkCache[page][source]&&Renderer.hover._linkCache[page][source][hash])},isPageSourceCached(page,source){return!!(Renderer.hover._linkCache[page.toLowerCase()]&&Renderer.hover._linkCache[page][source.toLowerCase()])},_hasBrewSourceBeenAttempted(source){return!!Renderer.hover._hasBrewSourceBeenAttemptedCache[source]},_setHasBrewSourceBeenAttempted(source){Renderer.hover._hasBrewSourceBeenAttemptedCache[source]=true},_pDoLoadFromBrew_cachedSources:null,async _pDoLoadFromBrew(page,source,hash){if(!Renderer.hover._pDoLoadFromBrew_cachedSources){let sourceIndex;try{sourceIndex=await DataUtil.brew.pLoadSourceIndex()}catch(e){setTimeout((()=>{throw e}))}if(!sourceIndex)return false;Renderer.hover._pDoLoadFromBrew_cachedSources={};Object.keys(sourceIndex).forEach((source=>{Renderer.hover._pDoLoadFromBrew_cachedSources[source.toLowerCase()]=source}))}const sourceJsonCorrectCase=Renderer.hover._pDoLoadFromBrew_cachedSources[source];if(!sourceJsonCorrectCase)return false;const brewJson=await DataUtil.pLoadBrewBySource(sourceJsonCorrectCase);return!!brewJson},_psCacheLoading:{},_flagsCacheLoaded:{},_locks:{},_flags:{},async pCacheAndGetHash(page,hash,opts){const source=UrlUtil.decodeHash(hash).last();return Renderer.hover.pCacheAndGet(page,source,hash,opts)},async pCacheAndGet(page,source,hash,opts){opts=opts||{};page=page.toLowerCase();source=source.toLowerCase();hash=hash.toLowerCase();const existingOut=Renderer.hover.getFromCache(page,source,hash,opts);if(existingOut)return existingOut;switch(page){case"generic":case"hover":return null;case"subclass":case UrlUtil.PG_CLASSES:return Renderer.hover._pCacheAndGet_pLoadClasses(page,source,hash,opts);case UrlUtil.PG_SPELLS:return Renderer.hover._pCacheAndGet_pLoadMultiSource(page,source,hash,opts,`data/spells/`,"spell",Renderer.spell.prePopulateHover);case UrlUtil.PG_BESTIARY:return Renderer.hover._pCacheAndGet_pLoadBestiary(page,source,hash,opts);case UrlUtil.PG_ITEMS:return Renderer.hover._pCacheAndGet_pLoadItems(page,source,hash,opts);case UrlUtil.PG_BACKGROUNDS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"backgrounds.json","background");case"raw_feat":case UrlUtil.PG_FEATS:return Renderer.hover._pCacheAndGet_pLoadSimple(UrlUtil.PG_FEATS,source,hash,opts,"feats.json","feat");case"raw_optionalfeature":case UrlUtil.PG_OPT_FEATURES:return Renderer.hover._pCacheAndGet_pLoadSimple(UrlUtil.PG_OPT_FEATURES,source,hash,opts,"optionalfeatures.json","optionalfeature");case UrlUtil.PG_PSIONICS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"psionics.json","psionic");case"raw_reward":case UrlUtil.PG_REWARDS:return Renderer.hover._pCacheAndGet_pLoadSimple(UrlUtil.PG_REWARDS,source,hash,opts,"rewards.json","reward");case UrlUtil.PG_RACES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"races.json",["race","subrace"],null,"race");case UrlUtil.PG_DEITIES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"deities.json","deity",null,"deity");case UrlUtil.PG_OBJECTS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"objects.json","object");case UrlUtil.PG_TRAPS_HAZARDS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"trapshazards.json",["trap","hazard"]);case UrlUtil.PG_VARIANTRULES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"variantrules.json","variantrule",null,"variantrule");case UrlUtil.PG_CULTS_BOONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"cultsboons.json",["cult","boon"],((listProp,item)=>item.__prop=listProp));case UrlUtil.PG_CONDITIONS_DISEASES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"conditionsdiseases.json",["condition","disease","status"],((listProp,item)=>item.__prop=listProp));case UrlUtil.PG_TABLES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"tables.json",["table","tableGroup"],((listProp,item)=>item.__prop=listProp),"table");case UrlUtil.PG_VEHICLES:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"vehicles.json",["vehicle","vehicleUpgrade"]);case UrlUtil.PG_ACTIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"actions.json","action");case UrlUtil.PG_LANGUAGES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"languages.json","language",null,"language");case"raw_charoption":case UrlUtil.PG_CHAR_CREATION_OPTIONS:return Renderer.hover._pCacheAndGet_pLoadSimple(UrlUtil.PG_CHAR_CREATION_OPTIONS,source,hash,opts,"charcreationoptions.json","charoption");case UrlUtil.PG_RECIPES:return Renderer.hover._pCacheAndGet_pLoadCustom(page,source,hash,opts,"recipes.json","recipe",null,"recipe");case UrlUtil.PG_CLASS_SUBCLASS_FEATURES:return Renderer.hover._pCacheAndGet_pLoadClassSubclassFeatures(page,source,hash,opts);case UrlUtil.PG_QUICKREF:return Renderer.hover._pCacheAndGet_pLoadQuickref(page,source,hash,opts);case UrlUtil.PG_ADVENTURE:return Renderer.hover._pCacheAndGet_pLoadAdventure(page,source,hash,opts);case`fluff__${UrlUtil.PG_BESTIARY}`:return Renderer.hover._pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,`data/bestiary/`,"monsterFluff");case`fluff__${UrlUtil.PG_SPELLS}`:return Renderer.hover._pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,`data/spells/`,"spellFluff");case`fluff__${UrlUtil.PG_BACKGROUNDS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-backgrounds.json","backgroundFluff");case`fluff__${UrlUtil.PG_ITEMS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-items.json","itemFluff");case`fluff__${UrlUtil.PG_CONDITIONS_DISEASES}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-conditionsdiseases.json",["conditionFluff","diseaseFluff"]);case`fluff__${UrlUtil.PG_RACES}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-races.json","raceFluff");case`fluff__${UrlUtil.PG_LANGUAGES}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-languages.json","languageFluff");case`fluff__${UrlUtil.PG_VEHICLES}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-vehicles.json","vehicleFluff");case`fluff__${UrlUtil.PG_CHAR_CREATION_OPTIONS}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-charcreationoptions.json","charoptionFluff");case`fluff__${UrlUtil.PG_RECIPES}`:return Renderer.hover._pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,"fluff-recipes.json","recipeFluff");case"classfeature":return Renderer.hover._pCacheAndGet_pLoadClassFeatures(page,source,hash,opts);case"subclassfeature":return Renderer.hover._pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts);case"raw_class":case"raw_subclass":return Renderer.hover._pCacheAndGet_pLoadClassesRaw(page,source,hash,opts);case"raw_classfeature":return Renderer.hover._pCacheAndGet_pLoadClassFeatures(page,source,hash,opts);case"raw_subclassfeature":return Renderer.hover._pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts);case"legendarygroup":return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"bestiary/legendarygroups.json","legendaryGroup");case"itementry":return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,opts,"items-base.json","itemEntry");default:throw new Error(`No load function defined for page ${page}`)}},async _pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,pFnLoad){if(Renderer.hover._psCacheLoading[loadKey])await Renderer.hover._psCacheLoading[loadKey];if(!Renderer.hover._flagsCacheLoaded[loadKey]||!Renderer.hover.isCached(page,source,hash)){Renderer.hover._psCacheLoading[loadKey]=(async()=>{await pFnLoad();Renderer.hover._flagsCacheLoaded[loadKey]=true})();await Renderer.hover._psCacheLoading[loadKey]}if(!Renderer.hover.isCached(page,source,hash)&&!Renderer.hover._hasBrewSourceBeenAttempted(source)){Renderer.hover._setHasBrewSourceBeenAttempted(source);return Renderer.hover._pDoLoadFromBrew(page,source,hash)}},_pCacheAndGet_populate(page,data,listProp,opts){opts=opts||{};data[listProp].forEach((it=>{const itHash=(opts.fnGetHash||UrlUtil.URL_TO_HASH_BUILDER[page])(it);if(opts.fnMutateItem)opts.fnMutateItem(listProp,it);Renderer.hover._addToCache(page,it.source,itHash,it)}))},async _pCacheAndGet_pLoadMultiSource(page,source,hash,opts,baseUrl,listProp,fnPrePopulate=null){const loadKey=`${page}${source}`;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();if(fnPrePopulate)fnPrePopulate(brewData,{isBrew:true});if(brewData[listProp])Renderer.hover._pCacheAndGet_populate(page,brewData,listProp,{fnGetHash:opts.fnGetHash});const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${baseUrl}${opts.isFluff?"fluff-":""}index.json`);const officialSources={};Object.entries(index).forEach((([k,v])=>officialSources[k.toLowerCase()]=v));const officialSource=officialSources[source.toLowerCase()];if(officialSource){const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}${baseUrl}${officialSource}`);if(fnPrePopulate)fnPrePopulate(data,{isBrew:false});Renderer.hover._pCacheAndGet_populate(page,data,listProp,{fnGetHash:opts.fnGetHash})}}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadMultiSourceFluff(page,source,hash,opts,baseUrl,listProp,fnPrePopulate=null){const nxtOpts=MiscUtil.copy(opts);nxtOpts.isFluff=true;nxtOpts.fnGetHash=it=>UrlUtil.encodeForHash([it.name,it.source]);return Renderer.hover._pCacheAndGet_pLoadMultiSource(page,source,hash,nxtOpts,baseUrl,listProp)},async _pCacheAndGet_pLoadSingleBrew(page,opts,listProps,fnMutateItem){const brewData=await BrewUtil.pAddBrewData();Renderer.hover._pCacheAndGet_doCacheBrewData(brewData,page,opts,listProps,fnMutateItem)},async _pCacheAndGet_pLoadCustomBrew(page,opts,listProps,fnMutateItem,loader){const brewData=await DataUtil[loader].loadBrew();Renderer.hover._pCacheAndGet_doCacheBrewData(brewData,page,opts,listProps,fnMutateItem)},_pCacheAndGet_doCacheBrewData(brewData,page,opts,listProps,fnMutateItem){listProps=listProps instanceof Array?listProps:[listProps];listProps.forEach((lp=>{if(brewData[lp])Renderer.hover._pCacheAndGet_populate(page,brewData,lp,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash})}))},_pCacheAndGet_handleSingleData(page,opts,data,listProps,fnMutateItem){if(listProps instanceof Array)listProps.forEach((prop=>data[prop]&&Renderer.hover._pCacheAndGet_populate(page,data,prop,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash})));else Renderer.hover._pCacheAndGet_populate(page,data,listProps,{fnMutateItem:fnMutateItem,fnGetHash:opts.fnGetHash})},async _pCacheAndGet_pLoadSimple(page,source,hash,opts,jsonFile,listProps,fnMutateItem){const loadKey=jsonFile;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{await Renderer.hover._pCacheAndGet_pLoadSingleBrew(page,opts,listProps,fnMutateItem);const data=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/${jsonFile}`);Renderer.hover._pCacheAndGet_handleSingleData(page,opts,data,listProps,fnMutateItem)}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadSimpleFluff(page,source,hash,opts,jsonFile,listProps,fnMutateItem){const nxtOpts=MiscUtil.copy(opts);nxtOpts.isFluff=true;nxtOpts.fnGetHash=it=>UrlUtil.encodeForHash([it.name,it.source]);return Renderer.hover._pCacheAndGet_pLoadSimple(page,source,hash,nxtOpts,jsonFile,listProps,fnMutateItem)},async _pCacheAndGet_pLoadCustom(page,source,hash,opts,jsonFile,listProps,itemModifier,loader){const loadKey=jsonFile;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{if(DataUtil[loader].loadBrew)await Renderer.hover._pCacheAndGet_pLoadCustomBrew(page,opts,listProps,itemModifier,loader);else await Renderer.hover._pCacheAndGet_pLoadSingleBrew(page,opts,listProps,itemModifier);const data=await DataUtil[loader].loadJSON();Renderer.hover._pCacheAndGet_handleSingleData(page,opts,data,listProps,itemModifier)}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadBestiary(page,source,hash,opts){await DataUtil.monster.pPreloadMeta();return Renderer.hover._pCacheAndGet_pLoadMultiSource(page,source,hash,opts,`data/bestiary/`,"monster",(data=>DataUtil.monster.populateMetaReference(data)))},async _pCacheAndGet_pLoadItems(page,source,hash,opts){const loadKey=UrlUtil.PG_ITEMS;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const allItems=await Renderer.item.pBuildList({isAddGroups:true,isBlacklistVariants:true});const brewData=await BrewUtil.pAddBrewData();const itemList=await Renderer.item.pGetItemsFromHomebrew(brewData);itemList.forEach((it=>{const itHash=UrlUtil.URL_TO_HASH_BUILDER[page](it);Renderer.hover._addToCache(page,it.source,itHash,it);const revName=Renderer.item.modifierPostToPre(it);if(revName)Renderer.hover._addToCache(page,it.source,UrlUtil.URL_TO_HASH_BUILDER[page](revName),it)}));allItems.forEach((item=>{const itemHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_ITEMS](item);Renderer.hover._addToCache(page,item.source,itemHash,item);const revName=Renderer.item.modifierPostToPre(item);if(revName)Renderer.hover._addToCache(page,item.source,UrlUtil.URL_TO_HASH_BUILDER[page](revName),item)}))}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadQuickref(page,source,hash,opts){const loadKey=UrlUtil.PG_QUICKREF;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const json=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/generated/bookref-quick.json`);json.data["bookref-quick"].forEach(((chapter,ixChapter)=>{const metas=IndexableFileQuickReference.getChapterNameMetas(chapter);metas.forEach((nameMeta=>{const hashParts=["bookref-quick",ixChapter,UrlUtil.encodeForHash(nameMeta.name.toLowerCase())];if(nameMeta.ixBook)hashParts.push(nameMeta.ixBook);const hash=hashParts.join(HASH_PART_SEP);Renderer.hover._addToCache(page,nameMeta.source,hash,nameMeta.entry)}))}))}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadAdventure(page,source,hash,opts){const loadKey=`${page}${source}`;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brew=await BrewUtil.pAddBrewData();const brewDataIds=(brew.adventureData||[]).filter((it=>it.id)).map((it=>it.id));const brewContentsIds=new Set(...(brew.adventure||[]).filter((it=>it.id)).map((it=>it.id)));const matchingBrewIds=brewDataIds.filter((id=>brewContentsIds.has(id)));matchingBrewIds.forEach((id=>{const brewData=(brew.adventureData||[]).find((it=>it.id===id));const brewContents=(brew.adventure||[]).find((it=>it.id===id));const pack={adventure:brewContents,adventureData:brewData};const hash=UrlUtil.URL_TO_HASH_BUILDER[page](brewContents);Renderer.hover._addToCache(page,brewContents.source,hash,pack)}));const index=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/adventures.json`);const fromIndex=index.adventure.find((it=>UrlUtil.URL_TO_HASH_BUILDER[page](it)===hash));if(fromIndex){const json=await DataUtil.loadJSON(`${Renderer.get().baseUrl}data/adventure/adventure-${hash}.json`);const pack={adventure:fromIndex,adventureData:json};Renderer.hover._addToCache(page,fromIndex.source,hash,pack)}}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadClasses(page,source,hash,opts){const loadKey=UrlUtil.PG_CLASSES;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const classData=await DataUtil.class.loadJSON();const brewData=await BrewUtil.pAddBrewData();await Promise.all((brewData.class||[]).map((cc=>Renderer.hover._pCacheAndGet_pLoadClasses_addToIndex(cc))));for(const sc of brewData.subclass||[])await Renderer.hover._pCacheAndGet_pLoadClasses_addSubclassToIndex(sc);await Promise.all(classData.class.map((cc=>Renderer.hover._pCacheAndGet_pLoadClasses_addToIndex(cc))));for(const sc of classData.subclass||[])await Renderer.hover._pCacheAndGet_pLoadClasses_addSubclassToIndex(sc)}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadClasses_addToIndex(cls,{isRaw:isRaw=false}={}){const clsHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES](cls);if(isRaw){Renderer.hover._addToCache("raw_class",cls.source||SRC_PHB,clsHash,cls);return}cls=await DataUtil.class.pGetDereferencedClassData(cls);const clsEntries={name:cls.name,type:"section",entries:MiscUtil.copy((cls.classFeatures||[]).flat())};Renderer.hover._addToCache(UrlUtil.PG_CLASSES,cls.source||SRC_PHB,clsHash,clsEntries);UrlUtil.class.getIndexedClassEntries(cls).forEach((it=>Renderer.hover._addToCache(UrlUtil.PG_CLASSES,it.source,it.hash,it.entry)))},async _pCacheAndGet_pLoadClasses_addSubclassToIndex(sc,{isRaw:isRaw=false}={}){const clsHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_CLASSES]({name:sc.className,source:sc.classSource});const scHash=`${clsHash}${HASH_PART_SEP}${UrlUtil.getClassesPageStatePart({subclass:sc})}`;if(isRaw){Renderer.hover._addToCache("raw_subclass",sc.source||SRC_PHB,scHash,sc);return}sc=await DataUtil.class.pGetDereferencedSubclassData(sc);const scEntries={type:"section",entries:MiscUtil.copy((sc.subclassFeatures||[]).flat())};Renderer.hover._addToCache(UrlUtil.PG_CLASSES,sc.classSource||sc.source||SRC_PHB,scHash,scEntries);Renderer.hover._addToCache(UrlUtil.PG_CLASSES,sc.source||SRC_PHB,scHash,scEntries);UrlUtil.class.getIndexedSubclassEntries(sc).forEach((it=>Renderer.hover._addToCache(UrlUtil.PG_CLASSES,it.source,it.hash,it.entry)))},async _pCacheAndGet_pLoadClassesRaw(page,source,hash,opts){const loadKey="raw_class";const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const classData=await DataUtil.class.loadRawJSON();const brewData=await BrewUtil.pAddBrewData();await Promise.all((brewData.class||[]).map((cc=>Renderer.hover._pCacheAndGet_pLoadClasses_addToIndex(cc,{isRaw:true}))));for(const sc of brewData.subclass||[])await Renderer.hover._pCacheAndGet_pLoadClasses_addSubclassToIndex(sc,{isRaw:true});await Promise.all(classData.class.map((cc=>Renderer.hover._pCacheAndGet_pLoadClasses_addToIndex(cc,{isRaw:true}))));for(const sc of classData.subclass||[])await Renderer.hover._pCacheAndGet_pLoadClasses_addSubclassToIndex(sc,{isRaw:true})}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadClassSubclassFeatures(page,source,hash,opts){const uid=UrlUtil.decodeHash(hash).join("|");if(DataUtil.class.isValidSubclassFeatureUid(uid))return Renderer.hover._pCacheAndGet_pLoadClassFeatures("subclassfeature",source,hash,opts);return Renderer.hover._pCacheAndGet_pLoadClassFeatures("classfeature",source,hash,opts)},async _pCacheAndGet_pLoadClassFeatures(page,source,hash,opts){const loadKey=page;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();await Renderer.hover.pDoDereferenceNestedAndCache(brewData.classFeature,"classFeature",UrlUtil.URL_TO_HASH_BUILDER["classFeature"]);await Renderer.hover._pCacheAndGet_pLoadOfficialClassAndSubclassFeatures()}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},async _pCacheAndGet_pLoadSubclassFeatures(page,source,hash,opts){const loadKey=page;const isNotLoadedAndIsSourceAvailableBrew=await Renderer.hover._pCacheAndGet_pDoLoadWithLock(page,source,hash,loadKey,(async()=>{const brewData=await BrewUtil.pAddBrewData();await Renderer.hover.pDoDereferenceNestedAndCache(brewData.subclassFeature,"subclassFeature",UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]);await Renderer.hover._pCacheAndGet_pLoadOfficialClassAndSubclassFeatures()}));if(isNotLoadedAndIsSourceAvailableBrew)return Renderer.hover.pCacheAndGet(page,source,hash);return Renderer.hover.getFromCache(page,source,hash,opts)},_REF_TYPES:new Set(["refClassFeature","refSubclassFeature","refOptionalfeature","refItemEntry"]),async pDoDereferenceNestedAndCache(entities,page,fnGetHash,{isMutateOriginal:isMutateOriginal=false,entryProp:entryProp="entries"}={}){if(!entities||!entities.length)return;const entriesWithRefs={};const entriesWithoutRefs={};const ptrHasRef={_:false};const walker=MiscUtil.getWalker({keyBlacklist:MiscUtil.GENERIC_WALKER_ENTRIES_KEY_BLACKLIST,isNoModification:true});const walkerMod=MiscUtil.getWalker({keyBlacklist:MiscUtil.GENERIC_WALKER_ENTRIES_KEY_BLACKLIST});const handlers={object:obj=>{if(ptrHasRef._)return obj;if(Renderer.hover._REF_TYPES.has(obj.type))ptrHasRef._=true;return obj},string:str=>{if(ptrHasRef._)return str;if(str.startsWith("{#")&&str.endsWith("}"))ptrHasRef._=true;return str}};entities.forEach((ent=>{const hash=fnGetHash(ent);if(!isMutateOriginal)Renderer.hover._addToCache(`raw_${page}`,ent.source,hash,ent);ptrHasRef._=false;walker.walk(ent[entryProp],handlers);(ptrHasRef._?entriesWithRefs:entriesWithoutRefs)[hash]=isMutateOriginal?ent:ptrHasRef._?MiscUtil.copy(ent):ent}));let cntDerefLoops=0;while(Object.keys(entriesWithRefs).length&&cntDerefLoops<25){const hashes=Object.keys(entriesWithRefs);for(const hash of hashes){const ent=entriesWithRefs[hash];const toReplaceMetas=[];walker.walk(ent[entryProp],{array:arr=>{for(let i=0;i<arr.length;++i){const it=arr[i];if(Renderer.hover._REF_TYPES.has(it.type)){toReplaceMetas.push({...it,array:arr,ix:i})}else if(typeof it==="string"&&it.startsWith("{#")&&it.endsWith("}")){toReplaceMetas.push({string:it,array:arr,ix:i})}}return arr}});let cntReplaces=0;for(let iReplace=0;iReplace<toReplaceMetas.length;++iReplace){const toReplaceMeta=Renderer.hover._pDoDereferenceNestedAndCache_getToReplaceMeta(toReplaceMetas[iReplace]);switch(toReplaceMeta.type){case"refClassFeature":case"refSubclassFeature":{const prop=toReplaceMeta.type==="refClassFeature"?"classFeature":"subclassFeature";const refUnpacked=toReplaceMeta.type==="refClassFeature"?DataUtil.class.unpackUidClassFeature(toReplaceMeta.classFeature):DataUtil.class.unpackUidSubclassFeature(toReplaceMeta.subclassFeature);const refHash=UrlUtil.URL_TO_HASH_BUILDER[prop](refUnpacked);if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(refHash,prop,refUnpacked.source,{isNoCount:true})){cntReplaces++;toReplaceMeta.array[toReplaceMeta.ix]={};break}const cpy=entriesWithoutRefs[refHash]?MiscUtil.copy(entriesWithoutRefs[refHash]):Renderer.hover.getFromCache(prop,refUnpacked.source,refHash,{isCopy:true});if(cpy){cntReplaces++;delete cpy.className;delete cpy.classSource;delete cpy.subclassShortName;delete cpy.subclassSource;delete cpy.level;delete cpy.header;if(ent.source===cpy.source)delete cpy.source;if(ent.page===cpy.page)delete cpy.page;if(toReplaceMeta.name)cpy.name=toReplaceMeta.name;toReplaceMeta.array[toReplaceMeta.ix]=cpy}break}case"refOptionalfeature":{const refUnpacked=DataUtil.generic.unpackUid(toReplaceMeta.optionalfeature,"optfeature");const refHash=UrlUtil.URL_TO_HASH_BUILDER[UrlUtil.PG_OPT_FEATURES](refUnpacked);if(ExcludeUtil.isInitialised&&ExcludeUtil.isExcluded(refHash,"optionalfeature",refUnpacked.source,{isNoCount:true})){cntReplaces++;toReplaceMeta.array[toReplaceMeta.ix]={};break}const cpy=await Renderer.hover.pCacheAndGetHash(UrlUtil.PG_OPT_FEATURES,refHash,{isCopy:true});if(cpy){cntReplaces++;delete cpy.featureType;delete cpy.prerequisite;if(ent.source===cpy.source)delete cpy.source;if(ent.page===cpy.page)delete cpy.page;if(toReplaceMeta.name)cpy.name=toReplaceMeta.name;toReplaceMeta.array[toReplaceMeta.ix]=cpy}break}case"refItemEntry":{const refUnpacked=DataUtil.generic.unpackUid(toReplaceMeta.itemEntry,"itemEntry");const refHash=UrlUtil.URL_TO_HASH_BUILDER["itemEntry"](refUnpacked);const cpy=await Renderer.hover.pCacheAndGetHash("itemEntry",refHash,{isCopy:true});if(cpy){cntReplaces++;cpy.entriesTemplate=walkerMod.walk(cpy.entriesTemplate,{string:str=>Renderer.utils.applyTemplate(ent,str)});toReplaceMeta.array.splice(toReplaceMeta.ix,1,...cpy.entriesTemplate);toReplaceMetas.slice(iReplace+1).forEach((it=>it.ix+=cpy.entriesTemplate.length-1))}break}}}if(cntReplaces===toReplaceMetas.length){delete entriesWithRefs[hash];entriesWithoutRefs[hash]=ent}}cntDerefLoops++}Object.values(entriesWithoutRefs).forEach((ent=>{Renderer.hover._addToCache(page,ent.source,fnGetHash(ent),ent)}));const entriesWithRefsVals=Object.values(entriesWithRefs);if(entriesWithRefsVals.length){const missingRefSets={};walker.walk(entriesWithRefsVals,{object:obj=>{switch(obj.type){case"refClassFeature":(missingRefSets["classFeature"]=missingRefSets["classFeature"]||new Set).add(obj.classFeature);break;case"refSubclassFeature":(missingRefSets["subclassFeature"]=missingRefSets["subclassFeature"]||new Set).add(obj.subclassFeature);break;case"refOptionalfeature":(missingRefSets["optionalfeature"]=missingRefSets["optionalfeature"]||new Set).add(obj.optionalfeature);break;case"refItemEntry":(missingRefSets["itemEntry"]=missingRefSets["itemEntry"]||new Set).add(obj.itemEntry);break}}});const printableRefs=Object.entries(missingRefSets).map((([k,v])=>`${k}: ${[...v].sort(SortUtil.ascSortLower).join(", ")}`)).join("; ");JqueryUtil.doToast({type:"danger",content:`Failed to load references for ${entriesWithRefsVals.length} entr${entriesWithRefsVals.length===1?"y":"ies"}! Reference types and values were: ${printableRefs}`})}entriesWithRefsVals.forEach((ent=>{Renderer.hover._addToCache(page,ent.source,fnGetHash(ent),ent)}))},_pDoDereferenceNestedAndCache_getToReplaceMeta(toReplaceMetaRaw){if(toReplaceMetaRaw.string==null)return toReplaceMetaRaw;const str=toReplaceMetaRaw.string;delete toReplaceMetaRaw.string;return{...toReplaceMetaRaw,...Renderer.hover.getRefMetaFromTag(str)}},getRefMetaFromTag(str){str=str.slice(2,-1);const[tag,...refParts]=str.split(" ");const ref=refParts.join(" ");const type=`ref${tag.uppercaseFirst()}`;return{type:type,[tag]:ref}},async _pCacheAndGet_pLoadOfficialClassAndSubclassFeatures(){const lockKey="classFeature__subclassFeature";if(Renderer.hover._flags[lockKey])return;if(!Renderer.hover._locks[lockKey])Renderer.hover._locks[lockKey]=new VeLock;await Renderer.hover._locks[lockKey].pLock();if(Renderer.hover._flags[lockKey])return;try{const rawClassData=await DataUtil.class.loadRawJSON();await Renderer.hover.pDoDereferenceNestedAndCache(rawClassData.classFeature,"classFeature",UrlUtil.URL_TO_HASH_BUILDER["classFeature"]);await Renderer.hover.pDoDereferenceNestedAndCache(rawClassData.subclassFeature,"subclassFeature",UrlUtil.URL_TO_HASH_BUILDER["subclassFeature"]);Renderer.hover._flags[lockKey]=true}finally{Renderer.hover._locks[lockKey].unlock()}},getGenericCompactRenderedString(entry,depth=0){return`\n\t\t\t<tr class="text homebrew-hover"><td colspan="6">\n\t\t\t${Renderer.get().setFirstSection(true).render(entry,depth)}\n\t\t\t</td></tr>\n\t\t`},getFnRenderCompact(page){switch(page){case"generic":case"hover":return Renderer.hover.getGenericCompactRenderedString;case UrlUtil.PG_QUICKREF:case UrlUtil.PG_CLASSES:return Renderer.hover.getGenericCompactRenderedString;case UrlUtil.PG_SPELLS:return Renderer.spell.getCompactRenderedString;case UrlUtil.PG_ITEMS:return Renderer.item.getCompactRenderedString;case UrlUtil.PG_BESTIARY:return it=>Renderer.monster.getCompactRenderedString(it,null,{isShowScalers:true,isScaledCr:it._originalCr!=null,isScaledSummon:it._isScaledSummon});case UrlUtil.PG_CONDITIONS_DISEASES:return Renderer.condition.getCompactRenderedString;case UrlUtil.PG_BACKGROUNDS:return Renderer.background.getCompactRenderedString;case UrlUtil.PG_FEATS:return Renderer.feat.getCompactRenderedString;case UrlUtil.PG_OPT_FEATURES:return Renderer.optionalfeature.getCompactRenderedString;case UrlUtil.PG_PSIONICS:return Renderer.psionic.getCompactRenderedString;case UrlUtil.PG_REWARDS:return Renderer.reward.getCompactRenderedString;case UrlUtil.PG_RACES:return Renderer.race.getCompactRenderedString;case UrlUtil.PG_DEITIES:return Renderer.deity.getCompactRenderedString;case UrlUtil.PG_OBJECTS:return Renderer.object.getCompactRenderedString;case UrlUtil.PG_TRAPS_HAZARDS:return Renderer.traphazard.getCompactRenderedString;case UrlUtil.PG_VARIANTRULES:return Renderer.variantrule.getCompactRenderedString;case UrlUtil.PG_CULTS_BOONS:return Renderer.cultboon.getCompactRenderedString;case UrlUtil.PG_TABLES:return Renderer.table.getCompactRenderedString;case UrlUtil.PG_VEHICLES:return Renderer.vehicle.getCompactRenderedString;case UrlUtil.PG_ACTIONS:return Renderer.action.getCompactRenderedString;case UrlUtil.PG_LANGUAGES:return Renderer.language.getCompactRenderedString;case UrlUtil.PG_CHAR_CREATION_OPTIONS:return Renderer.charoption.getCompactRenderedString;case UrlUtil.PG_RECIPES:return Renderer.recipe.getCompactRenderedString;case UrlUtil.PG_CLASS_SUBCLASS_FEATURES:return Renderer.hover.getGenericCompactRenderedString;case"classfeature":case"classFeature":return Renderer.hover.getGenericCompactRenderedString;case"subclassfeature":case"subclassFeature":return Renderer.hover.getGenericCompactRenderedString;default:return null}},_pageToFluffFn(page){switch(page){case UrlUtil.PG_BESTIARY:return Renderer.monster.pGetFluff;case UrlUtil.PG_ITEMS:return Renderer.item.pGetFluff;case UrlUtil.PG_CONDITIONS_DISEASES:return Renderer.condition.pGetFluff;case UrlUtil.PG_SPELLS:return Renderer.spell.pGetFluff;case UrlUtil.PG_RACES:return Renderer.race.pGetFluff;case UrlUtil.PG_BACKGROUNDS:return Renderer.background.pGetFluff;case UrlUtil.PG_LANGUAGES:return Renderer.language.pGetFluff;case UrlUtil.PG_VEHICLES:return Renderer.vehicle.pGetFluff;case UrlUtil.PG_CHAR_CREATION_OPTIONS:return Renderer.charoption.pGetFluff;case UrlUtil.PG_RECIPES:return Renderer.recipe.pGetFluff;default:return null}},isSmallScreen(evt){evt=evt||{};const win=(evt.view||{}).window||window;return win.innerWidth<=768},bindPopoutButton($btnPop,toList,opts){opts=opts||{};$btnPop.off("click").title(opts.title||"Popout Window (SHIFT for Source Data)");$btnPop.on("click",opts.handlerGenerator?opts.handlerGenerator(toList):evt=>{if(Hist.lastLoadedId!==null){const toRender=opts.fnGetToRender?opts.fnGetToRender():toList[Hist.lastLoadedId];if(evt.shiftKey){const $content=Renderer.hover.$getHoverContent_statsCode(toRender);Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{title:`${toRender.name} — Source Data`,isPermanent:true,isBookContent:true})}else{Renderer.hover.doPopoutCurPage(evt,toRender)}}})},$getHoverContent_stats(page,toRender,opts,renderFnOpts){opts=opts||{};if(page===UrlUtil.PG_RECIPES)opts={...MiscUtil.copy(opts),isBookContent:true};const renderFn=Renderer.hover.getFnRenderCompact(page);return $$`<table class="stats ${opts.isBookContent?`stats--book`:""}">${renderFn(toRender,renderFnOpts)}</table>`},$getHoverContent_fluff(page,toRender,opts,renderFnOpts){opts=opts||{};if(page===UrlUtil.PG_RECIPES)opts={...MiscUtil.copy(opts),isBookContent:true};if(!toRender){return $$`<table class="stats ${opts.isBookContent?`stats--book`:""}"><tr class="text"><td colspan="6" class="p-2 text-center">${Renderer.utils.HTML_NO_INFO}</td></tr></table>`}toRender=MiscUtil.copy(toRender);if(toRender.images&&toRender.images.length){const cachedImages=MiscUtil.copy(toRender.images);delete toRender.images;toRender.entries=toRender.entries||[];const hasText=toRender.entries.length>0;if(hasText)toRender.entries.unshift({type:"hr"});cachedImages[0].maxHeight=33;cachedImages[0].maxHeightUnits="vh";toRender.entries.unshift(cachedImages[0]);if(cachedImages.length>1){if(hasText)toRender.entries.push({type:"hr"});toRender.entries.push(...cachedImages.slice(1))}}return $$`<table class="stats ${opts.isBookContent?`stats--book`:""}">${Renderer.generic.getCompactRenderedString(toRender,renderFnOpts)}</table>`},$getHoverContent_statsCode(toRender){const cleanCopy=DataUtil.cleanJson(MiscUtil.copy(toRender));return Renderer.hover.$getHoverContent_miscCode(`${cleanCopy.name} — Source Data`,JSON.stringify(cleanCopy,null,"\t"))},$getHoverContent_miscCode(name,code){const toRenderCode={type:"code",name:name,preformatted:code};return $$`<table class="stats stats--book">${Renderer.get().render(toRenderCode)}</table>`},$getHoverContent_generic(toRender,opts){opts=opts||{};return $$`<table class="stats ${opts.isBookContent||opts.isLargeBookContent?"stats--book":""} ${opts.isLargeBookContent?"stats--book-large":""}">${Renderer.hover.getGenericCompactRenderedString(toRender,opts.depth||0)}</table>`},doPopoutCurPage(evt,entity){const page=UrlUtil.getCurrentPage();const $content=Renderer.hover.$getHoverContent_stats(page,entity);Renderer.hover.getShowWindow($content,Renderer.hover.getWindowPositionFromEvent(evt),{pageUrl:`#${UrlUtil.autoEncodeHash(entity)}`,title:entity._displayName||entity.name,isPermanent:true,isBookContent:page===UrlUtil.PG_RECIPES})}};Renderer.getNames=function(nameStack,entry,opts){opts=opts||{};if(opts.maxDepth==null)opts.maxDepth=false;if(opts.depth==null)opts.depth=0;if(opts.typeBlacklist&&entry.type&&opts.typeBlacklist.has(entry.type))return;if(opts.maxDepth!==false&&opts.depth>opts.maxDepth)return;if(entry.name)nameStack.push(Renderer.stripTags(entry.name));if(entry.entries){let nextDepth=entry.type==="section"?-1:entry.type==="entries"?opts.depth+1:opts.depth;for(const eX of entry.entries){const nxtOpts={...opts};nxtOpts.depth=nextDepth;Renderer.getNames(nameStack,eX,nxtOpts)}}else if(entry.items){for(const eX of entry.items){Renderer.getNames(nameStack,eX,opts)}}};Renderer.getNumberedNames=function(entry){const renderer=(new Renderer).setTrackTitles(true);renderer.render(entry);const titles=renderer.getTrackedTitles();const out={};Object.entries(titles).forEach((([k,v])=>{v=Renderer.stripTags(v);out[v]=Number(k)}));return out};Renderer.findName=function(entry){function search(it){if(it instanceof Array){for(const child of it){const n=search(child);if(n)return n}}else if(it instanceof Object){if(it.name)return it.name;else{for(const child of Object.values(it)){const n=search(child);if(n)return n}}}}return search(entry)};Renderer.stripTags=function(str){if(!str)return str;let nxtStr=Renderer._stripTagLayer(str);while(nxtStr.length!==str.length){str=nxtStr;nxtStr=Renderer._stripTagLayer(str)}return nxtStr};Renderer._stripTagLayer=function(str){if(str.includes("{@")){const tagSplit=Renderer.splitByTags(str);return tagSplit.filter((it=>it)).map((it=>{if(it.startsWith("{@")){let[tag,text]=Renderer.splitFirstSpace(it.slice(1,-1));text=text.replace(/<\$([^$]+)\$>/gi,"");switch(tag){case"@b":case"@bold":case"@i":case"@italic":case"@s":case"@strike":case"@u":case"@underline":return text;case"@h":return"Hit: ";case"@dc":return`DC ${text}`;case"@atk":return Renderer.attackTagToFull(text);case"@chance":case"@d20":case"@damage":case"@dice":case"@hit":case"@recharge":case"@ability":case"@savingThrow":case"@skillCheck":{const[rollText,displayText]=Renderer.splitTagByPipe(text);switch(tag){case"@damage":case"@dice":{return displayText||rollText.replace(/;/g,"/")}case"@d20":case"@hit":{return displayText||(()=>{const n=Number(rollText);if(!isNaN(n))return`${n>=0?"+":""}${n}`;return rollText})()}case"@recharge":{const asNum=Number(rollText||6);if(isNaN(asNum)){throw new Error(`Could not parse "${rollText}" as a number!`)}return`(Recharge ${asNum}${asNum<6?`–6`:""})`}case"@chance":{return displayText||`${rollText} percent`}case"@ability":{const[abil,rawScore]=rollText.split(" ").map((it=>it.trim().toLowerCase())).filter(Boolean);const score=Number(rawScore)||0;return displayText||`${score} (${Parser.getAbilityModifier(score)})`}case"@savingThrow":case"@skillCheck":{return displayText||rollText}}throw new Error(`Unhandled tag: ${tag}`)}case"@hitYourSpellAttack":return"your spell attack modifier";case"@comic":case"@comicH1":case"@comicH2":case"@comicH3":case"@comicH4":case"@comicNote":case"@note":case"@sense":case"@skill":{return text}case"@5etools":case"@adventure":case"@book":case"@filter":case"@footnote":case"@link":case"@scaledice":case"@scaledamage":case"@loader":case"@color":case"@highlight":case"@help":{const parts=Renderer.splitTagByPipe(text);return parts[0]}case"@area":{const[compactText,areaId,flags,...others]=Renderer.splitTagByPipe(text);return flags&&flags.includes("x")?compactText:`${flags&&flags.includes("u")?"A":"a"}rea ${compactText}`}case"@action":case"@background":case"@boon":case"@charoption":case"@class":case"@condition":case"@creature":case"@cult":case"@disease":case"@feat":case"@hazard":case"@item":case"@language":case"@object":case"@optfeature":case"@psionic":case"@race":case"@recipe":case"@reward":case"@vehicle":case"@vehupgrade":case"@spell":case"@status":case"@table":case"@trap":case"@variantrule":{const parts=Renderer.splitTagByPipe(text);return parts.length>=3?parts[2]:parts[0]}case"@deity":{const parts=Renderer.splitTagByPipe(text);return parts.length>=4?parts[3]:parts[0]}case"@classFeature":{const parts=Renderer.splitTagByPipe(text);return parts.length>=6?parts[5]:parts[0]}case"@subclassFeature":{const parts=Renderer.splitTagByPipe(text);return parts.length>=8?parts[7]:parts[0]}case"@homebrew":{const[newText,oldText]=Renderer.splitTagByPipe(text);if(newText&&oldText){return`${newText} [this is a homebrew addition, replacing the following: "${oldText}"]`}else if(newText){return`${newText} [this is a homebrew addition]`}else if(oldText){return`[the following text has been removed due to homebrew: ${oldText}]`}else throw new Error(`Homebrew tag had neither old nor new text!`)}default:throw new Error(`Unhandled tag: "${tag}"`)}}else return it})).join("")}return str};Renderer.getAutoConvertedTableRollMode=function(table){if(!table.colLabels||table.colLabels.length<2)return RollerUtil.ROLL_COL_NONE;const rollColMode=RollerUtil.getColRollType(table.colLabels[0]);if(!rollColMode)return RollerUtil.ROLL_COL_NONE;if(table.rows.some((it=>{try{return typeof it[0]!=="string"||!/^\d+([-\u2012\u2013]\d+)?/.exec(it[0])}catch(e){return true}})))return RollerUtil.ROLL_COL_NONE;return rollColMode};Renderer.getRollableRow=function(row,opts){opts=opts||{};row=MiscUtil.copy(row);try{const cleanRow=String(row[0]).trim();const mLowHigh=/^(\d+) or (lower|higher)$/i.exec(cleanRow);if(mLowHigh){row[0]={type:"cell",entry:cleanRow};if(mLowHigh[2].toLowerCase()==="lower"){row[0].roll={min:-Renderer.dice.POS_INFINITE,max:Number(mLowHigh[1])}}else{row[0].roll={min:Number(mLowHigh[1]),max:Renderer.dice.POS_INFINITE}}return row}const m=/^(\d+)([-\u2012\u2013](\d+))?$/.exec(cleanRow);if(m){if(m[1]&&!m[2]){row[0]={type:"cell",roll:{exact:Number(m[1])}};if(m[1][0]==="0")row[0].roll.pad=true;Renderer.getRollableRow._handleInfiniteOpts(row,opts)}else{row[0]={type:"cell",roll:{min:Number(m[1]),max:Number(m[3])}};if(m[1][0]==="0"||m[3][0]==="0")row[0].roll.pad=true;Renderer.getRollableRow._handleInfiniteOpts(row,opts)}}else{const m=/^(\d+)\+$/.exec(row[0]);row[0]={type:"cell",roll:{min:Number(m[1]),max:Renderer.dice.POS_INFINITE}}}}catch(e){if(opts.cbErr)opts.cbErr(row[0],e)}return row};Renderer.getRollableRow._handleInfiniteOpts=function(row,opts){if(!opts.isForceInfiniteResults)return;const isExact=row[0].roll.exact!=null;if(opts.isFirstRow){if(!isExact)row[0].roll.displayMin=row[0].roll.min;row[0].roll.min=-Renderer.dice.POS_INFINITE}if(opts.isLastRow){if(!isExact)row[0].roll.displayMax=row[0].roll.max;row[0].roll.max=Renderer.dice.POS_INFINITE}};Renderer.initLazyImageLoaders=function(){function onIntersection(obsEntries){obsEntries.forEach((entry=>{if(entry.intersectionRatio>0){Renderer._imageObserver.unobserve(entry.target);const $img=$(entry.target);$img.attr("src",$img.attr("data-src")).removeAttr("data-src")}}))}let printListener=null;const $images=$(`img[data-src]`);const config={rootMargin:"150px 0px",threshold:.01};if(Renderer._imageObserver){Renderer._imageObserver.disconnect();window.removeEventListener("beforeprint",printListener)}Renderer._imageObserver=new IntersectionObserver(onIntersection,config);$images.each(((i,image)=>Renderer._imageObserver.observe(image)));printListener=()=>{alert(`All images in the page will now be loaded. This may take a while.`);$images.each(((i,image)=>{Renderer._imageObserver.unobserve(image);const $img=$(image);$img.attr("src",$img.attr("data-src")).removeAttr("data-src")}))};window.addEventListener("beforeprint",printListener)};Renderer._imageObserver=null;Renderer.HEAD_NEG_1="rd__b--0";Renderer.HEAD_0="rd__b--1";Renderer.HEAD_1="rd__b--2";Renderer.HEAD_2="rd__b--3";Renderer.HEAD_2_SUB_VARIANT="rd__b--4";Renderer.DATA_NONE="data-none";if(typeof module!=="undefined"){module.exports.Renderer=Renderer;global.Renderer=Renderer};
Renderer.dice={SYSTEM_USER:{name:"Avandra"},POS_INFINITE:1e20,_$wrpRoll:null,_$minRoll:null,_$iptRoll:null,_$outRoll:null,_$head:null,_hist:[],_histIndex:null,_$lastRolledBy:null,_storage:null,_isManualMode:false,DICE:[4,6,8,10,12,20,100],getNextDice(faces){const idx=Renderer.dice.DICE.indexOf(faces);if(~idx)return Renderer.dice.DICE[idx+1];else return null},getPreviousDice(faces){const idx=Renderer.dice.DICE.indexOf(faces);if(~idx)return Renderer.dice.DICE[idx-1];else return null},_panel:null,bindDmScreenPanel(panel,title){if(Renderer.dice._panel){Renderer.dice.unbindDmScreenPanel()}Renderer.dice._showBox();Renderer.dice._panel=panel;panel.doPopulate_Rollbox(title)},unbindDmScreenPanel(){if(Renderer.dice._panel){$(`body`).append(Renderer.dice._$wrpRoll);Renderer.dice._panel.close$TabContent();Renderer.dice._panel=null;Renderer.dice._hideBox();Renderer.dice._$wrpRoll.removeClass("rollbox-panel")}},get$Roller(){return Renderer.dice._$wrpRoll},parseRandomise2(str){if(!str||!str.trim())return null;const wrpTree=Renderer.dice.lang.getTree3(str);if(wrpTree)return wrpTree.tree.evl({});else return null},parseAverage(str){if(!str||!str.trim())return null;const wrpTree=Renderer.dice.lang.getTree3(str);if(wrpTree)return wrpTree.tree.avg({});else return null},_showBox(){if(Renderer.dice._$wrpRoll.css("display")!=="flex"){Renderer.dice._$minRoll.hide();Renderer.dice._$wrpRoll.css("display","flex");Renderer.dice._$iptRoll.prop("placeholder",`${Renderer.dice._getRandomPlaceholder()} or "/help"`)}},_hideBox(){Renderer.dice._$minRoll.show();Renderer.dice._$wrpRoll.css("display","")},_getRandomPlaceholder(){const count=RollerUtil.randomise(10);const faces=Renderer.dice.DICE[RollerUtil.randomise(Renderer.dice.DICE.length-1)];const mod=(RollerUtil.randomise(3)-2)*RollerUtil.randomise(10);const drop=count>1&&RollerUtil.randomise(5)===5;const dropDir=drop?RollerUtil.randomise(2)===2?"h":"l":"";const dropAmount=drop?RollerUtil.randomise(count-1):null;return`${count}d${faces}${drop?`d${dropDir}${dropAmount}`:""}${mod<0?mod:mod>0?`+${mod}`:""}`},async _pInit(){const $wrpRoll=$(`<div class="rollbox"></div>`);const $minRoll=$(`<div class="rollbox-min"><span class="glyphicon glyphicon-chevron-up"></span></div>`).on("click",(()=>{Renderer.dice._showBox();Renderer.dice._$iptRoll.focus()}));const $head=$(`<div class="head-roll"><span class="hdr-roll">Dice Roller</span><span class="delete-icon glyphicon glyphicon-remove"></span></div>`).on("click",(()=>{if(!Renderer.dice._panel)Renderer.dice._hideBox()}));const $outRoll=$(`<div class="out-roll">`);const $iptRoll=$(`<input class="ipt-roll form-control" autocomplete="off" spellcheck="false">`).on("keypress",(async e=>{if(e.which===13){await Renderer.dice.pRoll2($iptRoll.val(),{isUser:true,name:"Anon"});$iptRoll.val("")}e.stopPropagation()})).on("keydown",(e=>{if(e.which===38){e.preventDefault();Renderer.dice._prevHistory()}else if(e.which===40){e.preventDefault();Renderer.dice._nextHistory()}}));$wrpRoll.append($head).append($outRoll).append($iptRoll);Renderer.dice._$wrpRoll=$wrpRoll;Renderer.dice._$minRoll=$minRoll;Renderer.dice._$head=$head;Renderer.dice._$outRoll=$outRoll;Renderer.dice._$iptRoll=$iptRoll;$(`body`).append($minRoll).append($wrpRoll);$wrpRoll.on("click",".out-roll-item-code",(evt=>Renderer.dice._$iptRoll.val($(evt.target).text()).focus()));Renderer.dice.storage=await StorageUtil.pGet(VeCt.STORAGE_ROLLER_MACRO)||{}},_prevHistory(){Renderer.dice._histIndex--;Renderer.dice._prevNextHistory_load()},_nextHistory(){Renderer.dice._histIndex++;Renderer.dice._prevNextHistory_load()},_prevNextHistory_load(){Renderer.dice._cleanHistoryIndex();const nxtVal=Renderer.dice._hist[Renderer.dice._histIndex];Renderer.dice._$iptRoll.val(nxtVal);if(nxtVal)Renderer.dice._$iptRoll[0].selectionStart=Renderer.dice._$iptRoll[0].selectionEnd=nxtVal.length},_cleanHistoryIndex:()=>{if(!Renderer.dice._hist.length){Renderer.dice._histIndex=null}else{Renderer.dice._histIndex=Math.min(Renderer.dice._hist.length,Math.max(Renderer.dice._histIndex,0))}},_addHistory:str=>{Renderer.dice._hist.push(str);Renderer.dice._histIndex=Renderer.dice._hist.length},_scrollBottom:()=>{Renderer.dice._$outRoll.scrollTop(1e10)},async pRollerClickUseData(evt,ele){const $ele=$(ele);const rollData=$ele.data("packed-dice");let name=$ele.data("roll-name");let shiftKey=evt.shiftKey;let ctrlKey=evt.ctrlKey||evt.metaKey;const options=rollData.toRoll.split(";").map((it=>it.trim())).filter(Boolean);let chosenRollData;if(options.length>1){const cpyRollData=MiscUtil.copy(rollData);const menu=ContextUtil.getMenu([new ContextUtil.Action("Choose Roll",null,{isDisabled:true}),null,...options.map((it=>new ContextUtil.Action(`Roll ${it}`,(evt=>{shiftKey=shiftKey||evt.shiftKey;ctrlKey=ctrlKey||(evt.ctrlKey||evt.metaKey);cpyRollData.toRoll=it;return cpyRollData}))))]);chosenRollData=await ContextUtil.pOpenMenu(evt,menu)}else chosenRollData=rollData;if(!chosenRollData)return;const rePrompt=/#\$prompt_number:?([^$]*)\$#/g;const results=[];let m;while(m=rePrompt.exec(chosenRollData.toRoll)){const optionsRaw=m[1];const opts={};if(optionsRaw){const spl=optionsRaw.split(",");spl.map((it=>it.trim())).forEach((part=>{const[k,v]=part.split("=").map((it=>it.trim()));switch(k){case"min":case"max":opts[k]=Number(v);break;default:opts[k]=v;break}}))}if(opts.min==null)opts.min=0;if(opts.max==null)opts.max=Renderer.dice.POS_INFINITE;if(opts.default==null)opts.default=0;const input=await InputUiUtil.pGetUserNumber(opts);if(input==null)return;results.push(input)}const rollDataCpy=MiscUtil.copy(chosenRollData);rePrompt.lastIndex=0;rollDataCpy.toRoll=rollDataCpy.toRoll.replace(rePrompt,(()=>results.shift()));let rollDataCpyToRoll;if(rollData.prompt){const sortedKeys=Object.keys(rollDataCpy.prompt.options).sort(SortUtil.ascSortLower);const menu=ContextUtil.getMenu([new ContextUtil.Action(rollDataCpy.prompt.entry,null,{isDisabled:true}),null,...sortedKeys.map((it=>{const title=rollDataCpy.prompt.mode==="psi"?`${it} point${it==="1"?"":"s"}`:`${Parser.spLevelToFull(it)} level`;return new ContextUtil.Action(title,(evt=>{shiftKey=shiftKey||evt.shiftKey;ctrlKey=ctrlKey||(evt.ctrlKey||evt.metaKey);const fromScaling=rollDataCpy.prompt.options[it];if(!fromScaling){name="";return rollDataCpy}else{name=rollDataCpy.prompt.mode==="psi"?`${it} psi activation`:`${Parser.spLevelToFull(it)}-level cast`;rollDataCpy.toRoll+=`+${fromScaling}`;return rollDataCpy}}))}))]);rollDataCpyToRoll=await ContextUtil.pOpenMenu(evt,menu)}else rollDataCpyToRoll=rollDataCpy;if(!rollDataCpyToRoll)return;await Renderer.dice.pRollerClick({shiftKey:shiftKey,ctrlKey:ctrlKey},ele,JSON.stringify(rollDataCpyToRoll),name)},__rerollNextInlineResult(ele){const $ele=$(ele);const $result=$ele.next(`.result`);const r=Renderer.dice.__rollPackedData($ele);$result.text(r)},__rollPackedData($ele){const wrpTree=Renderer.dice.lang.getTree3($ele.data("packed-dice").toRoll);return wrpTree.tree.evl({})},_pRollerClick_getMsgBug(total){return`<span class="message">No result found matching roll ${total}?! <span class="help-subtle" title="Bug!">🐛</span></span>`},async pRollerClick(evtMock,ele,packed,name){const $ele=$(ele);const entry=JSON.parse(packed);const additionalData={...ele.dataset};function attemptToGetNameOfRoll(){if(entry.name)return entry.name;let titleMaybe=$(ele).closest(`table:not(.stats)`).children(`caption`).text();if(titleMaybe)return titleMaybe.trim();titleMaybe=$(ele).parent().children(`.rd__list-item-name`).text();if(titleMaybe)return titleMaybe.trim().replace(/[.,:]$/,"");titleMaybe=$(ele).closest(`div`).children(`.rd__h`).first().find(`.entry-title-inner`).text();if(titleMaybe){titleMaybe=titleMaybe.trim().replace(/[.,:]$/,"");return titleMaybe}titleMaybe=$(ele).closest(`table.stats`).children(`tbody`).first().children(`tr`).first().find(`.rnd-name .stats-name`).text();if(titleMaybe)return titleMaybe.trim();if(UrlUtil.getCurrentPage()===UrlUtil.PG_CHARACTERS){titleMaybe=($(ele).closest(`.chr-entity__row`).find(".chr-entity__ipt-name").val()||"").trim();if(titleMaybe)return titleMaybe}return titleMaybe}function attemptToGetNameOfRoller(){const $hov=$ele.closest(`.hwin`);if($hov.length)return $hov.find(`.stats-name`).first().text();const $roll=$ele.closest(`.out-roll-wrp`);if($roll.length)return $roll.data("name");const $dispPanelTitle=$ele.closest(`.dm-screen-panel`).children(`.panel-control-title`);if($dispPanelTitle.length)return $dispPanelTitle.text().trim();let name=document.title.replace("- 5etools","").trim();return name==="DM Screen"?"Dungeon Master":name}function _$getTdsFromTotal(total){const $table=$ele.closest(`table`);const $tdRoll=$table.find(`td`).filter(((i,e)=>{const $e=$(e);if(!$e.closest(`table`).is($table))return false;return total>=Number($e.data("roll-min"))&&total<=Number($e.data("roll-max"))}));if($tdRoll.length&&$tdRoll.nextAll().length){return $tdRoll.nextAll().get()}return null}function _rollInlineRollers($ele){$ele.find(`.render-roller`).each(((i,e)=>{const $e=$(e);const r=Renderer.dice.__rollPackedData($e);$e.attr("onclick",`Renderer.dice.__rerollNextInlineResult(this)`);$e.after(` (<span class="result">${r}</span>)`)}))}function fnGetMessageTable(total){const elesTd=_$getTdsFromTotal(total);if(elesTd){const tableRow=elesTd.map((ele=>ele.innerHTML.trim())).filter((it=>it)).join(" | ");const $row=$(`<span class="message">${tableRow}</span>`);_rollInlineRollers($ele);return $row.html()}return Renderer.dice._pRollerClick_getMsgBug(total)}function fnGetMessageGeneratorTable(ix,total){const elesTd=_$getTdsFromTotal(total);if(elesTd){const $row=$(`<span class="message">${elesTd[ix].innerHTML.trim()}</span>`);_rollInlineRollers($ele);return $row.html()}return Renderer.dice._pRollerClick_getMsgBug(total)}async function pRollGeneratorTable(){Renderer.dice.addElement(rolledBy,`<i>${rolledBy.label}:</i>`);const out=[];const numRolls=Number($parent.attr("data-rd-namegeneratorrolls"));const $ths=$ele.closest(`table`).find(`th`);for(let i=0;i<numRolls;++i){const cpyRolledBy=MiscUtil.copy(rolledBy);cpyRolledBy.label=$($ths.get(i+1)).text().trim();const result=await Renderer.dice.pRollEntry(modRollMeta.entry,cpyRolledBy,{fnGetMessage:fnGetMessageGeneratorTable.bind(null,i),rollCount:modRollMeta.rollCount});const elesTd=_$getTdsFromTotal(result);if(!elesTd){out.push(`(no result)`);continue}out.push(elesTd[i].innerHTML.trim())}Renderer.dice.addElement(rolledBy,`= ${out.join(" ")}`)}const rolledBy={name:attemptToGetNameOfRoller(),label:name!=null?name:attemptToGetNameOfRoll(ele)};const modRollMeta=Renderer.dice.getEventModifiedRollMeta(evtMock,entry);const $parent=$ele.closest("th, p, table");if($parent.is("th")&&$parent.attr("data-rd-isroller")==="true"){if($parent.attr("data-rd-namegeneratorrolls")){pRollGeneratorTable()}else{Renderer.dice.pRollEntry(modRollMeta.entry,rolledBy,{fnGetMessage:fnGetMessageTable,rollCount:modRollMeta.rollCount,additionalData:additionalData})}}else Renderer.dice.pRollEntry(modRollMeta.entry,rolledBy,{rollCount:modRollMeta.rollCount,additionalData:additionalData})},getEventModifiedRollMeta(evt,entry){const out={rollCount:1,entry:entry};if(evt.shiftKey){if(entry.subType==="damage"){const dice=[];entry.toRoll.replace(/\s+/g,"").replace(/\d*?d\d+/gi,(m0=>dice.push(m0)));entry.toRoll=`${entry.toRoll}${dice.length?`+${dice.join("+")}`:""}`}else if(entry.subType==="d20"){if(entry.d20mod!=null)entry.toRoll=`2d20dl1${entry.d20mod}`;else entry.toRoll=entry.toRoll.replace(/^\s*1?\s*d\s*20/,"2d20dl1")}else out.rollCount=2}if(evt.ctrlKey||evt.metaKey){if(entry.subType==="damage"){entry.toRoll=`floor((${entry.toRoll}) / 2)`}else if(entry.subType==="d20"){if(entry.d20mod!=null)entry.toRoll=`2d20dh1${entry.d20mod}`;else entry.toRoll=entry.toRoll.replace(/^\s*1?\s*d\s*20/,"2d20dh1")}else out.rollCount=2}return out},async pRoll2(str,rolledBy,opts){opts=opts||{};str=str.trim().replace(/\/r(?:oll)? /gi,"").trim();if(!str)return;if(rolledBy.isUser)Renderer.dice._addHistory(str);if(str.startsWith("/"))Renderer.dice._handleCommand(str,rolledBy);else if(str.startsWith("#"))return Renderer.dice._pHandleSavedRoll(str,rolledBy,opts);else{const[head,...tail]=str.split(":");if(tail.length){str=tail.join(":");rolledBy.label=head}const wrpTree=Renderer.dice.lang.getTree3(str);return Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts)}},async pRollEntry(entry,rolledBy,opts){opts=opts||{};const rollCount=Math.round(opts.rollCount||1);delete opts.rollCount;if(rollCount<=0)throw new Error(`Invalid roll count: ${rollCount} (must be a positive integer)`);const wrpTree=Renderer.dice.lang.getTree3(entry.toRoll);wrpTree.tree.successThresh=entry.successThresh;wrpTree.tree.successMax=entry.successMax;const results=[];if(rollCount>1)Renderer.dice._showMessage(`Rolling twice...`,rolledBy);for(let i=0;i<rollCount;++i){const result=await Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts);if(result==null)return null;results.push(result)}return Math.max(...results)},async _pHandleRoll2(wrpTree,rolledBy,opts){opts={...opts};if(wrpTree.meta&&wrpTree.meta.hasPb){const userPb=await InputUiUtil.pGetUserNumber({min:0,int:true,title:"Enter Proficiency Bonus",default:2,storageKey_default:"dice.playerProficiencyBonus",isGlobal_default:true});if(userPb==null)return null;opts.pb=userPb}if(wrpTree.meta&&wrpTree.meta.hasSummonSpellLevel){const predefinedSpellLevel=opts.additionalData?.summonedBySpellLevel!=null&&!isNaN(opts.additionalData?.summonedBySpellLevel)?Number(opts.additionalData.summonedBySpellLevel):null;const userSummonSpellLevel=await InputUiUtil.pGetUserNumber({min:predefinedSpellLevel??0,int:true,title:"Enter Spell Level",default:predefinedSpellLevel??1});if(userSummonSpellLevel==null)return null;opts.summonSpellLevel=userSummonSpellLevel}if(Renderer.dice._isManualMode)return Renderer.dice._pHandleRoll2_manual(wrpTree.tree,rolledBy,opts);else return Renderer.dice._pHandleRoll2_automatic(wrpTree.tree,rolledBy,opts)},_pHandleRoll2_automatic(tree,rolledBy,opts){opts=opts||{};Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);const $out=Renderer.dice._$lastRolledBy;if(tree){const meta={};if(opts.pb)meta.pb=opts.pb;if(opts.summonSpellLevel)meta.summonSpellLevel=opts.summonSpellLevel;const result=tree.evl(meta);const fullHtml=(meta.html||[]).join("");const allMax=meta.allMax&&meta.allMax.length&&!meta.allMax.filter((it=>!it)).length;const allMin=meta.allMin&&meta.allMin.length&&!meta.allMin.filter((it=>!it)).length;const lbl=rolledBy.label&&(!rolledBy.name||rolledBy.label.trim().toLowerCase()!==rolledBy.name.trim().toLowerCase())?rolledBy.label:null;const totalPart=tree.successThresh?`<span class="roll">${result>(tree.successMax||100)-tree.successThresh?"Success!":"Failure"}</span>`:`<span class="roll ${allMax?"roll-max":allMin?"roll-min":""}">${result}</span>`;const title=`${rolledBy.name?`${rolledBy.name} — `:""}${lbl?`${lbl}: `:""}${tree}`;$out.append(`\n\t\t\t\t<div class="out-roll-item" title="${title}">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t${lbl?`<span class="roll-label">${lbl}: </span>`:""}\n\t\t\t\t\t\t${totalPart}\n\t\t\t\t\t\t<span class="all-rolls ve-muted">${fullHtml}</span>\n\t\t\t\t\t\t${opts.fnGetMessage?`<span class="message">${opts.fnGetMessage(result)}</span>`:""}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="out-roll-item-button-wrp">\n\t\t\t\t\t\t<button title="Copy to input" class="btn btn-default btn-xs btn-copy-roll" onclick="Renderer.dice._$iptRoll.val('${tree.toString().replace(/\s+/g,"")}'); Renderer.dice._$iptRoll.focus()"><span class="glyphicon glyphicon-pencil"></span></button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`);ExtensionUtil.doSendRoll({dice:tree.toString(),rolledBy:rolledBy.name,label:lbl});Renderer.dice._scrollBottom();return result}else{$out.append(`<div class="out-roll-item">Invalid input! Try &quot;/help&quot;</div>`);Renderer.dice._scrollBottom();return null}},_pHandleRoll2_manual(tree,rolledBy,opts){opts=opts||{};if(!tree)return JqueryUtil.doToast({type:"danger",content:`Invalid roll input!`});const title=(rolledBy.label||"").toTitleCase()||"Roll Dice";const $dispDice=$(`<div class="p-2 bold flex-vh-center rll__prompt-header">${tree.toString()}</div>`);if(opts.isResultUsed){return InputUiUtil.pGetUserNumber({title:title,$elePre:$dispDice})}else{const{$modalInner:$modalInner}=UiUtil.getShowModal({title:title,isMinHeight0:true});$dispDice.appendTo($modalInner);return null}},_showMessage(message,rolledBy){Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);const $out=Renderer.dice._$lastRolledBy;$out.append(`<div class="out-roll-item out-roll-item--message">${message}</div>`);Renderer.dice._scrollBottom()},_validCommands:new Set(["/c","/cls","/clear"]),_handleCommand(com,rolledBy){Renderer.dice._showMessage(`<span class="out-roll-item-code">${com}</span>`,rolledBy);const PREF_MACRO="/macro";function showInvalid(){Renderer.dice._showMessage("Invalid input! Try &quot;/help&quot;",Renderer.dice.SYSTEM_USER)}function checkLength(arr,desired){return arr.length===desired}async function pSave(){await StorageUtil.pSet(VeCt.STORAGE_ROLLER_MACRO,Renderer.dice.storage)}if(com==="/help"||com==="/h"){Renderer.dice._showMessage(`<ul class="rll__list">\n\t\t\t\t\t<li>Keep highest; <span class="out-roll-item-code">4d6kh3</span></li>\n\t\t\t\t\t<li>Drop lowest; <span class="out-roll-item-code">4d6dl1</span></li>\n\t\t\t\t\t<li>Drop highest; <span class="out-roll-item-code">3d4dh1</span></li>\n\t\t\t\t\t<li>Keep lowest; <span class="out-roll-item-code">3d4kl1</span></li>\n\n\t\t\t\t\t<li>Reroll equal; <span class="out-roll-item-code">2d4r1</span></li>\n\t\t\t\t\t<li>Reroll less; <span class="out-roll-item-code">2d4r&lt;2</span></li>\n\t\t\t\t\t<li>Reroll less or equal; <span class="out-roll-item-code">2d4r&lt;=2</span></li>\n\t\t\t\t\t<li>Reroll greater; <span class="out-roll-item-code">2d4r&gt;2</span></li>\n\t\t\t\t\t<li>Reroll greater equal; <span class="out-roll-item-code">2d4r&gt;=3</span></li>\n\n\t\t\t\t\t<li>Explode equal; <span class="out-roll-item-code">2d4x4</span></li>\n\t\t\t\t\t<li>Explode less; <span class="out-roll-item-code">2d4x&lt;2</span></li>\n\t\t\t\t\t<li>Explode less or equal; <span class="out-roll-item-code">2d4x&lt;=2</span></li>\n\t\t\t\t\t<li>Explode greater; <span class="out-roll-item-code">2d4x&gt;2</span></li>\n\t\t\t\t\t<li>Explode greater equal; <span class="out-roll-item-code">2d4x&gt;=3</span></li>\n\n\t\t\t\t\t<li>Count Successes equal; <span class="out-roll-item-code">2d4cs=4</span></li>\n\t\t\t\t\t<li>Count Successes less; <span class="out-roll-item-code">2d4cs&lt;2</span></li>\n\t\t\t\t\t<li>Count Successes less or equal; <span class="out-roll-item-code">2d4cs&lt;=2</span></li>\n\t\t\t\t\t<li>Count Successes greater; <span class="out-roll-item-code">2d4cs&gt;2</span></li>\n\t\t\t\t\t<li>Count Successes greater equal; <span class="out-roll-item-code">2d4cs&gt;=3</span></li>\n\n\t\t\t\t\t<li>Margin of Success; <span class="out-roll-item-code">2d4ms=4</span></li>\n\n\t\t\t\t\t<li>Dice pools; <span class="out-roll-item-code">{2d8, 1d6}</span></li>\n\t\t\t\t\t<li>Dice pools with modifiers; <span class="out-roll-item-code">{1d20+7, 10}kh1</span></li>\n\n\t\t\t\t\t<li>Rounding; <span class="out-roll-item-code">floor(1.5)</span>, <span class="out-roll-item-code">ceil(1.5)</span>, <span class="out-roll-item-code">round(1.5)</span></li>\n\n\t\t\t\t\t<li>Average; <span class="out-roll-item-code">avg(8d6)</span></li>\n\t\t\t\t</ul>\n\t\t\t\tUp and down arrow keys cycle input history.<br>\n\t\t\t\tAnything before a colon is treated as a label (<span class="out-roll-item-code">Fireball: 8d6</span>)<br>\nUse <span class="out-roll-item-code">${PREF_MACRO} list</span> to list saved macros.<br>\n\t\t\t\tUse <span class="out-roll-item-code">${PREF_MACRO} add myName 1d2+3</span> to add (or update) a macro. Macro names should not contain spaces or hashes.<br>\n\t\t\t\tUse <span class="out-roll-item-code">${PREF_MACRO} remove myName</span> to remove a macro.<br>\n\t\t\t\tUse <span class="out-roll-item-code">#myName</span> to roll a macro.<br>\n\t\t\t\tUse <span class="out-roll-item-code">/clear</span> to clear the roller.`,Renderer.dice.SYSTEM_USER)}else if(com.startsWith(PREF_MACRO)){const[_,mode,...others]=com.split(/\s+/);if(!["list","add","remove","clear"].includes(mode))showInvalid();else{switch(mode){case"list":if(checkLength(others,0)){Object.keys(Renderer.dice.storage).forEach((name=>{Renderer.dice._showMessage(`<span class="out-roll-item-code">#${name}</span> — ${Renderer.dice.storage[name]}`,Renderer.dice.SYSTEM_USER)}))}else{showInvalid()}break;case"add":{if(checkLength(others,2)){const[name,macro]=others;if(name.includes(" ")||name.includes("#"))showInvalid();else{Renderer.dice.storage[name]=macro;pSave().then((()=>Renderer.dice._showMessage(`Saved macro <span class="out-roll-item-code">#${name}</span>`,Renderer.dice.SYSTEM_USER)))}}else{showInvalid()}break}case"remove":if(checkLength(others,1)){if(Renderer.dice.storage[others[0]]){delete Renderer.dice.storage[others[0]];pSave().then((()=>Renderer.dice._showMessage(`Removed macro <span class="out-roll-item-code">#${others[0]}</span>`,Renderer.dice.SYSTEM_USER)))}else{Renderer.dice._showMessage(`Macro <span class="out-roll-item-code">#${others[0]}</span> not found`,Renderer.dice.SYSTEM_USER)}}else{showInvalid()}break}}}else if(Renderer.dice._validCommands.has(com)){switch(com){case"/c":case"/cls":case"/clear":Renderer.dice._$outRoll.empty();Renderer.dice._$lastRolledBy.empty();Renderer.dice._$lastRolledBy=null;break}}else showInvalid()},_pHandleSavedRoll(id,rolledBy,opts){id=id.replace(/^#/,"");const macro=Renderer.dice.storage[id];if(macro){rolledBy.label=id;const wrpTree=Renderer.dice.lang.getTree3(macro);return Renderer.dice._pHandleRoll2(wrpTree,rolledBy,opts)}else Renderer.dice._showMessage(`Macro <span class="out-roll-item-code">#${id}</span> not found`,Renderer.dice.SYSTEM_USER)},addRoll(rolledBy,msgText){if(!msgText.trim())return;Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);Renderer.dice._$outRoll.prepend(`<div class="out-roll-item" title="${rolledBy.name||""}">${msgText}</div>`);Renderer.dice._scrollBottom()},addElement(rolledBy,$ele){Renderer.dice._showBox();Renderer.dice._checkHandleName(rolledBy.name);$$`<div class="out-roll-item out-roll-item--message">${$ele}</div>`.appendTo(Renderer.dice._$lastRolledBy);Renderer.dice._scrollBottom()},_checkHandleName(name){if(!Renderer.dice._$lastRolledBy||Renderer.dice._$lastRolledBy.data("name")!==name){Renderer.dice._$outRoll.prepend(`<div class="ve-muted out-roll-id">${name}</div>`);Renderer.dice._$lastRolledBy=$(`<div class="out-roll-wrp"></div>`).data("name",name);Renderer.dice._$outRoll.prepend(Renderer.dice._$lastRolledBy)}}};Renderer.dice.lang={validate3(str){str=str.trim();let lexed;try{lexed=Renderer.dice.lang._lex3(str).lexed}catch(e){return e.message}try{Renderer.dice.lang._parse3(lexed)}catch(e){return e.message}return null},getTree3(str,isSilent=true){str=str.trim();if(isSilent){try{const{lexed:lexed,lexedMeta:lexedMeta}=Renderer.dice.lang._lex3(str);return{tree:Renderer.dice.lang._parse3(lexed),meta:lexedMeta}}catch(e){return null}}else{const{lexed:lexed,lexedMeta:lexedMeta}=Renderer.dice.lang._lex3(str);return{tree:Renderer.dice.lang._parse3(lexed),meta:lexedMeta}}},_M_NUMBER_CHAR:/[0-9.]/,_M_SYMBOL_CHAR:/[-+/*^=><florceidhkxunavgsmpb,]/,_M_NUMBER:/^[\d.,]+$/,_lex3(str){const self={tokenStack:[],parenCount:0,braceCount:0,mode:null,token:"",hasPb:false,hasSummonSpellLevel:false};str=str.trim().toLowerCase().replace(/\s+plus\s+/g," + ").replace(/\s+minus\s+/g," - ").replace(/\s+times\s+/g," * ").replace(/\s+/g,"").replace(/[×]/g,"*").replace(/\*\*/g,"^").replace(/÷/g,"/").replace(/--/g,"+").replace(/\+-|-\+/g,"-");if(!str)return{lexed:[],lexedMeta:{}};this._lex3_lex(self,str);return{lexed:self.tokenStack,lexedMeta:{hasPb:self.hasPb,hasSummonSpellLevel:self.hasSummonSpellLevel}}},_lex3_lex(self,l){const len=l.length;for(let i=0;i<len;++i){const c=l[i];switch(c){case"(":self.parenCount++;this._lex3_outputToken(self);self.token="(";this._lex3_outputToken(self);break;case")":self.parenCount--;if(self.parenCount<0)throw new Error(`Syntax error: closing <code>)</code> without opening <code>(</code>`);this._lex3_outputToken(self);self.token=")";this._lex3_outputToken(self);break;case"{":self.braceCount++;this._lex3_outputToken(self);self.token="{";this._lex3_outputToken(self);break;case"}":self.braceCount--;if(self.parenCount<0)throw new Error(`Syntax error: closing <code>}</code> without opening <code>(</code>`);this._lex3_outputToken(self);self.token="}";this._lex3_outputToken(self);break;case"+":case"-":case"*":case"/":case"^":case",":this._lex3_outputToken(self);self.token+=c;this._lex3_outputToken(self);break;default:{if(Renderer.dice.lang._M_NUMBER_CHAR.test(c)){if(self.mode==="symbol")this._lex3_outputToken(self);self.token+=c;self.mode="text"}else if(Renderer.dice.lang._M_SYMBOL_CHAR.test(c)){if(self.mode==="text")this._lex3_outputToken(self);self.token+=c;self.mode="symbol"}else throw new Error(`Syntax error: unexpected character <code>${c}</code>`);break}}}this._lex3_outputToken(self)},_lex3_outputToken(self){if(!self.token)return;switch(self.token){case"(":self.tokenStack.push(Renderer.dice.tk.PAREN_OPEN);break;case")":self.tokenStack.push(Renderer.dice.tk.PAREN_CLOSE);break;case"{":self.tokenStack.push(Renderer.dice.tk.BRACE_OPEN);break;case"}":self.tokenStack.push(Renderer.dice.tk.BRACE_CLOSE);break;case",":self.tokenStack.push(Renderer.dice.tk.COMMA);break;case"+":self.tokenStack.push(Renderer.dice.tk.ADD);break;case"-":self.tokenStack.push(Renderer.dice.tk.SUB);break;case"*":self.tokenStack.push(Renderer.dice.tk.MULT);break;case"/":self.tokenStack.push(Renderer.dice.tk.DIV);break;case"^":self.tokenStack.push(Renderer.dice.tk.POW);break;case"pb":self.tokenStack.push(Renderer.dice.tk.PB);self.hasPb=true;break;case"summonspelllevel":self.tokenStack.push(Renderer.dice.tk.SUMMON_SPELL_LEVEL);self.hasSummonSpellLevel=true;break;case"floor":self.tokenStack.push(Renderer.dice.tk.FLOOR);break;case"ceil":self.tokenStack.push(Renderer.dice.tk.CEIL);break;case"round":self.tokenStack.push(Renderer.dice.tk.ROUND);break;case"avg":self.tokenStack.push(Renderer.dice.tk.AVERAGE);break;case"d":self.tokenStack.push(Renderer.dice.tk.DICE);break;case"dh":self.tokenStack.push(Renderer.dice.tk.DROP_HIGHEST);break;case"kh":self.tokenStack.push(Renderer.dice.tk.KEEP_HIGHEST);break;case"dl":self.tokenStack.push(Renderer.dice.tk.DROP_LOWEST);break;case"kl":self.tokenStack.push(Renderer.dice.tk.KEEP_LOWEST);break;case"r":self.tokenStack.push(Renderer.dice.tk.REROLL_EXACT);break;case"r>":self.tokenStack.push(Renderer.dice.tk.REROLL_GT);break;case"r>=":self.tokenStack.push(Renderer.dice.tk.REROLL_GTEQ);break;case"r<":self.tokenStack.push(Renderer.dice.tk.REROLL_LT);break;case"r<=":self.tokenStack.push(Renderer.dice.tk.REROLL_LTEQ);break;case"x":self.tokenStack.push(Renderer.dice.tk.EXPLODE_EXACT);break;case"x>":self.tokenStack.push(Renderer.dice.tk.EXPLODE_GT);break;case"x>=":self.tokenStack.push(Renderer.dice.tk.EXPLODE_GTEQ);break;case"x<":self.tokenStack.push(Renderer.dice.tk.EXPLODE_LT);break;case"x<=":self.tokenStack.push(Renderer.dice.tk.EXPLODE_LTEQ);break;case"cs=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_EXACT);break;case"cs>":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_GT);break;case"cs>=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_GTEQ);break;case"cs<":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_LT);break;case"cs<=":self.tokenStack.push(Renderer.dice.tk.COUNT_SUCCESS_LTEQ);break;case"ms=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_EXACT);break;case"ms>":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_GT);break;case"ms>=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_GTEQ);break;case"ms<":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_LT);break;case"ms<=":self.tokenStack.push(Renderer.dice.tk.MARGIN_SUCCESS_LTEQ);break;default:{if(Renderer.dice.lang._M_NUMBER.test(self.token)){if(self.token.split(Parser._decimalSeparator).length>2)throw new Error(`Syntax error: too many decimal separators <code>${self.token}</code>`);self.tokenStack.push(Renderer.dice.tk.NUMBER(self.token))}else throw new Error(`Syntax error: unexpected token <code>${self.token}</code>`)}}self.token=""},_parse3(lexed){const self={ixSym:-1,syms:lexed,sym:null,lastAccepted:null};this._parse3_nextSym(self);return this._parse3_expression(self)},_parse3_nextSym(self){const cur=self.syms[self.ixSym];self.ixSym++;self.sym=self.syms[self.ixSym];return cur},_parse3_match(self,symbol){if(self.sym==null)return false;if(symbol.type)symbol=symbol.type;return self.sym.type===symbol},_parse3_accept(self,symbol){if(this._parse3_match(self,symbol)){const out=self.sym;this._parse3_nextSym(self);self.lastAccepted=out;return out}return false},_parse3_expect(self,symbol){const accepted=this._parse3_accept(self,symbol);if(accepted)return accepted;if(self.sym)throw new Error(`Unexpected input: Expected <code>${symbol}</code> but found <code>${self.sym}</code>`);else throw new Error(`Unexpected end of input: Expected <code>${symbol}</code>`)},_parse3_factor(self){if(this._parse3_accept(self,Renderer.dice.tk.TYP_NUMBER)){let braceCount=0;self.syms.find((it=>{if(it.type===Renderer.dice.tk.BRACE_OPEN.type)braceCount++;else if(it.type===Renderer.dice.tk.BRACE_CLOSE.type)braceCount--;return it===self.sym}));if(braceCount){return new Renderer.dice.parsed.Factor(self.lastAccepted)}else{const syms=[self.lastAccepted];while(this._parse3_accept(self,Renderer.dice.tk.COMMA)){const sym=this._parse3_expect(self,Renderer.dice.tk.TYP_NUMBER);syms.push(sym)}const sym=Renderer.dice.tk.NUMBER(syms.map((it=>it.value)).join(""));return new Renderer.dice.parsed.Factor(sym)}}else if(this._parse3_accept(self,Renderer.dice.tk.PB)){return new Renderer.dice.parsed.Factor(Renderer.dice.tk.PB)}else if(this._parse3_accept(self,Renderer.dice.tk.SUMMON_SPELL_LEVEL)){return new Renderer.dice.parsed.Factor(Renderer.dice.tk.SUMMON_SPELL_LEVEL)}else if(this._parse3_match(self,Renderer.dice.tk.FLOOR)||this._parse3_match(self,Renderer.dice.tk.CEIL)||this._parse3_match(self,Renderer.dice.tk.ROUND)||this._parse3_match(self,Renderer.dice.tk.AVERAGE)){const children=[];children.push(this._parse3_nextSym(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_OPEN);children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);return new Renderer.dice.parsed.Function(children)}else if(this._parse3_accept(self,Renderer.dice.tk.PAREN_OPEN)){const exp=this._parse3_expression(self);this._parse3_expect(self,Renderer.dice.tk.PAREN_CLOSE);return new Renderer.dice.parsed.Factor(exp,{hasParens:true})}else if(this._parse3_accept(self,Renderer.dice.tk.BRACE_OPEN)){const children=[];children.push(this._parse3_expression(self));while(this._parse3_accept(self,Renderer.dice.tk.COMMA))children.push(this._parse3_expression(self));this._parse3_expect(self,Renderer.dice.tk.BRACE_CLOSE);const modPart=[];this._parse3__dice_modifiers(self,modPart);return new Renderer.dice.parsed.Pool(children,modPart[0])}else{if(self.sym)throw new Error(`Unexpected input: <code>${self.sym}</code>`);else throw new Error(`Unexpected end of input`)}},_parse3_dice(self){const children=[];if(this._parse3_match(self,Renderer.dice.tk.DICE))children.push(new Renderer.dice.parsed.Factor(Renderer.dice.tk.NUMBER(1)));else children.push(this._parse3_factor(self));while(this._parse3_match(self,Renderer.dice.tk.DICE)){this._parse3_nextSym(self);children.push(this._parse3_factor(self));this._parse3__dice_modifiers(self,children)}return new Renderer.dice.parsed.Dice(children)},_parse3__dice_modifiers(self,children){const modsMeta=new Renderer.dice.lang.DiceModMeta;while(this._parse3_match(self,Renderer.dice.tk.DROP_HIGHEST)||this._parse3_match(self,Renderer.dice.tk.KEEP_HIGHEST)||this._parse3_match(self,Renderer.dice.tk.DROP_LOWEST)||this._parse3_match(self,Renderer.dice.tk.KEEP_LOWEST)||this._parse3_match(self,Renderer.dice.tk.REROLL_EXACT)||this._parse3_match(self,Renderer.dice.tk.REROLL_GT)||this._parse3_match(self,Renderer.dice.tk.REROLL_GTEQ)||this._parse3_match(self,Renderer.dice.tk.REROLL_LT)||this._parse3_match(self,Renderer.dice.tk.REROLL_LTEQ)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_EXACT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_GT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_GTEQ)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_LT)||this._parse3_match(self,Renderer.dice.tk.EXPLODE_LTEQ)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_EXACT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_GT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_GTEQ)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_LT)||this._parse3_match(self,Renderer.dice.tk.COUNT_SUCCESS_LTEQ)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_EXACT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_GT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_GTEQ)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_LT)||this._parse3_match(self,Renderer.dice.tk.MARGIN_SUCCESS_LTEQ)){const nxtSym=this._parse3_nextSym(self);const nxtFactor=this._parse3_factor(self);if(nxtSym.isSuccessMode)modsMeta.isSuccessMode=true;modsMeta.mods.push({modSym:nxtSym,numSym:nxtFactor})}if(modsMeta.mods.length)children.push(modsMeta)},_parse3_exponent(self){const children=[];children.push(this._parse3_dice(self));while(this._parse3_match(self,Renderer.dice.tk.POW)){this._parse3_nextSym(self);children.push(this._parse3_dice(self))}return new Renderer.dice.parsed.Exponent(children)},_parse3_term(self){const children=[];children.push(this._parse3_exponent(self));while(this._parse3_match(self,Renderer.dice.tk.MULT)||this._parse3_match(self,Renderer.dice.tk.DIV)){children.push(this._parse3_nextSym(self));children.push(this._parse3_exponent(self))}return new Renderer.dice.parsed.Term(children)},_parse3_expression(self){const children=[];if(this._parse3_match(self,Renderer.dice.tk.ADD)||this._parse3_match(self,Renderer.dice.tk.SUB))children.push(this._parse3_nextSym(self));children.push(this._parse3_term(self));while(this._parse3_match(self,Renderer.dice.tk.ADD)||this._parse3_match(self,Renderer.dice.tk.SUB)){children.push(this._parse3_nextSym(self));children.push(this._parse3_term(self))}return new Renderer.dice.parsed.Expression(children)},DiceModMeta:class{constructor(){this.isDiceModifierGroup=true;this.isSuccessMode=false;this.mods=[]}}};Renderer.dice.tk={Token:class{constructor(type,value,asString,opts){opts=opts||{};this.type=type;this.value=value;this._asString=asString;if(opts.isDiceModifier)this.isDiceModifier=true;if(opts.isSuccessMode)this.isSuccessMode=true}eq(other){return other&&other.type===this.type}toString(){if(this._asString)return this._asString;return this.toDebugString()}toDebugString(){return`${this.type}${this.value?` :: ${this.value}`:""}`}},_new(type,asString,opts){return new Renderer.dice.tk.Token(type,null,asString,opts)},TYP_NUMBER:"NUMBER",TYP_DICE:"DICE",TYP_SYMBOL:"SYMBOL",NUMBER(val){return new Renderer.dice.tk.Token(Renderer.dice.tk.TYP_NUMBER,val)}};Renderer.dice.tk.PAREN_OPEN=Renderer.dice.tk._new("PAREN_OPEN","(");Renderer.dice.tk.PAREN_CLOSE=Renderer.dice.tk._new("PAREN_CLOSE",")");Renderer.dice.tk.BRACE_OPEN=Renderer.dice.tk._new("BRACE_OPEN","{");Renderer.dice.tk.BRACE_CLOSE=Renderer.dice.tk._new("BRACE_CLOSE","}");Renderer.dice.tk.COMMA=Renderer.dice.tk._new("COMMA",",");Renderer.dice.tk.ADD=Renderer.dice.tk._new("ADD","+");Renderer.dice.tk.SUB=Renderer.dice.tk._new("SUB","-");Renderer.dice.tk.MULT=Renderer.dice.tk._new("MULT","*");Renderer.dice.tk.DIV=Renderer.dice.tk._new("DIV","/");Renderer.dice.tk.POW=Renderer.dice.tk._new("POW","^");Renderer.dice.tk.PB=Renderer.dice.tk._new("PB","pb");Renderer.dice.tk.SUMMON_SPELL_LEVEL=Renderer.dice.tk._new("SUMMON_SPELL_LEVEL","summonspelllevel");Renderer.dice.tk.FLOOR=Renderer.dice.tk._new("FLOOR","floor");Renderer.dice.tk.CEIL=Renderer.dice.tk._new("CEIL","ceil");Renderer.dice.tk.ROUND=Renderer.dice.tk._new("ROUND","round");Renderer.dice.tk.AVERAGE=Renderer.dice.tk._new("AVERAGE","avg");Renderer.dice.tk.DICE=Renderer.dice.tk._new("DICE","d");Renderer.dice.tk.DROP_HIGHEST=Renderer.dice.tk._new("DH","dh",{isDiceModifier:true});Renderer.dice.tk.KEEP_HIGHEST=Renderer.dice.tk._new("KH","kh",{isDiceModifier:true});Renderer.dice.tk.DROP_LOWEST=Renderer.dice.tk._new("DL","dl",{isDiceModifier:true});Renderer.dice.tk.KEEP_LOWEST=Renderer.dice.tk._new("KL","kl",{isDiceModifier:true});Renderer.dice.tk.REROLL_EXACT=Renderer.dice.tk._new("REROLL","r",{isDiceModifier:true});Renderer.dice.tk.REROLL_GT=Renderer.dice.tk._new("REROLL_GT","r>",{isDiceModifier:true});Renderer.dice.tk.REROLL_GTEQ=Renderer.dice.tk._new("REROLL_GTEQ","r>=",{isDiceModifier:true});Renderer.dice.tk.REROLL_LT=Renderer.dice.tk._new("REROLL_LT","r<",{isDiceModifier:true});Renderer.dice.tk.REROLL_LTEQ=Renderer.dice.tk._new("REROLL_LTEQ","r<=",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_EXACT=Renderer.dice.tk._new("EXPLODE","x",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_GT=Renderer.dice.tk._new("EXPLODE_GT","x>",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_GTEQ=Renderer.dice.tk._new("EXPLODE_GTEQ","x>=",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_LT=Renderer.dice.tk._new("EXPLODE_LT","x<",{isDiceModifier:true});Renderer.dice.tk.EXPLODE_LTEQ=Renderer.dice.tk._new("EXPLODE_LTEQ","x<=",{isDiceModifier:true});Renderer.dice.tk.COUNT_SUCCESS_EXACT=Renderer.dice.tk._new("COUNT_SUCCESS_EXACT","cs=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_GT=Renderer.dice.tk._new("COUNT_SUCCESS_GT","cs>",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_GTEQ=Renderer.dice.tk._new("COUNT_SUCCESS_GTEQ","cs>=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_LT=Renderer.dice.tk._new("COUNT_SUCCESS_LT","cs<",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.COUNT_SUCCESS_LTEQ=Renderer.dice.tk._new("COUNT_SUCCESS_LTEQ","cs<=",{isDiceModifier:true,isSuccessMode:true});Renderer.dice.tk.MARGIN_SUCCESS_EXACT=Renderer.dice.tk._new("MARGIN_SUCCESS_EXACT","ms=",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_GT=Renderer.dice.tk._new("MARGIN_SUCCESS_GT","ms>",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_GTEQ=Renderer.dice.tk._new("MARGIN_SUCCESS_GTEQ","ms>=",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_LT=Renderer.dice.tk._new("MARGIN_SUCCESS_LT","ms<",{isDiceModifier:true});Renderer.dice.tk.MARGIN_SUCCESS_LTEQ=Renderer.dice.tk._new("MARGIN_SUCCESS_LTEQ","ms<=",{isDiceModifier:true});Renderer.dice.AbstractSymbol=class{constructor(){this.type=Renderer.dice.tk.TYP_SYMBOL}eq(symbol){return symbol&&this.type===symbol.type}evl(meta){this.meta=meta;return this._evl(meta)}avg(meta){this.meta=meta;return this._avg(meta)}min(meta){this.meta=meta;return this._min(meta)}max(meta){this.meta=meta;return this._max(meta)}_evl(){throw new Error("Unimplemented!")}_avg(){throw new Error("Unimplemented!")}_min(){throw new Error("Unimplemented!")}_max(){throw new Error("Unimplemented!")}toString(){throw new Error("Unimplemented!")}addToMeta(meta,html,text){if(!meta)return;text=text||html;(meta.html=meta.html||[]).push(html);(meta.text=meta.text||[]).push(text)}};Renderer.dice.parsed={_PARTITION_EQ:(r,compareTo)=>r===compareTo,_PARTITION_GT:(r,compareTo)=>r>compareTo,_PARTITION_GTEQ:(r,compareTo)=>r>=compareTo,_PARTITION_LT:(r,compareTo)=>r<compareTo,_PARTITION_LTEQ:(r,compareTo)=>r<=compareTo,_handleModifiers(fnName,meta,vals,nodeMod,opts){opts=opts||{};const displayVals=vals.slice();const{mods:mods}=nodeMod;for(const mod of mods){vals.sort(SortUtil.ascSortProp.bind(null,"val")).reverse();const modNum=mod.numSym[fnName]();switch(mod.modSym.type){case Renderer.dice.tk.DROP_HIGHEST.type:case Renderer.dice.tk.KEEP_HIGHEST.type:case Renderer.dice.tk.DROP_LOWEST.type:case Renderer.dice.tk.KEEP_LOWEST.type:{const isHighest=mod.modSym.type.endsWith("H");const splitPoint=isHighest?modNum:vals.length-modNum;const highSlice=vals.slice(0,splitPoint);const lowSlice=vals.slice(splitPoint,vals.length);switch(mod.modSym.type){case Renderer.dice.tk.DROP_HIGHEST.type:case Renderer.dice.tk.KEEP_LOWEST.type:highSlice.forEach((val=>val.isDropped=true));break;case Renderer.dice.tk.KEEP_HIGHEST.type:case Renderer.dice.tk.DROP_LOWEST.type:lowSlice.forEach((val=>val.isDropped=true));break;default:throw new Error(`Unimplemented!`)}break}case Renderer.dice.tk.REROLL_EXACT.type:case Renderer.dice.tk.REROLL_GT.type:case Renderer.dice.tk.REROLL_GTEQ.type:case Renderer.dice.tk.REROLL_LT.type:case Renderer.dice.tk.REROLL_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.REROLL_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.REROLL_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.REROLL_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.REROLL_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.REROLL_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}const toReroll=vals.filter((val=>fnPartition(val.val,modNum)));toReroll.forEach((val=>val.isDropped=true));const nuVals=opts.fnGetRerolls(toReroll);vals.push(...nuVals);displayVals.push(...nuVals);break}case Renderer.dice.tk.EXPLODE_EXACT.type:case Renderer.dice.tk.EXPLODE_GT.type:case Renderer.dice.tk.EXPLODE_GTEQ.type:case Renderer.dice.tk.EXPLODE_LT.type:case Renderer.dice.tk.EXPLODE_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.EXPLODE_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.EXPLODE_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.EXPLODE_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.EXPLODE_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.EXPLODE_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}let tries=999;let lastLen;let toExplodeNext=vals;do{lastLen=vals.length;const[toExplode]=toExplodeNext.partition((roll=>!roll.isExploded&&fnPartition(roll.val,modNum)));toExplode.forEach((roll=>roll.isExploded=true));const nuVals=opts.fnGetExplosions(toExplode);toExplodeNext=nuVals;vals.push(...nuVals);displayVals.push(...nuVals)}while(tries-- >0&&vals.length!==lastLen);if(!~tries)JqueryUtil.doToast({type:"warning",content:`Stopped exploding after 999 additional rolls.`});break}case Renderer.dice.tk.COUNT_SUCCESS_EXACT.type:case Renderer.dice.tk.COUNT_SUCCESS_GT.type:case Renderer.dice.tk.COUNT_SUCCESS_GTEQ.type:case Renderer.dice.tk.COUNT_SUCCESS_LT.type:case Renderer.dice.tk.COUNT_SUCCESS_LTEQ.type:{let fnPartition;switch(mod.modSym.type){case Renderer.dice.tk.COUNT_SUCCESS_EXACT.type:fnPartition=Renderer.dice.parsed._PARTITION_EQ;break;case Renderer.dice.tk.COUNT_SUCCESS_GT.type:fnPartition=Renderer.dice.parsed._PARTITION_GT;break;case Renderer.dice.tk.COUNT_SUCCESS_GTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_GTEQ;break;case Renderer.dice.tk.COUNT_SUCCESS_LT.type:fnPartition=Renderer.dice.parsed._PARTITION_LT;break;case Renderer.dice.tk.COUNT_SUCCESS_LTEQ.type:fnPartition=Renderer.dice.parsed._PARTITION_LTEQ;break;default:throw new Error(`Unimplemented!`)}const successes=vals.filter((val=>fnPartition(val.val,modNum)));successes.forEach((val=>val.isSuccess=true));break}case Renderer.dice.tk.MARGIN_SUCCESS_EXACT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GTEQ.type:case Renderer.dice.tk.MARGIN_SUCCESS_LT.type:case Renderer.dice.tk.MARGIN_SUCCESS_LTEQ.type:{const total=vals.map((it=>it.val)).reduce(((valA,valB)=>valA+valB),0);const subDisplayDice=displayVals.map((r=>`[${Renderer.dice.parsed._rollToNumPart(r,opts.faces)}]`)).join("+");let delta;let subDisplay;switch(mod.modSym.type){case Renderer.dice.tk.MARGIN_SUCCESS_EXACT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GT.type:case Renderer.dice.tk.MARGIN_SUCCESS_GTEQ.type:{delta=total-modNum;subDisplay=`(${subDisplayDice})-${modNum}`;break}case Renderer.dice.tk.MARGIN_SUCCESS_LT.type:case Renderer.dice.tk.MARGIN_SUCCESS_LTEQ.type:{delta=modNum-total;subDisplay=`${modNum}-(${subDisplayDice})`;break}default:throw new Error(`Unimplemented!`)}while(vals.length){vals.pop();displayVals.pop()}vals.push({val:delta});displayVals.push({val:delta,htmlDisplay:subDisplay});break}default:throw new Error(`Unimplemented!`)}}return displayVals},_rollToNumPart(r,faces){if(faces==null)return r.val;return r.val===faces?`<span class="rll__max--muted">${r.val}</span>`:r.val===1?`<span class="rll__min--muted">${r.val}</span>`:r.val},Function:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const[symFunc,symExp]=this._nodes;switch(symFunc.type){case Renderer.dice.tk.FLOOR.type:{this.addToMeta(meta,"floor(");const out=Math.floor(symExp[fnName](meta));this.addToMeta(meta,")");return out}case Renderer.dice.tk.CEIL.type:{this.addToMeta(meta,"ceil(");const out=Math.ceil(symExp[fnName](meta));this.addToMeta(meta,")");return out}case Renderer.dice.tk.ROUND.type:{this.addToMeta(meta,"round(");const out=Math.round(symExp[fnName](meta));this.addToMeta(meta,")");return out}case Renderer.dice.tk.AVERAGE.type:{return symExp.avg(meta)}default:throw new Error(`Unimplemented!`)}}toString(){let out;const[symFunc,symExp]=this._nodes;switch(symFunc.type){case Renderer.dice.tk.FLOOR.type:out="floor";break;case Renderer.dice.tk.CEIL.type:out="ceil";break;case Renderer.dice.tk.ROUND.type:out="round";break;case Renderer.dice.tk.AVERAGE.type:out="avg";break;default:throw new Error(`Unimplemented!`)}out+=`(${symExp.toString()})`;return out}},Pool:class extends Renderer.dice.AbstractSymbol{constructor(nodesPool,nodeMod){super();this._nodesPool=nodesPool;this._nodeMod=nodeMod}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const vals=this._nodesPool.map((it=>{const subMeta={};return{node:it,val:it[fnName](subMeta),meta:subMeta}}));if(this._nodeMod&&vals.length){const isSuccessMode=this._nodeMod.isSuccessMode;const modOpts={fnGetRerolls:toReroll=>toReroll.map((val=>{const subMeta={};return{node:val.node,val:val.node[fnName](subMeta),meta:subMeta}})),fnGetExplosions:toExplode=>toExplode.map((val=>{const subMeta={};return{node:val.node,val:val.node[fnName](subMeta),meta:subMeta}}))};const displayVals=Renderer.dice.parsed._handleModifiers(fnName,meta,vals,this._nodeMod,modOpts);const asHtml=displayVals.map((v=>{const html=v.meta.html.join("");if(v.isDropped)return`<span class="rll__dropped">(${html})</span>`;else if(v.isExploded)return`<span class="rll__exploded">(</span>${html}<span class="rll__exploded">)</span>`;else if(v.isSuccess)return`<span class="rll__success">(${html})</span>`;else return`(${html})`})).join("+");const asText=displayVals.map((v=>`(${v.meta.text.join("")})`)).join("+");this.addToMeta(meta,asHtml,asText);if(isSuccessMode){return vals.filter((it=>!it.isDropped&&it.isSuccess)).length}else{return vals.filter((it=>!it.isDropped)).map((it=>it.val)).sum()}}else{this.addToMeta(meta,`${vals.map((it=>`(${it.meta.html.join("")})`)).join("+")}`,`${vals.map((it=>`(${it.meta.text.join("")})`)).join("+")}`);return vals.map((it=>it.val)).sum()}}toString(){return`{${this._nodesPool.map((it=>it.toString())).join(", ")}}${this._nodeMod?this._nodeMod.toString():""}`}},Factor:class extends Renderer.dice.AbstractSymbol{constructor(node,opts){super();opts=opts||{};this._node=node;this._hasParens=!!opts.hasParens}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){switch(this._node.type){case Renderer.dice.tk.TYP_NUMBER:{this.addToMeta(meta,this.toString());return Number(this._node.value)}case Renderer.dice.tk.TYP_SYMBOL:{if(this._hasParens)this.addToMeta(meta,"(");const out=this._node[fnName](meta);if(this._hasParens)this.addToMeta(meta,")");return out}case Renderer.dice.tk.PB.type:{this.addToMeta(meta,this.toString(meta));return meta.pb==null?0:meta.pb}case Renderer.dice.tk.SUMMON_SPELL_LEVEL.type:{this.addToMeta(meta,this.toString(meta));return meta.summonSpellLevel==null?0:meta.summonSpellLevel}default:throw new Error(`Unimplemented!`)}}toString(indent){let out;switch(this._node.type){case Renderer.dice.tk.TYP_NUMBER:out=this._node.value;break;case Renderer.dice.tk.TYP_SYMBOL:out=this._node.toString();break;case Renderer.dice.tk.PB.type:out=this.meta?this.meta.pb||0:"PB";break;case Renderer.dice.tk.SUMMON_SPELL_LEVEL.type:out=this.meta?this.meta.summonSpellLevel||0:"the spell's level";break;default:throw new Error(`Unimplemented!`)}return this._hasParens?`(${out})`:out}},Dice:class extends Renderer.dice.AbstractSymbol{static _facesToValue(faces,fnName){switch(fnName){case"evl":return RollerUtil.randomise(faces);case"avg":return(faces+1)/2;case"min":return 1;case"max":return faces}}constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){if(this._nodes.length===1)return this._nodes[0][fnName](meta);const view=this._nodes.slice();const numSym=view.shift();let tmp=numSym[fnName]();while(view.length){if(Math.round(tmp)!==tmp)throw new Error(`Number of dice to roll (${tmp}) was not an integer!`);const facesSym=view.shift();const faces=facesSym[fnName]();if(Math.round(faces)!==faces)throw new Error(`Dice face count (${faces}) was not an integer!`);const isLast=view.length===0||view.length===1&&view.last().isDiceModifierGroup;tmp=this._invoke_handlePart(fnName,meta,view,tmp,faces,isLast)}return tmp}_invoke_handlePart(fnName,meta,view,num,faces,isLast){const rolls=[...new Array(num)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)})));let displayRolls;let isSuccessMode=false;if(view.length&&view[0].isDiceModifierGroup){const nodeMod=view[0];if(fnName==="evl"||fnName==="min"||fnName==="max"){isSuccessMode=nodeMod.isSuccessMode;const modOpts={faces:faces,fnGetRerolls:toReroll=>[...new Array(toReroll.length)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)}))),fnGetExplosions:toExplode=>[...new Array(toExplode.length)].map((()=>({val:Renderer.dice.parsed.Dice._facesToValue(faces,fnName)})))};displayRolls=Renderer.dice.parsed._handleModifiers(fnName,meta,rolls,nodeMod,modOpts)}view.shift()}else displayRolls=rolls;if(isLast){const asHtml=displayRolls.map((r=>{if(r.htmlDisplay)return r.htmlDisplay;const numPart=Renderer.dice.parsed._rollToNumPart(r,faces);if(r.isDropped)return`<span class="rll__dropped">[${numPart}]</span>`;else if(r.isExploded)return`<span class="rll__exploded">[</span>${numPart}<span class="rll__exploded">]</span>`;else if(r.isSuccess)return`<span class="rll__success">[${numPart}]</span>`;else return`[${numPart}]`})).join("+");const asText=displayRolls.map((r=>`[${r.val}]`)).join("+");this.addToMeta(meta,asHtml,asText)}if(fnName==="evl"){const maxRolls=rolls.filter((it=>it.val===faces&&!it.isDropped));const minRolls=rolls.filter((it=>it.val===1&&!it.isDropped));meta.allMax=meta.allMax||[];meta.allMin=meta.allMin||[];meta.allMax.push(maxRolls.length&&maxRolls.length===rolls.length);meta.allMin.push(minRolls.length&&minRolls.length===rolls.length)}if(isSuccessMode){return rolls.filter((it=>!it.isDropped&&it.isSuccess)).length}else{return rolls.filter((it=>!it.isDropped)).map((it=>it.val)).sum()}}toString(){if(this._nodes.length===1)return this._nodes[0].toString();const[numSym,facesSym]=this._nodes;let out=`${numSym.toString()}d${facesSym.toString()}`;for(let i=2;i<this._nodes.length;++i){const n=this._nodes[i];if(n.isDiceModifierGroup)out+=n.mods.map((it=>`${it.modSym.toString()}${it.numSym.toString()}`)).join("");else out+=`d${n.toString()}`}return out}},Exponent:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const view=this._nodes.slice();let val=view.pop()[fnName](meta);while(view.length){this.addToMeta(meta,"^");val=view.pop()[fnName](meta)**val}return val}toString(){const view=this._nodes.slice();let out=view.pop().toString();while(view.length)out=`${view.pop().toString()}^${out}`;return out}},Term:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){let out=this._nodes[0][fnName](meta);for(let i=1;i<this._nodes.length;i+=2){if(this._nodes[i].eq(Renderer.dice.tk.MULT)){this.addToMeta(meta," × ");out*=this._nodes[i+1][fnName](meta)}else if(this._nodes[i].eq(Renderer.dice.tk.DIV)){this.addToMeta(meta," ÷ ");out/=this._nodes[i+1][fnName](meta)}else throw new Error(`Unimplemented!`)}return out}toString(){let out=this._nodes[0].toString();for(let i=1;i<this._nodes.length;i+=2){if(this._nodes[i].eq(Renderer.dice.tk.MULT))out+=` * ${this._nodes[i+1].toString()}`;else if(this._nodes[i].eq(Renderer.dice.tk.DIV))out+=` / ${this._nodes[i+1].toString()}`;else throw new Error(`Unimplemented!`)}return out}},Expression:class extends Renderer.dice.AbstractSymbol{constructor(nodes){super();this._nodes=nodes}_evl(meta){return this._invoke("evl",meta)}_avg(meta){return this._invoke("avg",meta)}_min(meta){return this._invoke("min",meta)}_max(meta){return this._invoke("max",meta)}_invoke(fnName,meta){const view=this._nodes.slice();let isNeg=false;if(view[0].eq(Renderer.dice.tk.ADD)||view[0].eq(Renderer.dice.tk.SUB)){isNeg=view.shift().eq(Renderer.dice.tk.SUB);if(isNeg)this.addToMeta(meta,"-")}let out=view[0][fnName](meta);if(isNeg)out=-out;for(let i=1;i<view.length;i+=2){if(view[i].eq(Renderer.dice.tk.ADD)){this.addToMeta(meta," + ");out+=view[i+1][fnName](meta)}else if(view[i].eq(Renderer.dice.tk.SUB)){this.addToMeta(meta," - ");out-=view[i+1][fnName](meta)}else throw new Error(`Unimplemented!`)}return out}toString(indent=0){let out="";const view=this._nodes.slice();let isNeg=false;if(view[0].eq(Renderer.dice.tk.ADD)||view[0].eq(Renderer.dice.tk.SUB)){isNeg=view.shift().eq(Renderer.dice.tk.SUB);if(isNeg)out+="-"}out+=view[0].toString(indent);for(let i=1;i<view.length;i+=2){if(view[i].eq(Renderer.dice.tk.ADD))out+=` + ${view[i+1].toString(indent)}`;else if(view[i].eq(Renderer.dice.tk.SUB))out+=` - ${view[i+1].toString(indent)}`;else throw new Error(`Unimplemented!`)}return out}}};if(!IS_VTT&&typeof window!=="undefined"){window.addEventListener("load",Renderer.dice._pInit)};
"use strict";(typeof module!=="undefined"?global:window).ScaleCreature={isCrInScaleRange(mon){if([VeCt.CR_UNKNOWN,VeCt.CR_CUSTOM].includes(Parser.crToNumber(mon.cr)))return false;const xpVal=Parser.XP_CHART_ALT[mon.cr?.cr??mon.cr];return xpVal!=null},_crRangeToVal(cr,ranges){return Object.keys(ranges).find((k=>{const[a,b]=ranges[k];return cr>=a&&cr<=b}))},_acCrRanges:{13:[-1,3],14:[4,4],15:[5,7],16:[8,9],17:[10,12],18:[13,16],19:[17,30]},_crToAc(cr){return Number(this._crRangeToVal(cr,this._acCrRanges))},_crHpRanges:{0:[1,6],.125:[7,35],.25:[36,49],.5:[50,70],1:[71,85],2:[86,100],3:[101,115],4:[116,130],5:[131,145],6:[146,160],7:[161,175],8:[176,190],9:[191,205],10:[206,220],11:[221,235],12:[236,250],13:[251,265],14:[266,280],15:[281,295],16:[296,310],17:[311,325],18:[326,340],19:[341,355],20:[356,400],21:[401,445],22:[446,490],23:[491,535],24:[536,580],25:[581,625],26:[626,670],27:[671,715],28:[716,760],29:[761,805],30:[806,850]},_crToEstimatedConModRange:{0:[-1,2],.125:[-1,1],.25:[0,2],.5:[0,2],1:[0,2],2:[0,3],3:[1,3],4:[1,4],5:[2,4],6:[2,5],7:[1,5],8:[1,5],9:[2,5],10:[2,5],11:[2,6],12:[1,5],13:[3,6],14:[3,6],15:[3,6],16:[4,7],17:[3,7],18:[1,7],19:[4,6],20:[5,9],21:[3,8],22:[4,9],23:[5,9],24:[5,9],25:[7,9],26:[7,9],27:[7,9],28:[7,9],29:[7,9],30:[10,10]},_atkCrRanges:{3:[-1,2],4:[3,3],5:[4,4],6:[5,7],7:[8,10],8:[11,15],9:[16,16],10:[17,20],11:[21,23],12:[24,26],13:[27,29],14:[30,30]},_crToAtk(cr){return this._crRangeToVal(cr,this._atkCrRanges)},_crDprRanges:{0:[0,1],.125:[2,3],.25:[4,5],.5:[6,8],1:[9,14],2:[15,20],3:[21,26],4:[27,32],5:[33,38],6:[39,44],7:[45,50],8:[51,56],9:[57,62],10:[63,68],11:[69,74],12:[75,80],13:[81,86],14:[87,92],15:[93,98],16:[99,104],17:[105,110],18:[111,116],19:[117,122],20:[123,140],21:[141,158],22:[159,176],23:[177,194],24:[195,212],25:[213,230],26:[231,248],27:[249,266],28:[267,284],29:[285,302],30:[303,320]},_crToEstimatedDamageMod:{0:[-1,2],.125:[0,2],.25:[0,3],.5:[0,3],1:[0,3],2:[1,4],3:[1,4],4:[2,4],5:[2,5],6:[2,5],7:[2,5],8:[2,5],9:[2,6],10:[3,6],11:[3,6],12:[3,6],13:[3,7],14:[3,7],15:[3,7],16:[4,8],17:[4,8],18:[4,8],19:[5,8],20:[6,9],21:[6,9],22:[6,10],23:[6,10],24:[6,11],25:[7,11],26:[7,11],27:[7,11],28:[8,11],29:[8,11],30:[9,11]},_dcRanges:{13:[-1,3],14:[4,4],15:[5,7],16:[8,10],17:[11,12],18:[13,16],19:[17,20],20:[21,23],21:[24,26],22:[27,29],23:[30,30]},_crToDc(cr){return this._crRangeToVal(cr,this._dcRanges)},_casterLevelAndClassCantrips:{artificer:[2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,4,4],bard:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],cleric:[3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5],druid:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],sorcerer:[4,4,4,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6],warlock:[2,2,2,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4],wizard:[3,3,3,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5]},_casterLevelAndClassToCantrips(level,clazz){clazz=(clazz||"cleric").toLowerCase();return this._casterLevelAndClassCantrips[clazz][level]},_protectedCantrips:["acid splash","chill touch","eldritch blast","fire bolt","poison spray","produce flame","ray of frost","sacred flame","shocking grasp","thorn whip","vicious mockery"],_crToCasterLevelAvg:{0:2,.125:2,.25:2,.5:2,1:3.5,2:4.25,3:5.75,4:6.75,5:8,6:9.75,7:10.5,8:10.75,9:11.5,10:11.75,11:12,12:13,13:14,14:15,15:16,16:17,17:18,18:19,19:20},_crToCasterLevel(cr){if(cr===0)return 2;if(cr>=19)return 20;return this._crToCasterLevelAvg[cr]},_calcNewAbility(mon,prop,modifier){return Math.max(1,(modifier+5)*2+mon[prop]%2)},_rng:null,_initRng(mon,toCr){let h=CryptUtil.hashCode(toCr);h=31*h+CryptUtil.hashCode(mon.source);h=31*h+CryptUtil.hashCode(mon.name);this._rng=Math.seed(h)},async scale(mon,toCr){await this._pInitSpellCache();if(toCr==null||toCr==="Unknown")throw new Error("Attempting to scale unknown CR!");this._initRng(mon,toCr);mon=JSON.parse(JSON.stringify(mon));const crIn=mon.cr.cr||mon.cr;const crInNumber=Parser.crToNumber(crIn);if(crInNumber===toCr)throw new Error("Attempting to scale creature to own CR!");if(crInNumber>30)throw new Error("Attempting to scale a creature beyond 30 CR!");if(crInNumber<0)throw new Error("Attempting to scale a creature below 0 CR!");const pbIn=Parser.crToPb(crIn);const pbOut=Parser.crToPb(String(toCr));if(pbIn!==pbOut)this._applyPb(mon,pbIn,pbOut);this._adjustHp(mon,crInNumber,toCr);this._adjustAtkBonusAndSaveDc(mon,crInNumber,toCr,pbIn,pbOut);this._adjustDpr(mon,crInNumber,toCr);this._adjustSpellcasting(mon,crInNumber,toCr);this._armorClass.adjustAc(mon,crInNumber,toCr);this._handleUpdateAbilityScoresSkillsSaves(mon,pbOut);[`strOld`,`dexOld`,`conOld`,`intOld`,`wisOld`,`chaOld`].forEach((a=>delete mon[a]));const crOutStr=Parser.numberToCr(toCr);if(mon.cr.cr)mon.cr.cr=crOutStr;else mon.cr=crOutStr;mon._displayName=`${mon.name} (CR ${crOutStr})`;mon._scaledCr=toCr;mon._isScaledCr=true;mon._originalCr=mon._originalCr||crIn;return mon},_applyPb(mon,pbIn,pbOut){if(mon.save){Object.keys(mon.save).forEach((k=>{const bonus=mon.save[k];const fromAbility=Parser.getAbilityModNumber(mon[k]);if(fromAbility===Number(bonus))return;const actualPb=bonus-fromAbility;const expert=actualPb===pbIn*2;mon.save[k]=this._applyPb_getNewSkillSaveMod(pbIn,pbOut,bonus,expert)}))}this._applyPb_skills(mon,pbIn,pbOut,mon.skill);const pbDelta=pbOut-pbIn;const handleHit=str=>str.replace(/{@hit ([-+]?\d+)}/g,((m0,m1)=>{const curToHit=Number(m1);const outToHit=curToHit+pbDelta;return`{@hit ${outToHit}}`}));const handleDc=str=>str.replace(/DC (\d+)/g,((m0,m1)=>`{@dc ${m1}}`)).replace(/{@dc (\d+)}/g,((m0,m1)=>{const curDc=Number(m1);const outDc=curDc+pbDelta;return`DC ${outDc}`}));if(mon.spellcasting){mon.spellcasting.forEach((sc=>{if(sc.headerEntries){const toUpdate=JSON.stringify(sc.headerEntries);const out=handleDc(handleHit(toUpdate));sc.headerEntries=JSON.parse(out)}}))}const handleGenericEntries=prop=>{if(mon[prop]){mon[prop].forEach((it=>{const toUpdate=JSON.stringify(it.entries);const out=handleDc(handleHit(toUpdate));it.entries=JSON.parse(out)}))}};handleGenericEntries("trait");handleGenericEntries("action");handleGenericEntries("bonus");handleGenericEntries("reaction");handleGenericEntries("legendary");handleGenericEntries("mythic");handleGenericEntries("variant")},_applyPb_getNewSkillSaveMod(pbIn,pbOut,oldMod,expert){const mod=Number(oldMod)-(expert?2*pbIn:pbIn)+(expert?2*pbOut:pbOut);return UiUtil.intToBonus(mod)},_applyPb_skills(mon,pbIn,pbOut,monSkill){if(!monSkill)return;Object.keys(monSkill).forEach((skill=>{if(skill==="other"){monSkill[skill].forEach((block=>{if(block.oneOf){this._applyPb_skills(mon,pbIn,pbOut,block.oneOf)}else throw new Error(`Unhandled "other" skill keys: ${Object.keys(block)}`)}));return}const bonus=monSkill[skill];const fromAbility=Parser.getAbilityModNumber(mon[Parser.skillToAbilityAbv(skill)]);if(fromAbility===Number(bonus))return;const actualPb=bonus-fromAbility;const expert=actualPb===pbIn*2;monSkill[skill]=this._applyPb_getNewSkillSaveMod(pbIn,pbOut,bonus,expert);if(skill==="perception"&&mon.passive!=null)mon.passive=10+Number(monSkill[skill])}))},_armorClass:{_getEnchanted(item,baseMod){const out=[];for(let i=0;i<3;++i){out.push({tag:`${item} +${i+1}|dmg`,mod:baseMod+i+1});out.push({tag:`+${i+1} ${item}|dmg`,mod:baseMod+i+1})}return out},_getAllVariants(obj){return Object.keys(obj).map((armor=>{const mod=obj[armor];return[{tag:`${armor}|phb`,mod:mod}].concat(this._getEnchanted(armor,mod))})).reduce(((a,b)=>a.concat(b)),[])},_getAcBaseAndMod(all,tag){const tagBaseType=tag.replace(/( \+\d)?\|.*$/,"");const tagBase=all[tagBaseType];const tagModM=/^.*? (\+\d)\|.*$/.exec(tag);const tagMod=tagModM?Number(tagModM[1]):0;return[tagBase,tagMod]},_isStringContainsTag(tagSet,str){return tagSet.find((it=>str.includes(`@item ${it}`)))},_replaceTag(str,oldTag,nuTag){const out=str.replace(`@item ${oldTag}`,`@item ${nuTag}`);const spl=out.split("|");if(spl.length>2){return`${spl.slice(0,2).join("|")}}`}return out},_canDropShield(mon){return mon._shieldRequired===false&&mon._shieldDropped===false},_dropShield(acItem){const idxShield=acItem.from.findIndex((f=>this._ALL_SHIELD_VARIANTS.find((s=>f._.includes(s.tag)))));if(idxShield===-1)throw new Error("Should never occur!");acItem.from.splice(idxShield,1)},_getAcVal(name){name=name.trim().toLowerCase();const toCheck=[this._HEAVY,this._MEDIUM,this._LIGHT,{shield:2}];for(const tc of toCheck){const armorKey=Object.keys(tc).find((k=>name===k));if(armorKey){const acBonus=tc[armorKey];if(acBonus>10)return acBonus-10}}},_getDexCapVal(name){name=name.trim().toLowerCase();const ix=[this._HEAVY,this._MEDIUM,this._LIGHT].findIndex((tc=>!!Object.keys(tc).find((k=>name===k))));return ix===0?0:ix===1?2:ix===3?999:null},_HEAVY:{"ring mail":14,"chain mail":16,"splint armor":17,"plate armor":18},_MEDIUM:{"hide armor":12,"chain shirt":13,"scale mail":14,breastplate:14,"half plate armor":15},_LIGHT:{"padded armor":11,"leather armor":11,"studded leather armor":12},_MAGE_ARMOR:"@spell mage armor",_ALL_SHIELD_VARIANTS:null,_ALL_HEAVY_VARIANTS:null,_ALL_MEDIUM_VARIANTS:null,_ALL_LIGHT_VARIANTS:null,_initAllVariants(){this._ALL_SHIELD_VARIANTS=this._ALL_SHIELD_VARIANTS||[{tag:"shield|phb",mod:2},...this._getEnchanted("shield",2)];this._ALL_HEAVY_VARIANTS=this._ALL_HEAVY_VARIANTS||this._getAllVariants(this._HEAVY);this._ALL_MEDIUM_VARIANTS=this._ALL_MEDIUM_VARIANTS||this._getAllVariants(this._MEDIUM);this._ALL_LIGHT_VARIANTS=this._ALL_LIGHT_VARIANTS||this._getAllVariants(this._LIGHT)},adjustAc(mon,crIn,crOut){this._initAllVariants();mon.ac=mon.ac.map((acItem=>this._getAdjustedAcItem(mon,crIn,crOut,acItem)))},_doPreAdjustAcs(mon,acItem){if(mon.dexOld==null||mon.dex===mon.dexOld)return;if(!acItem.from)return;const originalDexMod=Parser.getAbilityModNumber(mon.dexOld);const currentDexMod=Parser.getAbilityModNumber(mon.dex);if(originalDexMod===currentDexMod)return;if(this._isMageArmor(acItem)){acItem._acBeforePreAdjustment=acItem.ac;acItem.ac=13+Parser.getAbilityModNumber(mon.dex);return}const lightTags=this._ALL_LIGHT_VARIANTS.map((it=>it.tag));const mediumTags=this._ALL_MEDIUM_VARIANTS.map((it=>it.tag));for(let i=0;i<acItem.from.length;++i){const from=acItem.from[i];const lightTag=this._isStringContainsTag(lightTags,from);if(lightTag){acItem._acBeforePreAdjustment=acItem.ac;acItem.ac=acItem.ac-originalDexMod+currentDexMod;return}const mediumTag=this._isStringContainsTag(mediumTags,from);if(mediumTag){const originalDexModMedium=Math.min(2,originalDexMod);const currentDexModMedium=Math.min(2,currentDexMod);const curAc=acItem.ac;acItem.ac=acItem.ac-originalDexModMedium+currentDexModMedium;if(curAc!==acItem.ac)acItem._acBeforePreAdjustment=curAc;return}}},_getAdjustedAcItem(mon,crIn,crOut,acItem){this._doPreAdjustAcs(mon,acItem);let iter=0;let out=null;while(out==null){if(iter>100)throw new Error(`Failed to calculate new AC! Input was:\n${JSON.stringify(acItem,null,"\t")}`);out=this._getAdjustedAcItem_getAdjusted(mon,crIn,crOut,acItem,iter);iter++}let handledEnchBonus=!acItem._enchTotal;if(acItem.from){if(acItem._enchTotal){acItem.from.forEach((f=>{if(handledEnchBonus)return;if(f.ench&&f.ench<3){const enchToGive=Math.min(3-f.ench,acItem._enchTotal);acItem._enchTotal-=enchToGive;f.ench+=enchToGive;acItem.ac+=enchToGive;f._=`{@item +${f.ench} ${f.name}}`;if(acItem._enchTotal<=0)handledEnchBonus=true}else if(out._gearBonus){const enchToGive=Math.min(3,acItem._enchTotal);acItem._enchTotal-=enchToGive;f._=`{@item +${enchToGive} ${f.name}}`;if(acItem._enchTotal<=0)handledEnchBonus=true}}))}acItem.from=acItem.from.map((it=>it._))}if(!handledEnchBonus){const enchToGive=Math.min(3,acItem._enchTotal);acItem._enchTotal-=enchToGive;acItem.ac+=enchToGive+1;(acItem.from=acItem.from||[]).unshift(`{@item +${enchToGive} leather armor}`);if(acItem._enchTotal>0)acItem.ac+=acItem._enchTotal}if(acItem._miscOffset!=null)acItem.ac+=acItem._miscOffset;["_enchTotal","_gearBonus","_dexCap","_miscOffset"].forEach((it=>delete acItem[it]));return out},_isMageArmor(acItem){return acItem.condition&&acItem.condition.toLowerCase().includes(this._MAGE_ARMOR)},_getAdjustedAcItem_getAdjusted(mon,crIn,crOut,acItem,iter){const getEnchTotal=()=>acItem._enchTotal||0;const getBaseGearBonus=()=>acItem._gearBonus||0;const getDexCap=()=>acItem._dexCap||999;if(typeof acItem!=="number"){acItem._enchTotal=acItem._enchTotal||0;acItem._gearBonus=0;acItem._dexCap=999}if(acItem.from){acItem.from=acItem.from.map((f=>{if(f._)f=f._;const m=/@item (\+\d+) ([^+\d]+)\|([^|}]+)/gi.exec(f);if(m){const[_,name,bonus,source]=m;const acVal=this._getAcVal(name);if(acVal)acItem._gearBonus+=acVal;const dexCap=this._getDexCapVal(name);if(dexCap!=null)acItem._dexCap=Math.min(acItem._dexCap,dexCap);const ench=Number(bonus);acItem._enchTotal+=ench;return{_:f,name:name.trim(),ench:ench,source:source}}else{const m=/@item ([^|}]+)(\|[^|}]+)?(\|[^|}]+)?/gi.exec(f);if(m){const[_,name,source,display]=m;const out={_:f,name:name};if(source)out.source=source;if(display)out.display=display;const acVal=this._getAcVal(name);if(acVal){acItem._gearBonus+=acVal;out._gearBonus=acVal}const dexCap=this._getDexCapVal(name);if(dexCap!=null)acItem._dexCap=Math.min(acItem._dexCap,dexCap);return out}else return{_:f,name:f}}}))}const expectedBaseScore=mon.dexOld!=null?getBaseGearBonus()+Math.min(Parser.getAbilityModNumber(mon.dexOld),getDexCap())+(this._isMageArmor(acItem)?13:10):null;let canAdjustDex=mon.dexOld==null;const dexGain=Parser.getAbilityModNumber(mon.dex)-Parser.getAbilityModNumber(mon.dexOld||mon.dex);const curr=acItem._acBeforePreAdjustment!=null?acItem._acBeforePreAdjustment:acItem.ac||acItem;const currWithoutEnchants=curr-(iter===0?getEnchTotal():0);if(typeof acItem!=="number"){acItem._miscOffset=acItem._miscOffset!=null?acItem._miscOffset:expectedBaseScore!=null?currWithoutEnchants-expectedBaseScore:null}const idealAcIn=ScaleCreature._crToAc(crIn);const idealAcOut=ScaleCreature._crToAc(crOut);const effectiveCurrent=expectedBaseScore==null?currWithoutEnchants:expectedBaseScore;const target=ScaleCreature._getScaledToRatio(effectiveCurrent,idealAcIn,idealAcOut);let targetNoShield=target;const acGain=target-effectiveCurrent;const dexMismatch=acGain-dexGain;const adjustDex=()=>{if(mon.dexOld==null)mon.dexOld=mon.dex;mon.dex=ScaleCreature._calcNewAbility(mon,"dex",Parser.getAbilityModNumber(mon.dex)+dexMismatch);canAdjustDex=false;return true};const handleNoArmor=()=>{if(dexMismatch>0){if(canAdjustDex){adjustDex();return target}else{return{ac:target,from:["natural armor"]}}}else if(dexMismatch<0&&canAdjustDex){adjustDex();return target}else return target};const handleMageArmor=()=>{if(this._isMageArmor(acItem)){if(canAdjustDex){acItem.ac=target;delete acItem._acBeforePreAdjustment;return adjustDex()}else{return true}}return false};const handleShield=()=>{const DUAL_SHIELD_AC=3;if(acItem.from){const fromShields=acItem.from.filter((f=>this._ALL_SHIELD_VARIANTS.find((s=>f._.includes(`@item ${s.tag}`)))));if(fromShields.length){if(fromShields.length>1)throw new Error("AC contained multiple shields!");const shieldRequired=mon._shieldRequired!=null?mon._shieldRequired:(()=>{const checkShields=prop=>{if(!mon[prop])return false;for(const it of mon[prop]){if(it.name&&it.name.toLowerCase().includes("shield"))return true;if(it.entries&&JSON.stringify(it.entries).match(/shield/i))return true}};return mon._shieldRequired=checkShields("trait")||checkShields("action")||checkShields("bonus")||checkShields("reaction")||checkShields("legendary")||checkShields("mythic")})();mon._shieldDropped=false;const fromShield=fromShields[0]._;const idx=acItem.from.findIndex((it=>it===fromShield));if(fromShield.endsWith("|shields}")){targetNoShield-=DUAL_SHIELD_AC;if(!shieldRequired&&acGain<=-DUAL_SHIELD_AC){acItem.from.splice(idx,1);acItem.ac-=DUAL_SHIELD_AC;mon._shieldDropped=true;if(acItem.ac===target)return true}}else{const shieldVal=this._ALL_SHIELD_VARIANTS.find((s=>fromShield.includes(s.tag)));targetNoShield-=shieldVal.mod;if(!shieldRequired&&acGain<=-shieldVal.mod){acItem.from.splice(idx,1);acItem.ac-=shieldVal.mod;mon._shieldDropped=true;if(acItem.ac===target)return true}}}}return false};const handleHeavyArmor=()=>{const PL3_PLATE=21;const heavyTags=this._ALL_HEAVY_VARIANTS.map((it=>it.tag));const isHeavy=ac=>ac>=14&&ac<=PL3_PLATE;const isBeyondHeavy=ac=>ac>PL3_PLATE;const getHeavy=ac=>{const nonEnch=Object.keys(this._HEAVY).find((armor=>this._HEAVY[armor]===ac));if(nonEnch)return`${nonEnch}|phb`;switch(ac){case 19:return[`+1 plate armor|dmg`,`+2 splint armor|dmg`][RollerUtil.roll(1,ScaleCreature._rng)];case 20:return`+2 plate armor|dmg`;case PL3_PLATE:return`+3 plate armor|dmg`}};if(acItem.from){for(let i=0;i<acItem.from.length;++i){const heavyTag=this._isStringContainsTag(heavyTags,acItem.from[i]._);if(heavyTag){if(isHeavy(targetNoShield)){const bumpOne=targetNoShield===15;if(bumpOne)targetNoShield++;acItem.from[i]._=this._replaceTag(acItem.from[i]._,heavyTag,getHeavy(targetNoShield));acItem.ac=target+(bumpOne?1:0);delete acItem._acBeforePreAdjustment;return true}else if(this._canDropShield(mon)&&isHeavy(target)){const targetWithBump=target+(target===15?1:0);acItem.from[i]._=this._replaceTag(acItem.from[i]._,heavyTag,getHeavy(targetWithBump));acItem.ac=targetWithBump;delete acItem._acBeforePreAdjustment;this._dropShield(acItem);return true}else if(isBeyondHeavy(targetNoShield)){const max=PL3_PLATE;acItem.from[i]._=this._replaceTag(acItem.from[i]._,heavyTag,getHeavy(max));acItem.ac=max;delete acItem._acBeforePreAdjustment;return true}else{const[tagBase,tagMod]=this._getAcBaseAndMod(this._LIGHT,heavyTag);const tagAc=tagBase+tagMod;acItem.from[i]._=this._replaceTag(acItem.from[i]._,heavyTag,`half plate armor|phb`);acItem.ac=acItem.ac-tagAc+15+Math.min(2,Parser.getAbilityModNumber(mon.dex));delete acItem._acBeforePreAdjustment;return false}}}}return false};const handleMediumArmor=()=>{const mediumTags=this._ALL_MEDIUM_VARIANTS.map((it=>it.tag));const isMedium=(ac,asPos)=>{const min=12+(canAdjustDex?-5:Parser.getAbilityModNumber(mon.dex));const max=18+(canAdjustDex?2:Math.min(2,Parser.getAbilityModNumber(mon.dex)));if(asPos)return ac<min?-1:ac>max?1:0;return ac>=min&&ac<=max};const getMedium=(ac,curArmor)=>{const getByBase=base=>{switch(base){case 14:return[`scale mail|phb`,`breastplate|phb`][RollerUtil.roll(1,ScaleCreature._rng)];case 16:return[`+1 half plate armor|dmg`,`+2 breastplate|dmg`,`+2 scale mail|dmg`][RollerUtil.roll(2,ScaleCreature._rng)];case 17:return`+2 half plate armor|dmg`;case 18:return`+3 half plate armor|dmg`;default:{const nonEnch=Object.keys(this._MEDIUM).find((it=>this._MEDIUM[it]===base));return`${nonEnch}|phb`}}};if(canAdjustDex){let fromArmor=curArmor.ac;let maxFromArmor=fromArmor+2;let minFromArmor=fromArmor-5;const withinDexRange=()=>ac>=minFromArmor&&ac<=maxFromArmor;const getTotalAc=()=>fromArmor+Math.min(2,Parser.getAbilityModNumber(mon.dex));let loops=0;while(1){if(loops>1e3)throw new Error(`Failed to find valid light armor!`);if(withinDexRange()){canAdjustDex=false;if(mon.dexOld==null)mon.dexOld=mon.dex;if(ac>getTotalAc())mon.dex+=2;else mon.dex-=2}else{if(ac<minFromArmor)fromArmor-=1;else fromArmor+=1;if(fromArmor<12||fromArmor>18)throw Error("Should never occur!");maxFromArmor=fromArmor+2;minFromArmor=fromArmor-5}if(getTotalAc()===ac)break;loops++}return getByBase(fromArmor)}else{const dexOffset=Math.min(Parser.getAbilityModNumber(mon.dex),2);return getByBase(ac-dexOffset)}};if(acItem.from){for(let i=0;i<acItem.from.length;++i){const mediumTag=this._isStringContainsTag(mediumTags,acItem.from[i]._);if(mediumTag){const[tagBase,tagMod]=this._getAcBaseAndMod(this._MEDIUM,mediumTag);const tagAc=tagBase+tagMod;if(isMedium(targetNoShield)){acItem.from[i]._=this._replaceTag(acItem.from[i]._,mediumTag,getMedium(targetNoShield,{tag:mediumTag,ac:tagAc}));acItem.ac=target;delete acItem._acBeforePreAdjustment;return true}else if(this._canDropShield(mon)&&isMedium(target)){acItem.from[i]._=this._replaceTag(acItem.from[i]._,mediumTag,getMedium(target,{tag:mediumTag,ac:tagAc}));acItem.ac=target;delete acItem._acBeforePreAdjustment;this._dropShield(acItem);return true}else if(canAdjustDex&&isMedium(targetNoShield,true)===-1){acItem.from[i]._=this._replaceTag(acItem.from[i]._,mediumTag,`studded leather armor|phb`);acItem.ac=acItem.ac-tagAc-Math.min(2,Parser.getAbilityModNumber(mon.dex))+12+Parser.getAbilityModNumber(mon.dex);delete acItem._acBeforePreAdjustment;return false}else{acItem.from[i]._=this._replaceTag(acItem.from[i]._,mediumTag,`ring mail|phb`);acItem.ac=14;delete acItem._acBeforePreAdjustment;return-1}}}}return false};const handleLightArmor=()=>{const lightTags=this._ALL_LIGHT_VARIANTS.map((it=>it.tag));const isLight=(ac,asPos)=>{const min=11+(canAdjustDex?-5:Parser.getAbilityModNumber(mon.dex));const max=15+(canAdjustDex?100:Parser.getAbilityModNumber(mon.dex));if(asPos)return ac<min?-1:ac>max?1:0;return ac>=min&&ac<=max};const getLight=(ac,curArmor)=>{const getByBase=base=>{switch(base){case 11:return[`padded armor|phb`,`leather armor|phb`][RollerUtil.roll(1,ScaleCreature._rng)];case 12:return`studded leather armor|phb`;case 13:return[`+1 padded armor|dmg`,`+1 leather armor|dmg`][RollerUtil.roll(1,ScaleCreature._rng)];case 14:return[`+2 padded armor|dmg`,`+2 leather armor|dmg`,`+1 studded leather armor|dmg`][RollerUtil.roll(2,ScaleCreature._rng)];case 15:return`+2 studded leather armor|dmg`}};if(canAdjustDex){let fromArmor=curArmor.ac;let minFromArmor=fromArmor-5;const withinDexRange=()=>ac>=minFromArmor;const getTotalAc=()=>fromArmor+Parser.getAbilityModNumber(mon.dex);let loops=0;while(1){if(loops>1e3)throw new Error(`Failed to find valid light armor!`);if(withinDexRange()){canAdjustDex=false;if(mon.dexOld==null)mon.dexOld=mon.dex;if(ac>getTotalAc())mon.dex+=2;else mon.dex-=2}else{if(ac<minFromArmor)fromArmor-=1;else fromArmor+=1;if(fromArmor<11||fromArmor>15)throw Error("Should never occur!");minFromArmor=fromArmor-5}if(getTotalAc()===ac)break;loops++}return getByBase(fromArmor)}else{const dexOffset=Parser.getAbilityModNumber(mon.dex);return getByBase(ac-dexOffset)}};if(acItem.from){for(let i=0;i<acItem.from.length;++i){const lightTag=this._isStringContainsTag(lightTags,acItem.from[i]._);if(lightTag){const[tagBase,tagMod]=this._getAcBaseAndMod(this._LIGHT,lightTag);const tagAc=tagBase+tagMod;if(isLight(targetNoShield)){acItem.from[i]._=this._replaceTag(acItem.from[i]._,lightTag,getLight(targetNoShield,{tag:lightTag,ac:tagAc}));acItem.ac=target;delete acItem._acBeforePreAdjustment;return true}else if(this._canDropShield(mon)&&isLight(target)){acItem.from[i]._=this._replaceTag(acItem.from[i]._,lightTag,getLight(target,{tag:lightTag,ac:tagAc}));acItem.ac=target;delete acItem._acBeforePreAdjustment;this._dropShield(acItem);return true}else if(!canAdjustDex&&isLight(targetNoShield,true)===-1){if(acItem.from.length===1){acItem._droppedArmor=true;return-1}else{acItem.from.splice(i,1);acItem.ac=acItem.ac-tagAc+10;delete acItem._acBeforePreAdjustment;return-1}}else{acItem.from[i]._=this._replaceTag(acItem.from[i]._,lightTag,`chain shirt|phb`);acItem.ac=acItem.ac-tagAc-Parser.getAbilityModNumber(mon.dex)+13+Math.min(2,Parser.getAbilityModNumber(mon.dex));delete acItem._acBeforePreAdjustment;return-1}}}}return false};const handleNaturalArmor=()=>{if(acItem.from&&acItem.from.map((it=>it._)).includes("natural armor")){if(canAdjustDex){acItem.ac=target;delete acItem._acBeforePreAdjustment;return adjustDex()}else{acItem.ac=target;delete acItem._acBeforePreAdjustment;return true}}return false};if(acItem.ac&&!acItem._droppedArmor){const toRun=[handleMageArmor,handleShield,handleHeavyArmor,handleMediumArmor,handleLightArmor,handleNaturalArmor];let lastVal=0;for(let i=0;i<toRun.length;++i){lastVal=toRun[i]();if(lastVal===-1)return null;else if(lastVal)break}if(!lastVal){acItem.ac=target;delete acItem._acBeforePreAdjustment}return acItem}else{return handleNoArmor()}}},_interpAndTranslateToSpace(x,lh,mi){let[l,h]=lh;let[m,i]=mi;const OFFSET=.1;l-=OFFSET;h+=OFFSET;m-=OFFSET;i+=OFFSET;const delta=(x-l)/(h-l);return Math.round(delta*(i-m)+m)},_getScaledToRatio(inVal,inTotal,outTotal){return Math.round(inVal*(outTotal/inTotal))},_adjustHp(mon,crIn,crOut){if(mon.hp.special)return;const hpInAvg=this._crHpRanges[crIn].mean();const hpOutRange=this._crHpRanges[crOut];const hpOutAvg=hpOutRange.mean();const targetHpOut=this._getScaledToRatio(mon.hp.average,hpInAvg,hpOutAvg);const targetHpDeviation=(hpOutRange[1]-hpOutRange[0])/2;const targetHpRange=[Math.floor(targetHpOut-targetHpDeviation),Math.ceil(targetHpOut+targetHpDeviation)];const origFormula=mon.hp.formula.replace(/\s*/g,"");mon.hp.average=Math.floor(Math.max(1,targetHpOut));const fSplit=origFormula.split(/([-+])/);const mDice=/(\d+)d(\d+)/i.exec(fSplit[0]);const hdFaces=Number(mDice[2]);const hdAvg=(hdFaces+1)/2;const numHd=Number(mDice[1]);const modTotal=fSplit.length===3?Number(`${fSplit[1]}${fSplit[2]}`):0;const modPerHd=Math.floor(modTotal/numHd);const getAdjustedConMod=()=>{const outRange=this._crToEstimatedConModRange[crOut];if(outRange[0]===outRange[1])return outRange[0];return this._interpAndTranslateToSpace(modPerHd,this._crToEstimatedConModRange[crIn],outRange)};let numHdOut=numHd;let hpModOut=getAdjustedConMod();const getAvg=(numHd=numHdOut,hpMod=hpModOut)=>numHd*hdAvg+numHd*hpMod;const inRange=num=>num>=targetHpRange[0]&&num<=targetHpRange[1];let loops=0;while(1){if(inRange(getAvg(numHdOut)))break;if(loops>100)throw new Error(`Failed to find new HP! Current formula is: ${numHd}d${hpModOut}`);const tryAdjustNumDice=()=>{let numDiceTemp=numHdOut;let tempTotalHp=getAvg();let found=false;if(tempTotalHp>targetHpRange[1]){while(numDiceTemp>1){numDiceTemp-=1;tempTotalHp-=hdAvg;if(inRange(getAvg(numDiceTemp))){found=true;break}}}else{while(tempTotalHp<=targetHpRange[1]){numDiceTemp+=1;tempTotalHp+=hdAvg;if(inRange(getAvg(numDiceTemp))){found=true;break}}}if(found){numHdOut=numDiceTemp;return true}return false};const tryAdjustMod=()=>{hpModOut+=(1-loops%2*2)*(loops+1)};if(tryAdjustNumDice())break;tryAdjustMod();loops++}mon.hp.average=Math.floor(getAvg(numHdOut));const outModTotal=numHdOut*hpModOut;mon.hp.formula=`${numHdOut}d${hdFaces}${outModTotal===0?"":`${outModTotal>=0?"+":""}${outModTotal}`}`.replace(/([-+])\s*(\d+)$/g," $1 $2");if(hpModOut!==modPerHd){const conOut=this._calcNewAbility(mon,"con",hpModOut);if(conOut!==mon.con&&mon.save&&mon.save.con){const conDelta=Parser.getAbilityModifier(conOut)-Parser.getAbilityModifier(mon.con);const conSaveOut=Number(mon.save.con)+conDelta;mon.save.con=`${conSaveOut>=0?"+":""}${conSaveOut}`}mon.con=conOut}},_getEnchantmentBonus(str){const m=/\+(\d+)/.exec(str);if(m)return Number(m[1]);else return 0},_wepThrownFinesse:["dagger","dart"],_wepFinesse:["dagger","dart","rapier","scimitar","shortsword","whip"],_wepThrown:["handaxe","javelin","light hammer","spear","trident","net"],_getModBeingScaled(strMod,dexMod,modFromAbil,name,content){const guessMod=()=>{name=name.toLowerCase();content=content.replace(/{@atk ([A-Za-z,]+)}/gi,((_,p1)=>Renderer.attackTagToFull(p1))).toLowerCase();const isMeleeOrRangedWep=content.includes("melee or ranged weapon attack:");if(isMeleeOrRangedWep){const wtf=this._wepThrownFinesse.find((it=>content.includes(it)));if(wtf)return"dex";const wf=this._wepFinesse.find((it=>content.includes(it)));if(wf)return"dex";const wt=this._wepThrown.find((it=>content.includes(it)));if(wt)return"str";return null}const isMeleeWep=content.includes("melee weapon attack:");if(isMeleeWep){const wf=this._wepFinesse.find((it=>content.includes(it)));if(wf)return"dex";return"str"}const isRangedWep=content.includes("ranged weapon attack:");if(isRangedWep){const wt=this._wepThrown.find((it=>content.includes(it)));if(wt)return"str";return"dex"}};if(!modFromAbil||strMod===dexMod&&strMod===modFromAbil)return guessMod();return strMod===modFromAbil?"str":dexMod===modFromAbil?"dex":null},_adjustAtkBonusAndSaveDc(mon,crIn,crOut,pbIn,pbOut){const idealHitIn=Number(this._crToAtk(crIn));const idealHitOut=Number(this._crToAtk(crOut));const strMod=Parser.getAbilityModNumber(mon.str);const dexMod=Parser.getAbilityModNumber(mon.dex);const getAdjustedHitFlat=toHitIn=>{if(crIn<crOut)return toHitIn+(idealHitOut-idealHitIn);return this._getScaledToRatio(toHitIn,idealHitIn,idealHitOut)};const handleHit=(str,name)=>{const offsetEnchant=name!=null?this._getEnchantmentBonus(name):0;return str.replace(/{@hit ([-+]?\d+)}/g,((m0,m1)=>{const curToHit=Number(m1);const modFromAbil=curToHit-(offsetEnchant+pbOut);const modBeingScaled=name!=null?this._getModBeingScaled(strMod,dexMod,modFromAbil,name,str):null;const origToHitNoEnch=curToHit+(pbIn-pbOut)-offsetEnchant;const targetToHitNoEnch=getAdjustedHitFlat(origToHitNoEnch);if(origToHitNoEnch===targetToHitNoEnch)return m0;if(modBeingScaled!=null){const modDiff=targetToHitNoEnch-pbOut-(origToHitNoEnch-pbIn);const modFromAbilOut=modFromAbil+modDiff;const tmpModListProp={str:`_strTmpMods`,dex:`_dexTmpMods`}[modBeingScaled];mon[tmpModListProp]=mon[tmpModListProp]||[];mon[tmpModListProp].push(modFromAbilOut)}return`{@hit ${targetToHitNoEnch+offsetEnchant}}`}))};const idealDcIn=this._crToDc(crIn);const idealDcOut=this._crToDc(crOut);const getAdjustedDcFlat=dcIn=>dcIn+(idealDcOut-idealDcIn);const handleDc=(str,castingAbility)=>str.replace(/DC (\d+)/g,((m0,m1)=>`{@dc ${m1}}`)).replace(/{@dc (\d+)}/g,((m0,m1)=>{const curDc=Number(m1);const origDc=curDc+pbIn-pbOut;const outDc=Math.max(10,getAdjustedDcFlat(origDc));if(curDc===outDc)return m0;if(["int","wis","cha"].includes(castingAbility)){const oldKey=(()=>{switch(castingAbility){case"int":return"intOld";case"wis":return"wisOld";case"cha":return"chaOld";default:throw new Error(`Unimplemented!`)}})();if(mon[oldKey]==null){mon[oldKey]=mon[castingAbility];const dcDiff=outDc-origDc;const curMod=Parser.getAbilityModNumber(mon[castingAbility]);mon[castingAbility]=this._calcNewAbility(mon,castingAbility,curMod+dcDiff+pbIn-pbOut)}}return`DC ${outDc}`}));if(mon.spellcasting){mon.spellcasting.forEach((sc=>{if(sc.headerEntries){const toUpdate=JSON.stringify(sc.headerEntries);const out=handleHit(handleDc(toUpdate,sc.ability));sc.headerEntries=JSON.parse(out)}}))}const handleGenericEntries=prop=>{if(mon[prop]){mon[prop].forEach((it=>{const toUpdate=JSON.stringify(it.entries);const out=handleDc(handleHit(toUpdate,it.name));it.entries=JSON.parse(out)}))}};handleGenericEntries("trait");handleGenericEntries("action");handleGenericEntries("bonus");handleGenericEntries("reaction");handleGenericEntries("legendary");handleGenericEntries("mythic");handleGenericEntries("variant");const checkSetTempMod=abil=>{const tmpModListProp={str:`_strTmpMods`,dex:`_dexTmpMods`}[abil];if(!mon[tmpModListProp])return;const nxtK=`_${abil}TmpMod`;if(mon[tmpModListProp].length===0)throw new Error("Should never occur!");else if(mon[tmpModListProp].length>1){const cntEachMod={};mon[tmpModListProp].forEach((mod=>cntEachMod[mod]=(cntEachMod[mod]||0)+1));if(Object.keys(cntEachMod).length===1)mon[nxtK]=mon[tmpModListProp][0];else{const maxCount=Math.max(...Object.values(cntEachMod));const mostPopularMods=Object.entries(cntEachMod).filter((([,cnt])=>cnt===maxCount)).map((([mod])=>Number(mod)));mon[nxtK]=mostPopularMods[0]}}else{mon[nxtK]=mon[tmpModListProp][0]}delete mon[tmpModListProp]};checkSetTempMod("str");checkSetTempMod("dex")},_adjustDpr(mon,crIn,crOut){const idealDprRangeIn=this._crDprRanges[crIn];const idealDprRangeOut=this._crDprRanges[crOut];const dprTotalIn=idealDprRangeIn.mean();const dprTotalOut=idealDprRangeOut.mean();const getAdjustedDpr=dprIn=>{if(crIn===0)dprIn=Math.min(dprIn,.63);return this._getScaledToRatio(dprIn,dprTotalIn,dprTotalOut)};const getAvgDpr=diceExp=>{diceExp=diceExp.replace(/\s*/g,"");const asAverages=diceExp.replace(/d(\d+)/gi,((...m)=>` * ${(Number(m[1])+1)/2}`));return MiscUtil.expEval(asAverages)};const crOutDprVariance=(idealDprRangeOut[1]-idealDprRangeOut[0])/2;let dprAdjustmentComplete=false;let scaledEntries=[];while(!dprAdjustmentComplete){scaledEntries=[];const originalStrMod=Parser.getAbilityModNumber(mon.str);const originalDexMod=Parser.getAbilityModNumber(mon.dex);const strMod=mon._strTmpMod||originalStrMod;const dexMod=mon._dexTmpMod||originalDexMod;const handleDpr=prop=>{if(!mon[prop])return true;let allSucceeded=true;mon[prop].forEach(((it,idxProp)=>{const toUpdate=JSON.stringify(it.entries);let out=toUpdate.replace(RollerUtil.REGEX_DAMAGE_FLAT,((m0,prefix,flatVal,suffix)=>{const adjDpr=getAdjustedDpr(flatVal);return`${prefix}${adjDpr}${suffix}`}));const reqAbilAdjust=[];const offsetEnchant=this._getEnchantmentBonus(it.name);out=out.replace(RollerUtil.REGEX_DAMAGE_DICE,((m0,average,prefix,diceExp,suffix)=>{diceExp=diceExp.replace(/\s+/g,"");const avgDpr=getAvgDpr(diceExp);const adjustedDpr=getAdjustedDpr(avgDpr);const targetDprRange=[Math.max(0,Math.floor(adjustedDpr-crOutDprVariance)),Math.ceil(Math.max(1,adjustedDpr+crOutDprVariance))];const inRange=num=>num>=targetDprRange[0]&&num<=targetDprRange[1];const[dice,modifier]=diceExp.split(/[-+]/);const[numDice,diceFaces]=dice.split("d").map((it=>Number(it)));const modFromAbil=modifier?Number(modifier)-offsetEnchant:null;const modBeingScaled=this._getModBeingScaled(originalStrMod,originalDexMod,modFromAbil,it.name,toUpdate);const originalAbilMod=modBeingScaled==="str"?strMod:modBeingScaled==="dex"?dexMod:null;const getAdjustedDamMod=()=>{if(modBeingScaled==="str"&&mon._strTmpMod!=null)return mon._strTmpMod;if(modBeingScaled==="dex"&&mon._dexTmpMod!=null)return mon._dexTmpMod;if(modFromAbil==null)return 0-offsetEnchant;return this._interpAndTranslateToSpace(modFromAbil,this._crToEstimatedDamageMod[crIn],this._crToEstimatedDamageMod[crOut])};let numDiceOut=numDice;let diceFacesOut=diceFaces;let modOut=getAdjustedDamMod();const doPostCalc=()=>{if(modOut<-5)throw new Error(`Ability modifier ${modBeingScaled!=null?`(${modBeingScaled})`:""} was below -5 (${modOut})! Original dice expression was ${diceExp}.`);if(originalAbilMod!=null&&modOut!==originalAbilMod){const[tmpModProp,maxDprKey]={str:[`_strTmpMod`,`_maxDprStr`],dex:[`_dexTmpMod`,`_maxDprDex`]}[modBeingScaled];let updateTempMod=true;if(mon[tmpModProp]!=null&&mon[tmpModProp]!==modOut){if(mon[maxDprKey]>=adjustedDpr){updateTempMod=false}else{mon[tmpModProp]=modOut;mon[maxDprKey]=adjustedDpr;allSucceeded=false;return""}}if(updateTempMod){mon[maxDprKey]=Math.max(mon[maxDprKey]||0,adjustedDpr);mon[tmpModProp]=modOut}reqAbilAdjust.push({ability:modBeingScaled,mod:modOut,adjustedDpr:adjustedDpr})}};const getDiceExp=(a=numDiceOut,b=diceFacesOut,c=modOut)=>`${a}d${b}${c!==0?` ${c>0?"+":""} ${c}`:""}`;let loops=0;while(1){if(inRange(getAvgDpr(getDiceExp())))break;if(loops>100)throw new Error(`Failed to find new DPR! Current formula is: ${getDiceExp()}`);const tryAdjustNumDice=(diceFacesTemp=diceFacesOut,modTemp=modOut)=>{let numDiceTemp=numDice;let tempAvgDpr=getAvgDpr(getDiceExp(numDiceTemp,diceFacesTemp,modTemp));let found=false;if(adjustedDpr<tempAvgDpr){while(numDiceTemp>1&&tempAvgDpr>=targetDprRange[0]){numDiceTemp-=1;tempAvgDpr-=(diceFacesTemp+1)/2;if(inRange(getAvgDpr(getDiceExp(numDiceTemp,diceFacesTemp,modTemp)))){found=true;break}}}else{while(tempAvgDpr<=targetDprRange[1]){numDiceTemp+=1;tempAvgDpr+=(diceFacesTemp+1)/2;if(inRange(getAvgDpr(getDiceExp(numDiceTemp,diceFacesTemp,modTemp)))){found=true;break}}}if(found){numDiceOut=numDiceTemp;return true}return false};const tryAdjustDiceFaces=()=>{if(diceFaces===4||diceFaces===20)return;let diceFacesTemp=diceFaces;let tempAvgDpr=getAvgDpr(getDiceExp(undefined,diceFacesTemp));let found=false;if(adjustedDpr<tempAvgDpr){while(diceFacesTemp>4&&tempAvgDpr>=targetDprRange[0]){diceFacesTemp=Renderer.dice.getPreviousDice(diceFacesTemp);tempAvgDpr=getAvgDpr(getDiceExp(undefined,diceFacesTemp));if(inRange(getAvgDpr(getDiceExp(numDice,diceFacesTemp,modOut)))){found=true;break}else{found=tryAdjustNumDice(diceFacesTemp);if(found)break}}}else{while(diceFacesTemp<20&&tempAvgDpr<=targetDprRange[1]){diceFacesTemp=Renderer.dice.getNextDice(diceFacesTemp);tempAvgDpr=getAvgDpr(getDiceExp(undefined,diceFacesTemp));if(inRange(getAvgDpr(getDiceExp(numDice,diceFacesTemp,modOut)))){found=true;break}else{found=tryAdjustNumDice(diceFacesTemp);if(found)break}}}if(found){diceFacesOut=diceFacesTemp;return true}return false};const tryAdjustMod=()=>{modOut+=(1-loops%2*2)*(loops+1)};if(tryAdjustNumDice())break;if(tryAdjustDiceFaces())break;tryAdjustMod();loops++}doPostCalc();const diceExpOut=getDiceExp(undefined,undefined,modOut+offsetEnchant);const avgDamOut=Math.floor(getAvgDpr(diceExpOut));if(avgDamOut<=0)return`1 ${suffix.replace(/^[^\w]+/," ").replace(/ +/," ")}`;return`${Math.floor(getAvgDpr(diceExpOut))}${prefix}${diceExpOut}${suffix}`}));if(!allSucceeded)return false;if(toUpdate!==out){scaledEntries.push({prop:prop,idxProp:idxProp,entriesStrOriginal:toUpdate,entriesStr:out,reqAbilAdjust:reqAbilAdjust})}}));return allSucceeded};if(!handleDpr("trait"))continue;if(!handleDpr("action"))continue;if(!handleDpr("bonus"))continue;if(!handleDpr("reaction"))continue;if(!handleDpr("legendary"))continue;if(!handleDpr("mythic"))continue;if(!handleDpr("variant"))continue;dprAdjustmentComplete=true}scaledEntries.forEach((it=>{mon[it.prop][it.idxProp].entries=JSON.parse(it.entriesStr)}));const updateAbility=prop=>{const[tmpModProp,oldScoreProp]={str:[`_strTmpMod`,`strOld`],dex:[`_dexTmpMod`,`dexOld`]}[prop];if(mon[tmpModProp]!=null){mon[oldScoreProp]=mon[prop];mon[prop]=this._calcNewAbility(mon,prop,mon[tmpModProp])}delete mon[tmpModProp]};updateAbility("str");updateAbility("dex")},_handleUpdateAbilityScoresSkillsSaves(mon){const TO_HANDLE=["str","dex","int","wis","con"];const getModString=mod=>`${mod>=0?"+":""}${mod}`;TO_HANDLE.forEach((abil=>{const abilOld=(()=>{switch(abil){case"str":return`strOld`;case"dex":return`dexOld`;case"int":return`intOld`;case"wis":return`wisOld`;case"con":return`conOld`;default:throw new Error(`Unimplemented!`)}})();if(mon[abilOld]!=null){const diff=Parser.getAbilityModNumber(mon[abil])-Parser.getAbilityModNumber(mon[abilOld]);if(mon.save&&mon.save[abil]!=null){const out=Number(mon.save[abil])+diff;mon.save[abil]=UiUtil.intToBonus(out)}this._handleUpdateAbilityScoresSkillsSaves_handleSkills(mon.skill,abil,diff);if(abil==="wis"&&mon.passive!=null){if(typeof mon.passive==="number"){mon.passive=mon.passive+diff}else{delete mon.passive}}}}))},_handleUpdateAbilityScoresSkillsSaves_handleSkills(monSkill,abil,diff){if(!monSkill)return;Object.keys(monSkill).forEach((skill=>{if(skill==="other"){monSkill[skill].forEach((block=>{if(block.oneOf){this._handleUpdateAbilityScoresSkillsSaves_handleSkills(block.oneOf.oneOf,abil,diff)}else throw new Error(`Unhandled "other" skill keys: ${Object.keys(block)}`)}));return}const skillAbil=Parser.skillToAbilityAbv(skill);if(skillAbil!==abil)return;const out=Number(monSkill[skill])+diff;monSkill[skill]=UiUtil.intToBonus(out)}))},_spells:null,_pInitSpellCache(){if(this._spells)return Promise.resolve();this._spells={};return DataUtil.loadJSON(`${Renderer.get().baseUrl}data/spells/spells-phb.json`).then((data=>{this.__initSpellCache(data)}))},__initSpellCache(data){data.spell.forEach((s=>{Renderer.spell.getCombinedClasses(s,"fromClassList").forEach((c=>{let it=this._spells[c.source]=this._spells[c.source]||{};const lowName=c.name.toLowerCase();it=it[lowName]=it[lowName]||{};it=it[s.level]=it[s.level]||{};it[s.name]=1}))}))},_adjustSpellcasting(mon,crIn,crOut){const getSlotsAtLevel=(casterLvl,slotLvl)=>{if(casterLvl<slotLvl*2-1)return 0;switch(slotLvl){case 1:return casterLvl===1?2:casterLvl===2?3:4;case 2:return casterLvl===3?2:3;case 3:return casterLvl===5?2:3;case 4:return casterLvl===7?1:casterLvl===8?2:3;case 5:return casterLvl===9?1:casterLvl<18?2:3;case 6:return casterLvl>=19?2:1;case 7:return casterLvl===20?2:1;case 8:return 1;case 9:return 1}};if(!mon.spellcasting)return;const idealClvlIn=this._crToCasterLevel(crIn);const idealClvlOut=this._crToCasterLevel(crOut);const isWarlock=this._adjustSpellcasting_isWarlock(mon);let primaryInLevel=null;let primaryOutLevel=null;mon.spellcasting.forEach((sc=>{let spellsFromClass=null;if(sc.headerEntries){const inStr=JSON.stringify(sc.headerEntries);let anyChange=false;const outStr=inStr.replace(/(an?) (\d+)[A-Za-z]+-level/i,((...m)=>{const level=Number(m[2]);const outLevel=Math.max(1,Math.min(20,this._getScaledToRatio(level,idealClvlIn,idealClvlOut)));anyChange=level!==outLevel;if(anyChange){if(primaryInLevel==null)primaryInLevel=level;if(primaryOutLevel==null)primaryOutLevel=outLevel;return`${Parser.getArticle(outLevel)} ${Parser.spLevelToFull(outLevel)}-level`}else return m[0]}));const mClasses=/(artificer|bard|cleric|druid|paladin|ranger|sorcerer|warlock|wizard) spell(?:s)?/i.exec(outStr);if(mClasses)spellsFromClass=mClasses[1];else{const mClasses2=/(artificer|bard|cleric|druid|paladin|ranger|sorcerer|warlock|wizard)(?:'s)? spell list/i.exec(outStr);if(mClasses2)spellsFromClass=mClasses2[1]}if(anyChange)sc.headerEntries=JSON.parse(outStr)}let maxSpellLevel=null;if(primaryOutLevel){maxSpellLevel=Math.min(9,Math.ceil(primaryOutLevel/2));if(/paladin|ranger|warlock/i.exec(spellsFromClass)){maxSpellLevel=Math.min(5,primaryOutLevel)}}if(sc.spells&&primaryOutLevel!=null){const spells=sc.spells;const isWarlockCasting=/warlock/i.exec(spellsFromClass)&&Object.values(spells).filter((it=>it.slots&&it.lower)).length===1;if(spells[0]){const curCantrips=spells[0].spells.length;const idealCantripsIn=this._casterLevelAndClassToCantrips(primaryInLevel,spellsFromClass);const idealCantripsOut=this._casterLevelAndClassToCantrips(primaryOutLevel,spellsFromClass);const targetCantripCount=this._getScaledToRatio(curCantrips,idealCantripsIn,idealCantripsOut);if(curCantrips<targetCantripCount){const cantrips=Object.keys((this._spells[SRC_PHB][spellsFromClass.toLowerCase()]||{})[0]).map((it=>it.toLowerCase()));if(cantrips.length){const extraCantrips=[];const numNew=Math.min(targetCantripCount-curCantrips,cantrips.length);for(let n=0;n<numNew;++n){const ix=RollerUtil.roll(cantrips.length,this._rng);extraCantrips.push(cantrips[ix]);cantrips.splice(ix,1)}spells[0].spells=spells[0].spells.concat(extraCantrips.map((it=>`{@spell ${it}}`)))}}else{const keepThese=this._protectedCantrips.map((it=>`@spell ${it}`));while(spells[0].spells.length>targetCantripCount){const ixs=spells[0].spells.filterIndex((it=>!~keepThese.findIndex((x=>it.includes(x)))));if(ixs.length){const ix=RollerUtil.roll(ixs.length,this._rng);spells[0].spells.splice(ix,1)}else spells[0].spells.pop()}}}if(isWarlockCasting){const curCastingLevel=Object.keys(spells).find((k=>spells[k].lower));if(maxSpellLevel===Number(curCastingLevel))return;if(maxSpellLevel===0){Object.keys(spells).filter((lvl=>lvl!=="0")).forEach((lvl=>delete spells[lvl]));return}const numSpellsKnown=this._adjustSpellcasting_getWarlockNumSpellsKnown(primaryOutLevel);const warlockSpells=this._spells[SRC_PHB].warlock;let spellList=[];for(let i=1;i<maxSpellLevel+1;++i){spellList=spellList.concat(Object.keys(warlockSpells[i]).map((sp=>sp.toSpellCase())))}const spellsKnown=[];for(let i=0;i<numSpellsKnown;++i){const ix=RollerUtil.roll(spellList.length,this._rng);spellsKnown.push(spellList[ix]);spellList.splice(ix,1)}Object.keys(spells).filter((lvl=>lvl!=="0")).forEach((lvl=>delete spells[lvl]));const slots=this._adjustSpellcasting_getWarlockNumSpellSlots(maxSpellLevel);spells[maxSpellLevel]={slots:slots,lower:1,spells:[`A selection of ${maxSpellLevel===1?`{@filter 1st-level warlock spells|spells|level=${1}|class=warlock}.`:`{@filter 1st- to ${Parser.spLevelToFull(maxSpellLevel)}-level warlock spells|spells|level=${[...new Array(maxSpellLevel)].map(((_,i)=>i+1)).join(";")}|class=warlock}.`}  Examples include: ${spellsKnown.sort(SortUtil.ascSortLower).map((it=>`{@spell ${it}}`)).joinConjunct(", "," and ")}`]}}else{let lastRatio=1;for(let i=1;i<10;++i){const atLevel=spells[i];const idealSlotsIn=getSlotsAtLevel(primaryInLevel,i);const idealSlotsOut=getSlotsAtLevel(primaryOutLevel,i);if(atLevel){if(atLevel.slots){const adjustedSlotsOut=this._getScaledToRatio(atLevel.slots,idealSlotsIn,idealSlotsOut);lastRatio=adjustedSlotsOut/idealSlotsOut;atLevel.slots=adjustedSlotsOut;if(adjustedSlotsOut<=0){delete spells[i]}}}else if(i<=maxSpellLevel){const slots=Math.max(1,Math.round(idealSlotsOut*lastRatio));if(spellsFromClass&&(this._spells[SRC_PHB][spellsFromClass.toLowerCase()]||{})[i]){const examples=[];const levelSpells=Object.keys(this._spells[SRC_PHB][spellsFromClass.toLowerCase()][i]).map((it=>it.toSpellCase()));const numExamples=Math.min(5,levelSpells.length);for(let n=0;n<numExamples;++n){const ix=RollerUtil.roll(levelSpells.length,this._rng);examples.push(levelSpells[ix]);levelSpells.splice(ix,1)}spells[i]={slots:slots,spells:[`A selection of {@filter ${Parser.spLevelToFull(i)}-level ${spellsFromClass} spells|spells|level=${i}|class=${spellsFromClass}}. Examples include: ${examples.sort(SortUtil.ascSortLower).map((it=>`{@spell ${it}}`)).joinConjunct(", "," and ")}`]}}else{spells[i]={slots:slots,spells:[`A selection of {@filter ${Parser.spLevelToFull(i)}-level spells|spells|level=${i}}`]}}}else{delete spells[i]}}}}}));mon.spellcasting.forEach((sc=>{if(isWarlock&&sc.daily&&sc.daily["1e"]){const numArcanum=this._adjustSpellcasting_getWarlockNumArcanum(primaryOutLevel);const curNumSpells=sc.daily["1e"].length;if(sc.daily["1e"].length===numArcanum)return;if(numArcanum===0)return delete sc.daily["1e"];if(curNumSpells>numArcanum){const curSpells=sc.daily["1e"].map((it=>{const m=/{@spell ([^|}]+)(?:\|([^|}]+))?[|}]/.exec(it);if(m){const nameTag=m[1].toLowerCase();const srcTag=(m[2]||SRC_PHB).toLowerCase();const src=Object.keys(this._spells).find((it=>it.toLowerCase()===srcTag));if(src){const levelStr=Object.keys(this._spells[src].warlock||{}).find((lvl=>Object.keys((this._spells[src].warlock||{})[lvl]).some((nm=>nm.toLowerCase()===nameTag))));if(levelStr)return{original:it,level:Number(levelStr)}}}return{original:it,level:null}}));for(let i=9;i>5;--i){const ixToRemove=curSpells.map((it=>it.level===i?curSpells.indexOf(it):-1)).filter((it=>~it));while(ixToRemove.length&&curSpells.length>numArcanum){curSpells.splice(ixToRemove.pop(),1)}if(curSpells.length===numArcanum)break}sc.daily["1e"]=curSpells.map((it=>it.original))}else{for(let i=5+curNumSpells;i<5+numArcanum;++i){const rollOn=Object.keys(this._spells[SRC_PHB].warlock[i]);const ix=RollerUtil.roll(rollOn.length,this._rng);sc.daily["1e"].push(`{@spell ${rollOn[ix].toSpellCase()}}`)}sc.daily["1e"].sort(SortUtil.ascSortLower)}}}))},_adjustSpellcasting_isWarlock(mon){if(mon.spellcasting){return mon.spellcasting.some((sc=>sc.headerEntries&&/warlock spells?|warlock('s)? spell list/i.test(JSON.stringify(sc.headerEntries))))}},_adjustSpellcasting_getWarlockNumSpellsKnown(level){return level<=9?level+1:10+Math.ceil((level-10)/2)},_adjustSpellcasting_getWarlockNumSpellSlots(level){return level===1?1:level<11?2:level<17?3:4},_adjustSpellcasting_getWarlockNumArcanum(level){return level<11?0:level<13?1:level<15?2:level<17?3:4}};(typeof module!=="undefined"?global:window).ScaleSummonCreature={async scale(mon,toSpellLevel){mon=MiscUtil.copy(mon);if(!mon.summonedBySpell||mon._summonedBySpell_levelBase==null)return mon;ScaleSummonCreature._WALKER=ScaleSummonCreature._WALKER||MiscUtil.getWalker({keyBlacklist:MiscUtil.GENERIC_WALKER_ENTRIES_KEY_BLACKLIST});const state=new ScaleSummonCreature.State({});mon._displayName=`${mon.name} (${Parser.getOrdinalForm(toSpellLevel)}-Level Spell)`;this._scale_ac(mon,toSpellLevel,state);this._scale_hp(mon,toSpellLevel,state);this._scale_traits(mon,toSpellLevel,state);this._scale_actions(mon,toSpellLevel,state);this._scale_reactions(mon,toSpellLevel,state);mon._summonedBySpell_level=toSpellLevel;mon._scaledSummonLevel=toSpellLevel;mon._isScaledSummon=true;return mon},_scale_ac(mon,toSpellLevel,state){if(!mon.ac)return;mon.ac=mon.ac.map((it=>{if(!it.special)return it;it.special=it.special.replace(/(\d+)\s*\+\s*the level of the spell/g,((...m)=>Number(m[1])+toSpellLevel));const mSimpleNatural=/^(\d+) \(natural armor\)$/i.exec(it.special);if(mSimpleNatural){delete it.special;it.ac=Number(mSimpleNatural[1]);it.from=["natural armor"]}return it}))},_scale_hp(mon,toSpellLevel,state){if(!mon.hp?.special)return;mon.hp.special=mon.hp.special.replace(/(\d+)\s*\+\s*(\d+) for each spell level above (\d+)(?:st|nd|rd|th)/g,((...m)=>{const[,hpBase,hpPlus,spLevelMin]=m;return Number(hpBase)+Number(hpPlus)*(toSpellLevel-Number(spLevelMin))})).replace(/(ten) times the spell's level/g,((...m)=>{const[,numMult]=m;return Parser.textToNumber(numMult)*toSpellLevel}))},_scale_genericEntries(mon,toSpellLevel,state,prop){if(!mon[prop])return;mon[prop]=ScaleSummonCreature._WALKER.walk(mon[prop],{string:str=>{str=str.replace(/a number of attacks equal to half this spell's level \(rounded down\)/g,((...m)=>`${Parser.numberToText(Math.floor(toSpellLevel/2))} attacks`)).replace(/{@(?:dice|damage|hit|d20) [^}]+}/g,((...m)=>m[0].replace(/\bsummonSpellLevel\b/g,((...n)=>toSpellLevel))));return str}})},_scale_traits(mon,toSpellLevel,state){this._scale_genericEntries(mon,toSpellLevel,state,"trait")},_scale_actions(mon,toSpellLevel,state){this._scale_genericEntries(mon,toSpellLevel,state,"action")},_scale_reactions(mon,toSpellLevel,state){this._scale_genericEntries(mon,toSpellLevel,state,"reaction")},State:function(){},_WALKER:null};;
"use strict";class Hist{static hashChange(forceLoad){if(Hist.isHistorySuppressed){Hist.setSuppressHistory(false);return}const[link,...sub]=Hist.getHashParts();let blankFilterLoad=false;if(link!==Hist.lastLoadedLink||sub.length===0||forceLoad){Hist.lastLoadedLink=link;if(link===HASH_BLANK){blankFilterLoad=true}else{const listItem=Hist.getActiveListItem(link);if(listItem==null){if(typeof pHandleUnknownHash==="function"&&window.location.hash.length&&Hist._lastUnknownLink!==link){Hist._lastUnknownLink=link;pHandleUnknownHash(link,sub);return}else{Hist._freshLoad();return}}const toLoad=listItem.ix;if(toLoad===undefined)Hist._freshLoad();else{Hist.lastLoadedId=listItem.ix;loadHash(listItem.ix);document.title=`${listItem.name?`${listItem.name} - `:""}5etools`}}}if(typeof loadSubHash==="function"&&(sub.length>0||forceLoad))loadSubHash(sub);if(blankFilterLoad)Hist._freshLoad()}static init(initialLoadComplete){window.onhashchange=Hist.hashChange;if(window.location.hash.length){Hist.hashChange()}else{Hist._freshLoad()}if(initialLoadComplete)Hist.initialLoad=false}static setSuppressHistory(val){Hist.isHistorySuppressed=val}static getSelectedListItem(){const[link]=Hist.getHashParts();return Hist.getActiveListItem(link)}static getSelectedListElementWithLocation(){const[link]=Hist.getHashParts();return Hist.getActiveListItem(link,true)}static getHashParts(){return Hist.util.getHashParts(window.location.hash)}static getActiveListItem(link,getIndex){const primaryLists=ListUtil.getPrimaryLists();if(primaryLists&&primaryLists.length){for(let x=0;x<primaryLists.length;++x){const list=primaryLists[x];const foundItemIx=list.items.findIndex((it=>it.values.hash===link));if(~foundItemIx){if(getIndex)return{item:list.items[foundItemIx],x:x,y:foundItemIx,list:list};return list.items[foundItemIx]}}}}static _freshLoad(){setTimeout((()=>{const goTo=$("#listcontainer").find(".list a").attr("href");if(goTo){const parts=location.hash.split(HASH_PART_SEP);const fullHash=`${goTo}${parts.length>1?`${HASH_PART_SEP}${parts.slice(1).join(HASH_PART_SEP)}`:""}`;location.replace(fullHash)}}),1)}static cleanSetHash(toSet){window.location.hash=Hist.util.getCleanHash(toSet)}static getHashSource(){const[link]=Hist.getHashParts();return link?link.split(HASH_LIST_SEP).last():null}static getSubHash(key){return Hist.util.getSubHash(window.location.hash,key)}static setSubhash(key,val){const nxtHash=Hist.util.setSubhash(window.location.hash,key,val);Hist.cleanSetHash(nxtHash)}static setMainHash(hash){const subHashPart=Hist.util.getHashParts(window.location.hash,key,val).slice(1).join(HASH_PART_SEP);Hist.cleanSetHash([hash,subHashPart].filter(Boolean).join(HASH_PART_SEP))}static replaceHistoryHash(hash){window.history.replaceState({},document.title,`${location.origin}${location.pathname}#${hash}`)}}Hist.lastLoadedLink=null;Hist._lastUnknownLink=null;Hist.lastLoadedId=null;Hist.initialLoad=true;Hist.isHistorySuppressed=false;Hist.util=class{static getCleanHash(hash){return hash.replace(/,+/g,",").replace(/,$/,"").toLowerCase()}static getHashParts(location){if(location[0]==="#")location=location.slice(1);return location.toLowerCase().replace(/%27/g,"'").split(HASH_PART_SEP)}static getSubHash(location,key){const[link,...sub]=Hist.util.getHashParts(location);const hKey=`${key}${HASH_SUB_KV_SEP}`;const part=sub.find((it=>it.startsWith(hKey)));if(part)return part.slice(hKey.length);return null}static setSubhash(location,key,val){if(key.endsWith(HASH_SUB_KV_SEP))key=key.slice(0,-1);const[link,...sub]=Hist.util.getHashParts(location);if(!link)return"";const hKey=`${key}${HASH_SUB_KV_SEP}`;const out=[link];if(sub.length)sub.filter((it=>!it.startsWith(hKey))).forEach((it=>out.push(it)));if(val!=null)out.push(`${hKey}${val}`);return Hist.util.getCleanHash(out.join(HASH_PART_SEP))}};if(typeof module!=="undefined"){module.exports={Hist:Hist}}
